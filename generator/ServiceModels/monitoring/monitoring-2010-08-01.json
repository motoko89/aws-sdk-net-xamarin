{
  "version": "1.0",
  "type": "query",
  "result_wrapped": true,
  "signature_version": "v4",
  "service_full_name": "Amazon CloudWatch",
  "service_abbreviation": "CloudWatch",
  "service_id": "CloudWatch",
  "uid": "monitoring-2010-08-01",
  "endpoint_prefix": "monitoring",
  "api_version": "2010-08-01",
  "xmlnamespace": "http://monitoring.amazonaws.com/doc/2010-08-01/",
  "documentation": "\n\t\t       <p>Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the\n\t\t\tapplications you run on AWS in real time. You can use CloudWatch to collect and track\n\t\t\tmetrics, which are the variables you want to measure for your resources and\n\t\t\tapplications.</p>\n\n\t\t       <p>CloudWatch alarms send notifications or automatically change the resources\n\t\t\tyou are monitoring based on rules that you define. For example, you can monitor the CPU\n\t\t\tusage and disk reads and writes of your Amazon EC2\n\t\t\tinstances. Then, use this data to determine whether you should launch additional\n\t\t\tinstances to handle increased load. You can also use this data to stop under-used\n\t\t\tinstances to save money.</p>\n\n\t\t       <p>In addition to monitoring the built-in metrics that come with AWS, you can monitor\n\t\t\tyour own custom metrics. With CloudWatch, you gain system-wide visibility into resource\n\t\t\tutilization, application performance, and operational health.</p>\n\t     ",
  "operations": {
    "PutMetricData": {
      "name": "PutMetricData",
      "input": {
        "type": "structure",
        "members": {
          "Namespace": {
            "type": "string",
            "pattern": "[^:].*",
            "zonbookDocumentation": "\n\t\t       <simpara>The namespace for the metric data.</simpara>\n\t\t       <simpara>You cannot specify a namespace that begins with \"AWS/\". Namespaces that begin\n\t\t\twith \"AWS/\" are reserved for use by Amazon Web Services products.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The namespace for the metric data.</p>\n\t\t       <p>You cannot specify a namespace that begins with \"AWS/\". Namespaces that begin\n\t\t\twith \"AWS/\" are reserved for use by Amazon Web Services products.</p>\n\t     ",
            "required": true,
            "shape_name": "Namespace",
            "min_length": 1,
            "max_length": 255
          },
          "MetricData": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The data for the metric. The array can include no more than 20 metrics per call.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The data for the metric. The array can include no more than 20 metrics per call.</p>\n\t     ",
            "required": true,
            "shape_name": "MetricData",
            "members": {
              "type": "structure",
              "members": {
                "MetricName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
                  "required": true,
                  "shape_name": "MetricName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Dimensions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The dimensions associated with the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The dimensions associated with the metric.</p>\n\t     ",
                  "shape_name": "Dimensions",
                  "max_length": 10,
                  "members": {
                    "type": "structure",
                    "members": {
                      "Name": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionValue",
                        "min_length": 1,
                        "max_length": 255
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                    "shape_name": "Dimension",
                    "member_order": [
                      "Name",
                      "Value"
                    ]
                  }
                },
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "Value": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value for the metric.</simpara>\n\t\t       <simpara>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or\n\t\t\ttoo large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or\n\t\t\t2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity)\n\t\t\tare not supported.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value for the metric.</p>\n\t\t       <p>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or\n\t\t\ttoo large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or\n\t\t\t2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity)\n\t\t\tare not supported.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "StatisticValues": {
                  "type": "structure",
                  "members": {
                    "SampleCount": {
                      "type": "double",
                      "zonbookDocumentation": "\n\t\t       <simpara>The number of samples used for the statistic set.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The number of samples used for the statistic set.</p>\n\t     ",
                      "required": true,
                      "shape_name": "DatapointValue"
                    },
                    "Sum": {
                      "type": "double",
                      "zonbookDocumentation": "\n\t\t       <simpara>The sum of values for the sample set.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The sum of values for the sample set.</p>\n\t     ",
                      "required": true,
                      "shape_name": "DatapointValue"
                    },
                    "Minimum": {
                      "type": "double",
                      "zonbookDocumentation": "\n\t\t       <simpara>The minimum value of the sample set.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The minimum value of the sample set.</p>\n\t     ",
                      "required": true,
                      "shape_name": "DatapointValue"
                    },
                    "Maximum": {
                      "type": "double",
                      "zonbookDocumentation": "\n\t\t       <simpara>The maximum value of the sample set.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The maximum value of the sample set.</p>\n\t     ",
                      "required": true,
                      "shape_name": "DatapointValue"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <simpara>The statistical values for the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The statistical values for the metric.</p>\n\t     ",
                  "shape_name": "StatisticSet"
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>Array of numbers representing the values for the metric during the period. Each unique value is listed just once\n\t\tin this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period.\n\t\tYou can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</para>\n\t\t       <simpara>Although the <code>Values</code> array accepts numbers of type\n\t\t\t<code>Double</code>, CloudWatch rejects values that are either too small\n\t\t\tor too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base\n\t\t\t10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity,\n\t\t\t-Infinity) are not supported.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Array of numbers representing the values for the metric during the period. Each unique value is listed just once\n\t\tin this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period.\n\t\tYou can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</p>\n\t\t       <p>Although the <code>Values</code> array accepts numbers of type\n\t\t\t<code>Double</code>, CloudWatch rejects values that are either too small\n\t\t\tor too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base\n\t\t\t10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity,\n\t\t\t-Infinity) are not supported.</p>\n\t     ",
                  "shape_name": "Values",
                  "members": {
                    "type": "double",
                    "shape_name": "DatapointValue",
                    "documentation": null
                  }
                },
                "Counts": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array \n\t\t\tis the number of times the corresponding value in the <code>Values</code> array occurred during the period. </para>\n\t\t       <para>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you\n\t\tinclude a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array \n\t\t\tis the number of times the corresponding value in the <code>Values</code> array occurred during the period. </p>\n\t\t       <p>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you\n\t\tinclude a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</p>\n\t     ",
                  "shape_name": "Counts",
                  "members": {
                    "type": "double",
                    "shape_name": "DatapointValue",
                    "documentation": null
                  }
                },
                "Unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The unit of the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The unit of the metric.</p>\n\t     ",
                  "shape_name": "StandardUnit"
                },
                "StorageResolution": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t\n\n\t\t       <simpara>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with \n\t\t\tsub-minute resolution down to one second.\n\t\tSetting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available\n\t\tonly for custom metrics. For more information about high-resolution metrics, \n\t\t\tsee <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics\">High-Resolution Metrics</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.\n\t\t</simpara>\n\t        <simpara>This field is optional, if you do not specify it the default of 60 is used.</simpara>\n\t     ",
                  "documentation": "\n\t\t\n\n\t\t       <p>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with \n\t\t\tsub-minute resolution down to one second.\n\t\tSetting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available\n\t\tonly for custom metrics. For more information about high-resolution metrics, \n\t\t\tsee <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics\">High-Resolution Metrics</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.\n\t\t</p>\n\t        <p>This field is optional, if you do not specify it the default of 60 is used.</p>\n\t     ",
                  "shape_name": "StorageResolution",
                  "min_length": 1
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Encapsulates the information sent to either create a metric or add new values\n\t\t\tto be aggregated into an existing metric.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Encapsulates the information sent to either create a metric or add new values\n\t\t\tto be aggregated into an existing metric.</p>\n\t     ",
              "shape_name": "MetricDatum"
            }
          }
        },
        "shape_name": "PutMetricDataInput",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>An input parameter that is required is missing.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>An input parameter that is required is missing.</p>\n\t     ",
          "shape_name": "MissingRequiredParameterException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Parameters were used together that cannot be used together.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Parameters were used together that cannot be used together.</p>\n\t     ",
          "shape_name": "InvalidParameterCombinationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Publishes metric data to Amazon CloudWatch. CloudWatch associates\n\t\t\tthe data with the specified metric. If the specified metric does not exist,\n\t\t\tCloudWatch creates the metric. When CloudWatch creates a metric, it can\n\t\t\ttake up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.</p>\n\t\t       <p>You can publish either individual data points in the <code>Value</code> field, or \n\t\tarrays of values and the number of times each value occurred during the period by using the \n\t\t<code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code> structure. Using\n\t\tthe <code>Values</code> and <code>Counts</code> method enables you to publish up to 150 values per metric\n\t\t\twith one <code>PutMetricData</code> request, and\n\t\tsupports retrieving percentile statistics on this data.</p>\n\t\t       <p>Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST requests. You can \n\t\t\tsend a payload compressed by gzip. Each request\n\t\tis also limited to no more than 20 different metrics.</p>\n\t\t       <p>Although the <code>Value</code> parameter accepts numbers of type\n\t\t\t<code>Double</code>, CloudWatch rejects values that are either too small\n\t\t\tor too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base\n\t\t\t10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity,\n\t\t\t-Infinity) are not supported.</p>\n\t\t       <p>You can use up to 10 dimensions per metric to further clarify what data the metric collects. For more information about specifying dimensions, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publishing Metrics</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\n\t\t       <p>Data points with time stamps from 24 hours ago or longer can take at least 48\n\t\t\thours to become available for <a>GetMetricData</a> or <a>GetMetricStatistics</a> from the time they \n\t\t\tare submitted.</p>\n\t\t       <p>CloudWatch needs raw data points to calculate percentile statistics. These raw data points\n\t\t\tcould be published individually or as part of <code>Values</code> \n\t\t\tand <code>Counts</code> arrays. If you publish \n\t\t\tdata using statistic sets in the <code>StatisticValues</code> field instead, you can only retrieve \n\t\t\tpercentile statistics for this data if one of the following conditions is true:</p>\n\t\t\t      <ul>\n            <li>\n               <p>The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>,\n\t\t\t\t\t<code>Max</code>, and <code>Sum</code> are all equal.</p>\n            </li>\n            <li>\n               <p>The <code>Min</code> and\n\t\t\t\t\t<code>Max</code> are equal, and <code>Sum</code> is equal to <code>Min</code> \n\t\t\t\t\tmultiplied by <code>SampleCount</code>.</p>\n            </li>\n         </ul>\t\t\t\t\t\n\t\t\t\n\n\t\t\n\n\t     "
    },
    "GetMetricData": {
      "name": "GetMetricData",
      "input": {
        "type": "structure",
        "members": {
          "Defaults": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A short name used to tie this structure to the results in the response. This name must be\n\t\t\tunique within a single call to <code>GetMetricData</code>. If you are performing math\n\t\t\texpressions on this set of data, this name represents that data and can serve as a\n\t\t\tvariable in the mathematical expression. The valid characters are letters, numbers, and\n\t\t\tunderscore. The first character must be a lowercase letter.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A short name used to tie this structure to the results in the response. This name must be\n\t\t\tunique within a single call to <code>GetMetricData</code>. If you are performing math\n\t\t\texpressions on this set of data, this name represents that data and can serve as a\n\t\t\tvariable in the mathematical expression. The valid characters are letters, numbers, and\n\t\t\tunderscore. The first character must be a lowercase letter.</p>\n\t     ",
                "required": true,
                "shape_name": "MetricId",
                "min_length": 1,
                "max_length": 255
              },
              "MetricStat": {
                "type": "structure",
                "members": {
                  "Metric": {
                    "type": "structure",
                    "members": {
                      "Namespace": {
                        "type": "string",
                        "pattern": "[^:].*",
                        "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The namespace of the metric.</p>\n\t     ",
                        "shape_name": "Namespace",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "MetricName": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
                        "shape_name": "MetricName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Dimensions": {
                        "type": "list",
                        "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The dimensions for the metric.</p>\n\t     ",
                        "shape_name": "Dimensions",
                        "max_length": 10,
                        "members": {
                          "type": "structure",
                          "members": {
                            "Name": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                              "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                              "required": true,
                              "shape_name": "DimensionName",
                              "min_length": 1,
                              "max_length": 255
                            },
                            "Value": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                              "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                              "required": true,
                              "shape_name": "DimensionValue",
                              "min_length": 1,
                              "max_length": 255
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                          "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                          "shape_name": "Dimension",
                          "member_order": [
                            "Name",
                            "Value"
                          ]
                        }
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <para>The metric to return, including the metric name, namespace, and dimensions.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The metric to return, including the metric name, namespace, and dimensions.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Metric",
                    "member_order": [
                      "Namespace",
                      "MetricName",
                      "Dimensions"
                    ]
                  },
                  "Period": {
                    "type": "integer",
                    "zonbookDocumentation": "\n\t\t       <para>The period to use when retrieving the metric.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The period to use when retrieving the metric.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Period",
                    "min_length": 1
                  },
                  "Stat": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>The statistic to return. It can include any CloudWatch statistic or extended statistic.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The statistic to return. It can include any CloudWatch statistic or extended statistic.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Stat"
                  },
                  "Unit": {
                    "type": "string",
                    "enum": [
                      "Seconds",
                      "Microseconds",
                      "Milliseconds",
                      "Bytes",
                      "Kilobytes",
                      "Megabytes",
                      "Gigabytes",
                      "Terabytes",
                      "Bits",
                      "Kilobits",
                      "Megabits",
                      "Gigabits",
                      "Terabits",
                      "Percent",
                      "Count",
                      "Bytes/Second",
                      "Kilobytes/Second",
                      "Megabytes/Second",
                      "Gigabytes/Second",
                      "Terabytes/Second",
                      "Bits/Second",
                      "Kilobits/Second",
                      "Megabits/Second",
                      "Gigabits/Second",
                      "Terabits/Second",
                      "Count/Second",
                      "None"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>The unit to use for the returned data points.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The unit to use for the returned data points.</p>\n\t     ",
                    "shape_name": "StandardUnit"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The metric to be returned, along with statistics, period, and units. Use this parameter only if this structure is performing a data retrieval \n\t\t\tand not performing a math expression on the returned data.</para>\n\t\t       <para>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The metric to be returned, along with statistics, period, and units. Use this parameter only if this structure is performing a data retrieval \n\t\t\tand not performing a math expression on the returned data.</p>\n\t\t       <p>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</p>\n\t     ",
                "shape_name": "MetricStat"
              },
              "Expression": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The math expression to be performed on the returned data, if this structure is performing a math expression. For more information about metric math expressions, see \n\t\t\t<ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.</para>\n\t\t       <para>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The math expression to be performed on the returned data, if this structure is performing a math expression. For more information about metric math expressions, see \n\t\t\t<a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\t\t       <p>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</p>\n\t     ",
                "shape_name": "MetricExpression",
                "min_length": 1,
                "max_length": 1024
              },
              "Label": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know\n\t\t\twhat the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch \n\t\t\tgenerates a default.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know\n\t\t\twhat the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch \n\t\t\tgenerates a default.</p>\n\t     ",
                "shape_name": "MetricLabel"
              },
              "ReturnData": {
                "type": "boolean",
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether to return the time stamps and raw data values of this metric. If you are performing this call just to \n\t\t\tdo math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of \n\t\t\t<code>True</code> is used.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether to return the time stamps and raw data values of this metric. If you are performing this call just to \n\t\t\tdo math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of \n\t\t\t<code>True</code> is used.</p>\n\t     ",
                "shape_name": "ReturnData"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>This structure indicates the metric data to return, and whether this call is just retrieving\n\t\t\ta batch set of data for one metric, or is performing a math expression on metric data. A\n\t\t\tsingle <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code>\n\t\t\tstructures.</para>\n\t     ",
            "documentation": "\n\t\t       <p>This structure indicates the metric data to return, and whether this call is just retrieving\n\t\t\ta batch set of data for one metric, or is performing a math expression on metric data. A\n\t\t\tsingle <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code>\n\t\t\tstructures.</p>\n\t     ",
            "internalonly": true,
            "shape_name": "MetricDataQuery"
          },
          "MetricDataQueries": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code>\n\t\tstructures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. </para>\n\t     ",
            "documentation": "\n\t\t       <p>The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code>\n\t\tstructures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. </p>\n\t     ",
            "required": true,
            "shape_name": "MetricDataQueries",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A short name used to tie this structure to the results in the response. This name must be\n\t\t\tunique within a single call to <code>GetMetricData</code>. If you are performing math\n\t\t\texpressions on this set of data, this name represents that data and can serve as a\n\t\t\tvariable in the mathematical expression. The valid characters are letters, numbers, and\n\t\t\tunderscore. The first character must be a lowercase letter.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A short name used to tie this structure to the results in the response. This name must be\n\t\t\tunique within a single call to <code>GetMetricData</code>. If you are performing math\n\t\t\texpressions on this set of data, this name represents that data and can serve as a\n\t\t\tvariable in the mathematical expression. The valid characters are letters, numbers, and\n\t\t\tunderscore. The first character must be a lowercase letter.</p>\n\t     ",
                  "required": true,
                  "shape_name": "MetricId",
                  "min_length": 1,
                  "max_length": 255
                },
                "MetricStat": {
                  "type": "structure",
                  "members": {
                    "Metric": {
                      "type": "structure",
                      "members": {
                        "Namespace": {
                          "type": "string",
                          "pattern": "[^:].*",
                          "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric.</simpara>\n\t     ",
                          "documentation": "\n\t\t       <p>The namespace of the metric.</p>\n\t     ",
                          "shape_name": "Namespace",
                          "min_length": 1,
                          "max_length": 255
                        },
                        "MetricName": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
                          "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
                          "shape_name": "MetricName",
                          "min_length": 1,
                          "max_length": 255
                        },
                        "Dimensions": {
                          "type": "list",
                          "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric.</simpara>\n\t     ",
                          "documentation": "\n\t\t       <p>The dimensions for the metric.</p>\n\t     ",
                          "shape_name": "Dimensions",
                          "max_length": 10,
                          "members": {
                            "type": "structure",
                            "members": {
                              "Name": {
                                "type": "string",
                                "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                                "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                                "required": true,
                                "shape_name": "DimensionName",
                                "min_length": 1,
                                "max_length": 255
                              },
                              "Value": {
                                "type": "string",
                                "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                                "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                                "required": true,
                                "shape_name": "DimensionValue",
                                "min_length": 1,
                                "max_length": 255
                              }
                            },
                            "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                            "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                            "shape_name": "Dimension",
                            "member_order": [
                              "Name",
                              "Value"
                            ]
                          }
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The metric to return, including the metric name, namespace, and dimensions.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The metric to return, including the metric name, namespace, and dimensions.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Metric",
                      "member_order": [
                        "Namespace",
                        "MetricName",
                        "Dimensions"
                      ]
                    },
                    "Period": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The period to use when retrieving the metric.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The period to use when retrieving the metric.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Period",
                      "min_length": 1
                    },
                    "Stat": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The statistic to return. It can include any CloudWatch statistic or extended statistic.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The statistic to return. It can include any CloudWatch statistic or extended statistic.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Stat"
                    },
                    "Unit": {
                      "type": "string",
                      "enum": [
                        "Seconds",
                        "Microseconds",
                        "Milliseconds",
                        "Bytes",
                        "Kilobytes",
                        "Megabytes",
                        "Gigabytes",
                        "Terabytes",
                        "Bits",
                        "Kilobits",
                        "Megabits",
                        "Gigabits",
                        "Terabits",
                        "Percent",
                        "Count",
                        "Bytes/Second",
                        "Kilobytes/Second",
                        "Megabytes/Second",
                        "Gigabytes/Second",
                        "Terabytes/Second",
                        "Bits/Second",
                        "Kilobits/Second",
                        "Megabits/Second",
                        "Gigabits/Second",
                        "Terabits/Second",
                        "Count/Second",
                        "None"
                      ],
                      "zonbookDocumentation": "\n\t\t       <para>The unit to use for the returned data points.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The unit to use for the returned data points.</p>\n\t     ",
                      "shape_name": "StandardUnit"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The metric to be returned, along with statistics, period, and units. Use this parameter only if this structure is performing a data retrieval \n\t\t\tand not performing a math expression on the returned data.</para>\n\t\t       <para>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The metric to be returned, along with statistics, period, and units. Use this parameter only if this structure is performing a data retrieval \n\t\t\tand not performing a math expression on the returned data.</p>\n\t\t       <p>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</p>\n\t     ",
                  "shape_name": "MetricStat"
                },
                "Expression": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The math expression to be performed on the returned data, if this structure is performing a math expression. For more information about metric math expressions, see \n\t\t\t<ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.</para>\n\t\t       <para>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The math expression to be performed on the returned data, if this structure is performing a math expression. For more information about metric math expressions, see \n\t\t\t<a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\t\t       <p>Within one MetricDataQuery structure, you must specify either \n\t\t\t<code>Expression</code> or <code>MetricStat</code> but not both.</p>\n\t     ",
                  "shape_name": "MetricExpression",
                  "min_length": 1,
                  "max_length": 1024
                },
                "Label": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know\n\t\t\twhat the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch \n\t\t\tgenerates a default.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know\n\t\t\twhat the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch \n\t\t\tgenerates a default.</p>\n\t     ",
                  "shape_name": "MetricLabel"
                },
                "ReturnData": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n\t\t       <para>Indicates whether to return the time stamps and raw data values of this metric. If you are performing this call just to \n\t\t\tdo math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of \n\t\t\t<code>True</code> is used.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Indicates whether to return the time stamps and raw data values of this metric. If you are performing this call just to \n\t\t\tdo math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of \n\t\t\t<code>True</code> is used.</p>\n\t     ",
                  "shape_name": "ReturnData"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>This structure indicates the metric data to return, and whether this call is just retrieving\n\t\t\ta batch set of data for one metric, or is performing a math expression on metric data. A\n\t\t\tsingle <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code>\n\t\t\tstructures.</para>\n\t     ",
              "documentation": "\n\t\t       <p>This structure indicates the metric data to return, and whether this call is just retrieving\n\t\t\ta batch set of data for one metric, or is performing a math expression on metric data. A\n\t\t\tsingle <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code>\n\t\t\tstructures.</p>\n\t     ",
              "shape_name": "MetricDataQuery"
            }
          },
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <para>The time stamp indicating the earliest data to be returned.</para>\n\t\t       <para>For better performance, specify <code>StartTime</code> and <code>EndTime</code>\n\t\tvalues that align with the value of the metric's <code>Period</code> and sync up with\n\t\tthe beginning and end of an hour. For example, if the <code>Period</code> of a metric\n\t\tis 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response\n\t\t\tfrom CloudWatch then setting 12:07 or 12:29 as the <code>StartTime</code>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The time stamp indicating the earliest data to be returned.</p>\n\t\t       <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code>\n\t\tvalues that align with the value of the metric's <code>Period</code> and sync up with\n\t\tthe beginning and end of an hour. For example, if the <code>Period</code> of a metric\n\t\tis 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response\n\t\t\tfrom CloudWatch then setting 12:07 or 12:29 as the <code>StartTime</code>.</p>\n\t     ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <para>The time stamp indicating the latest data to be returned.</para>\n\t\t       <para>For better performance, specify <code>StartTime</code> and <code>EndTime</code>\n\t\t\tvalues that align with the value of the metric's <code>Period</code> and sync up with\n\t\t\tthe beginning and end of an hour. For example, if the <code>Period</code> of a metric\n\t\t\tis 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response\n\t\t\tfrom CloudWatch then setting 12:07 or 12:29 as the <code>EndTime</code>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The time stamp indicating the latest data to be returned.</p>\n\t\t       <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code>\n\t\t\tvalues that align with the value of the metric's <code>Period</code> and sync up with\n\t\t\tthe beginning and end of an hour. For example, if the <code>Period</code> of a metric\n\t\t\tis 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response\n\t\t\tfrom CloudWatch then setting 12:07 or 12:29 as the <code>EndTime</code>.</p>\n\t     ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Include this value, if it was returned by the previous call, to get the next set of data points.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Include this value, if it was returned by the previous call, to get the next set of data points.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          },
          "ScanBy": {
            "type": "string",
            "enum": [
              "TimestampDescending",
              "TimestampAscending"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates\n\t\t\twhen the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates\n\t\t\twhen the <code>MaxDatapoints</code> limit is reached.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates\n\t\t\twhen the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates\n\t\t\twhen the <code>MaxDatapoints</code> limit is reached.</p>\n\t     ",
            "shape_name": "ScanBy"
          },
          "MaxDatapoints": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of data points the request should return before paginating. If you omit\n\t\t\tthis, the default of 100,800 is used.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of data points the request should return before paginating. If you omit\n\t\t\tthis, the default of 100,800 is used.</p>\n\t     ",
            "shape_name": "GetMetricDataMaxDatapoints"
          }
        },
        "shape_name": "GetMetricDataInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "MetricDataResults": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The metrics that are returned, including the metric name, namespace, and dimensions.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The metrics that are returned, including the metric name, namespace, and dimensions.</p>\n\t     ",
            "shape_name": "MetricDataResults",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The short name you specified to represent this metric.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The short name you specified to represent this metric.</p>\n\t     ",
                  "shape_name": "MetricId",
                  "min_length": 1,
                  "max_length": 255
                },
                "Label": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The human-readable label associated with the data.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The human-readable label associated with the data.</p>\n\t     ",
                  "shape_name": "MetricLabel"
                },
                "Timestamps": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>The time stamps for the data points, formatted in Unix timestamp format. The number of time\n\t\t\tstamps always matches the number of values and the value for Timestamps[x] is\n\t\t\tValues[x].</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamps for the data points, formatted in Unix timestamp format. The number of time\n\t\t\tstamps always matches the number of values and the value for Timestamps[x] is\n\t\t\tValues[x].</p>\n\t     ",
                  "shape_name": "Timestamps",
                  "members": {
                    "type": "timestamp",
                    "shape_name": "Timestamp",
                    "documentation": null
                  }
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>The data points for the metric corresponding to <code>Timestamps</code>. The number of\n\t\t\tvalues always matches the number of time stamps and the time stamp for Values[x] is\n\t\t\tTimestamps[x].</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The data points for the metric corresponding to <code>Timestamps</code>. The number of\n\t\t\tvalues always matches the number of time stamps and the time stamp for Values[x] is\n\t\t\tTimestamps[x].</p>\n\t     ",
                  "shape_name": "DatapointValues",
                  "members": {
                    "type": "double",
                    "shape_name": "DatapointValue",
                    "documentation": null
                  }
                },
                "StatusCode": {
                  "type": "string",
                  "enum": [
                    "Complete",
                    "InternalError",
                    "PartialData"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>The status of the returned data. <code>Complete</code> indicates that all data points in the requested time range were returned. \n\t\t\t<code>PartialData</code> means that an incomplete set of data points were returned. \n\t\t\t\t\tYou can use the <code>NextToken</code> value that was returned and repeat your request to get more data points. \n\t\t\t<code>NextToken</code> is not returned if you are performing a math expression. <code>InternalError</code>  \n\t\t\tindicates that an error occurred. Retry your request using <code>NextToken</code>, if present.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The status of the returned data. <code>Complete</code> indicates that all data points in the requested time range were returned. \n\t\t\t<code>PartialData</code> means that an incomplete set of data points were returned. \n\t\t\t\t\tYou can use the <code>NextToken</code> value that was returned and repeat your request to get more data points. \n\t\t\t<code>NextToken</code> is not returned if you are performing a math expression. <code>InternalError</code>  \n\t\t\tindicates that an error occurred. Retry your request using <code>NextToken</code>, if present.</p>\n\t     ",
                  "shape_name": "StatusCode"
                },
                "Messages": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>A list of messages with additional information about the data returned.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A list of messages with additional information about the data returned.</p>\n\t     ",
                  "shape_name": "MetricDataResultMessages",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Code": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <para>The error code or status code associated with the message.</para>\n\t     ",
                        "documentation": "\n\t\t       <p>The error code or status code associated with the message.</p>\n\t     ",
                        "shape_name": "MessageDataCode"
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <para>The message text.</para>\n\t     ",
                        "documentation": "\n\t\t       <p>The message text.</p>\n\t     ",
                        "shape_name": "MessageDataValue"
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <para>A message returned by the <code>GetMetricData</code>API, including a code and a description.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A message returned by the <code>GetMetricData</code>API, including a code and a description.</p>\n\t     ",
                    "shape_name": "MessageData"
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code> structures. Each of these structures\n\t\tincludes the data points for that metric, along with the time stamps of those data points and other identifying information.</para>\n\t     ",
              "documentation": "\n\t\t       <p>A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code> structures. Each of these structures\n\t\tincludes the data points for that metric, along with the time stamps of those data points and other identifying information.</p>\n\t     ",
              "shape_name": "MetricDataResult"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A token that marks the next batch of returned results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A token that marks the next batch of returned results.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "GetMetricDataOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The next token specified is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The next token specified is invalid.</p>\n\t     ",
          "shape_name": "InvalidNextToken"
        }
      ],
      "documentation": "\n\t\t       <p>You can use the <code>GetMetricData</code> API to retrieve as many as 100 different\n\t\t\tmetrics in a single request, with a total of as many as 100,800 datapoints. You can also\n\t\t\toptionally perform math expressions on the values of the returned statistics, to create\n\t\t\tnew time series that represent new insights into your data. For example, using Lambda\n\t\t\tmetrics, you could divide the Errors metric by the Invocations metric to get an error\n\t\t\trate time series. For more information about metric math expressions, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User\n\t\t\t\tGuide</i>.</p>\n\t\t\n\t\t       <p>Calls to the <code>GetMetricData</code> API have a different pricing structure than \n\t\t\tcalls to <code>GetMetricStatistics</code>. For more information about pricing, see \n\t\t\t<a href=\"https://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch Pricing</a>.</p>\n\n\t\t       <p>Amazon CloudWatch retains metric data as follows:</p>\n\t\t       <ul>\n            <li>\n               <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution\n\t\t\t\tmetrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p>\n            </li>\n         </ul>\n\t\t       <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect \n\t\t\tdata using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, \n\t\t\tbut is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with \n\t\t\ta resolution of 1 hour.</p>\n\t\n\t\t\n\t     "
    },
    "GetMetricStatistics": {
      "name": "GetMetricStatistics",
      "input": {
        "type": "structure",
        "members": {
          "Namespace": {
            "type": "string",
            "pattern": "[^:].*",
            "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric, with or without spaces.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The namespace of the metric, with or without spaces.</p>\n\t     ",
            "required": true,
            "shape_name": "Namespace",
            "min_length": 1,
            "max_length": 255
          },
          "MetricName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric, with or without spaces.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the metric, with or without spaces.</p>\n\t     ",
            "required": true,
            "shape_name": "MetricName",
            "min_length": 1,
            "max_length": 255
          },
          "Dimensions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric.\n\t\t    If a specific combination of dimensions was not published, you can't retrieve statistics for it.\n\t\t    You must specify the same dimensions that were used when the metrics were created. For an example,\n\t\t    see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations\">Dimension Combinations</ulink> in the <emphasis>Amazon CloudWatch User Guide</emphasis>. For more information about specifying dimensions, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publishing Metrics</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric.\n\t\t    If a specific combination of dimensions was not published, you can't retrieve statistics for it.\n\t\t    You must specify the same dimensions that were used when the metrics were created. For an example,\n\t\t    see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations\">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publishing Metrics</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\t     ",
            "shape_name": "Dimensions",
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionValue",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
              "shape_name": "Dimension",
              "member_order": [
                "Name",
                "Value"
              ]
            }
          },
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The time stamp that determines the first data point to return. Start times are \n\t\t\tevaluated relative to the time that CloudWatch receives the request.</simpara>\n\t        <simpara>The value specified is inclusive; results include data points with the specified time stamp. \n\t\t\tThe time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</simpara>\n\t\t       <simpara>CloudWatch rounds the specified time stamp as follows:</simpara>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <simpara>Start time less than 15 days ago - Round down to the nearest whole minute.\n\t\t\t    For example, 12:32:34 is rounded down to 12:32:00.</simpara>\n            </listitem>\n\t\t\t         <listitem>\n               <simpara>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.\n\t\t\t    For example, 12:32:34 is rounded down to 12:30:00.</simpara>\n            </listitem>\n\t\t\t         <listitem>\n               <simpara>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.\n\t\t\t    For example, 12:32:34 is rounded down to 12:00:00.</simpara>\n            </listitem>\n\t\t       </itemizedlist>\n\t\t       <simpara>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is \n\t\t\trounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions\n\t\t\tof a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous \n\t\t\t10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to \n\t\t\t01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a \n\t\t\tperiod of 5 seconds, you receive data \n\t\t\ttimestamped between 15:02:15 and 15:07:15.\n\t\t</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The time stamp that determines the first data point to return. Start times are \n\t\t\tevaluated relative to the time that CloudWatch receives the request.</p>\n\t        <p>The value specified is inclusive; results include data points with the specified time stamp. \n\t\t\tThe time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p>\n\t\t       <p>CloudWatch rounds the specified time stamp as follows:</p>\n\t\t       <ul>\n            <li>\n               <p>Start time less than 15 days ago - Round down to the nearest whole minute.\n\t\t\t    For example, 12:32:34 is rounded down to 12:32:00.</p>\n            </li>\n            <li>\n               <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval.\n\t\t\t    For example, 12:32:34 is rounded down to 12:30:00.</p>\n            </li>\n            <li>\n               <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval.\n\t\t\t    For example, 12:32:34 is rounded down to 12:00:00.</p>\n            </li>\n         </ul>\n\t\t       <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is \n\t\t\trounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions\n\t\t\tof a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous \n\t\t\t10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to \n\t\t\t01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a \n\t\t\tperiod of 5 seconds, you receive data \n\t\t\ttimestamped between 15:02:15 and 15:07:15.\n\t\t</p>\n\t     ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The time stamp that determines the last data point to return.</simpara> \n\t\t       <simpara>The value specified is exclusive; results include data points up to the specified time stamp.\n\t\t\tThe time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The time stamp that determines the last data point to return.</p> \n\t\t       <p>The value specified is exclusive; results include data points up to the specified time stamp.\n\t\t\tThe time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>\n\t     ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "Period": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can\n\t\t\tbe as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected\n\t\t\tat intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics\n\t\tare those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</simpara>\n\t\t       <simpara>If the <code>StartTime</code> parameter specifies a time stamp that is greater than\n\t\t    3 hours ago, you must specify the period as follows or no data points in that time range is returned:</simpara>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <simpara>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</simpara>\n            </listitem>\n\t\t\t         <listitem>\n               <simpara>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</simpara>\n            </listitem>\n\t\t\t         <listitem>\n               <simpara>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</simpara>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
            "documentation": "\n\t\t       <p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can\n\t\t\tbe as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected\n\t\t\tat intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics\n\t\tare those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p>\n\t\t       <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than\n\t\t    3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p>\n\t\t       <ul>\n            <li>\n               <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p>\n            </li>\n            <li>\n               <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p>\n            </li>\n            <li>\n               <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p>\n            </li>\n         </ul>\n\t     ",
            "required": true,
            "shape_name": "Period",
            "min_length": 1
          },
          "Statistics": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The metric statistics, other than percentile. For percentile statistics,\n\t\t    use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must \n\t\tspecify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The metric statistics, other than percentile. For percentile statistics,\n\t\t    use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must \n\t\tspecify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.</p>\n\t     ",
            "shape_name": "Statistics",
            "min_length": 1,
            "max_length": 5,
            "members": {
              "type": "string",
              "enum": [
                "SampleCount",
                "Average",
                "Sum",
                "Minimum",
                "Maximum"
              ],
              "shape_name": "Statistic",
              "documentation": null
            }
          },
          "ExtendedStatistics": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must \n\t\t\tspecify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not \n\t\t\tavailable for metrics when any of the metric values are negative numbers.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must \n\t\t\tspecify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not \n\t\t\tavailable for metrics when any of the metric values are negative numbers.</p>\n\t     ",
            "shape_name": "ExtendedStatistics",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "string",
              "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
              "shape_name": "ExtendedStatistic",
              "documentation": null
            }
          },
          "Unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The unit for a given metric. Metrics may be reported in multiple units.\n\t\t\tNot supplying a unit results in all units being returned. If you specify only a unit that \n\t\t\tthe metric does not report, the results of the call are null.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The unit for a given metric. Metrics may be reported in multiple units.\n\t\t\tNot supplying a unit results in all units being returned. If you specify only a unit that \n\t\t\tthe metric does not report, the results of the call are null.</p>\n\t     ",
            "shape_name": "StandardUnit"
          }
        },
        "shape_name": "GetMetricStatisticsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Label": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>A label for the specified metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>A label for the specified metric.</p>\n\t     ",
            "shape_name": "MetricLabel"
          },
          "Datapoints": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The data points for the specified metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The data points for the specified metric.</p>\n\t     ",
            "shape_name": "Datapoints",
            "members": {
              "type": "structure",
              "members": {
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp used for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp used for the data point.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "SampleCount": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The number of metric values that contributed to the aggregate value of this\n\t\t\tdata point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of metric values that contributed to the aggregate value of this\n\t\t\tdata point.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "Average": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The average of the metric values that correspond to the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The average of the metric values that correspond to the data point.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "Sum": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The sum of the metric values for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The sum of the metric values for the data point.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "Minimum": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The minimum metric value for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The minimum metric value for the data point.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "Maximum": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The maximum metric value for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The maximum metric value for the data point.</p>\n\t     ",
                  "shape_name": "DatapointValue"
                },
                "Unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The standard unit for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The standard unit for the data point.</p>\n\t     ",
                  "shape_name": "StandardUnit"
                },
                "ExtendedStatistics": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistic for the data point.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The percentile statistic for the data point.</p>\n\t     ",
                  "shape_name": "DatapointValueMap",
                  "keys": {
                    "type": "string",
                    "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
                    "shape_name": "ExtendedStatistic",
                    "documentation": null
                  },
                  "members": {
                    "type": "double",
                    "shape_name": "DatapointValue",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Encapsulates the statistical data that CloudWatch computes from metric data.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Encapsulates the statistical data that CloudWatch computes from metric data.</p>\n\t     ",
              "shape_name": "Datapoint",
              "member_order": [
                "Timestamp",
                "SampleCount",
                "Average",
                "Sum",
                "Minimum",
                "Maximum",
                "Unit",
                "ExtendedStatistics"
              ]
            }
          }
        },
        "shape_name": "GetMetricStatisticsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>An input parameter that is required is missing.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>An input parameter that is required is missing.</p>\n\t     ",
          "shape_name": "MissingRequiredParameterException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Parameters were used together that cannot be used together.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Parameters were used together that cannot be used together.</p>\n\t     ",
          "shape_name": "InvalidParameterCombinationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Gets statistics for the specified metric.</p>\n\n\n\n\t\t       <p>The maximum number of data points returned from a single call is 1,440. If  \n\t\t\tyou request more than 1,440 data points, CloudWatch returns an error. \n\t\t\tTo reduce the number of data points, you can narrow the specified time range and make \n\t\t\tmultiple requests across adjacent time ranges, or you can increase the specified period. \n\t\t\tData points are not returned in chronological order.</p>\n\n\t\t       <p>CloudWatch aggregates data points based on the length of the period\n\t\t\tthat you specify. For example, if you request statistics with a one-hour period, \n\t\t\tCloudWatch aggregates all data points with time stamps that fall within each \n\t\t\tone-hour period. Therefore, the number of values aggregated by CloudWatch is larger than\n\t\t\tthe number of data points returned.</p>\n\t\t       <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish \n\t\t\tdata using a statistic set instead, you can only retrieve \n\t\t\tpercentile statistics for this data if one of the following conditions is true:</p>\n\t\t       <ul>\n            <li>\n               <p>The SampleCount value of the statistic set is 1.</p>\n            </li>\n            <li>\n               <p>The Min and the Max values of the statistic set are equal.</p>\n            </li>\n         </ul>\n\t\t       <p>Percentile statistics are not available for metrics when any of the metric values are negative numbers.</p>\n\t\t       <p>Amazon CloudWatch retains metric data as follows:</p>\n\t\t       <ul>\n            <li>\n               <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution\n\t\t\t\tmetrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p>\n            </li>\n            <li>\n               <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p>\n            </li>\n         </ul>\n\t\t       <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect \n\t\t\tdata using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, \n\t\t\tbut is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with \n\t\ta resolution of 1 hour.</p>\n\t\t       <p>CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.</p>\t\n\n\t\t       <p>For information about metrics and dimensions supported by AWS services, see the \n\t\t\t<a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html\">Amazon CloudWatch Metrics and Dimensions Reference</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\t     "
    },
    "ListMetrics": {
      "name": "ListMetrics",
      "input": {
        "type": "structure",
        "members": {
          "Namespace": {
            "type": "string",
            "pattern": "[^:].*",
            "zonbookDocumentation": "\n\t\t       <simpara>The namespace to filter against.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The namespace to filter against.</p>\n\t     ",
            "shape_name": "Namespace",
            "min_length": 1,
            "max_length": 255
          },
          "MetricName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric to filter against.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the metric to filter against.</p>\n\t     ",
            "shape_name": "MetricName",
            "min_length": 1,
            "max_length": 255
          },
          "Dimensions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The dimensions to filter against.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The dimensions to filter against.</p>\n\t     ",
            "shape_name": "DimensionFilters",
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The dimension name to be matched.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The dimension name to be matched.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value of the dimension to be matched.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value of the dimension to be matched.</p>\n\t     ",
                  "shape_name": "DimensionValue",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents filters for a dimension.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents filters for a dimension.</p>\n\t     ",
              "shape_name": "DimensionFilter"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListMetricsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Metrics": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The metrics.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The metrics.</p>\n\t     ",
            "shape_name": "Metrics",
            "members": {
              "type": "structure",
              "members": {
                "Namespace": {
                  "type": "string",
                  "pattern": "[^:].*",
                  "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The namespace of the metric.</p>\n\t     ",
                  "shape_name": "Namespace",
                  "min_length": 1,
                  "max_length": 255
                },
                "MetricName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
                  "shape_name": "MetricName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Dimensions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The dimensions for the metric.</p>\n\t     ",
                  "shape_name": "Dimensions",
                  "max_length": 10,
                  "members": {
                    "type": "structure",
                    "members": {
                      "Name": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionValue",
                        "min_length": 1,
                        "max_length": 255
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                    "shape_name": "Dimension",
                    "member_order": [
                      "Name",
                      "Value"
                    ]
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents a specific metric.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents a specific metric.</p>\n\t     ",
              "shape_name": "Metric",
              "member_order": [
                "Namespace",
                "MetricName",
                "Dimensions"
              ]
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token that marks the start of the next batch of returned results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token that marks the start of the next batch of returned results.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListMetricsOutput",
        "documentation": null,
        "member_order": [
          "Metrics",
          "NextToken"
        ]
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        }
      ],
      "documentation": "\n\t\t       <p>List the specified metrics. You can use the returned metrics with\n\t\t\t<a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain statistical data.</p>\n\t\t       <p>Up to 500 results are returned for any one call. To retrieve additional results,\n\t\t\tuse the returned token with subsequent calls.</p>\n\t\t       <p>After you create a metric, allow up to fifteen minutes before the metric appears.\n\t\t\tStatistics about the metric, however, are available sooner using <a>GetMetricData</a> or <a>GetMetricStatistics</a>.</p>\n\t     "
    },
    "ListDashboards": {
      "name": "ListDashboards",
      "input": {
        "type": "structure",
        "members": {
          "DashboardNamePrefix": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>If you specify this parameter, only\n\t\t\tthe dashboards with names starting with the specified string are listed. The maximum length is 255, and \n\t\t\tvalid characters are A-Z, a-z, 0-9, \".\", \"-\", and \"_\".\n\t\t\t \n\t\t</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>If you specify this parameter, only\n\t\t\tthe dashboards with names starting with the specified string are listed. The maximum length is 255, and \n\t\t\tvalid characters are A-Z, a-z, 0-9, \".\", \"-\", and \"_\".\n\t\t\t \n\t\t</p>\n\t     ",
            "shape_name": "DashboardNamePrefix"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token returned by a previous call to indicate that there is more data available.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token returned by a previous call to indicate that there is more data available.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListDashboardsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardEntries": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The list of matching dashboards.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The list of matching dashboards.</p>\n\t     ",
            "shape_name": "DashboardEntries",
            "members": {
              "type": "structure",
              "members": {
                "DashboardName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the dashboard.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the dashboard.</p>\n\t     ",
                  "shape_name": "DashboardName"
                },
                "DashboardArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the dashboard.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the dashboard.</p>\n\t     ",
                  "shape_name": "DashboardArn"
                },
                "LastModified": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of when the dashboard was last modified, either by an API call or\n\t\t\tthrough the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of when the dashboard was last modified, either by an API call or\n\t\t\tthrough the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</p>\n\t     ",
                  "shape_name": "LastModified"
                },
                "Size": {
                  "type": "long",
                  "zonbookDocumentation": "\n\t\t       <simpara>The size of the dashboard, in bytes.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The size of the dashboard, in bytes.</p>\n\t     ",
                  "shape_name": "Size"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents a specific dashboard.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents a specific dashboard.</p>\n\t     ",
              "shape_name": "DashboardEntry"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token that marks the start of the next batch of returned results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token that marks the start of the next batch of returned results.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListDashboardsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>, only\n\t\t\tthose dashboards with names starting with the prefix are listed. Otherwise, all dashboards in your account are\n\t\t\tlisted.\n\t    </p>\n\t\t       <p>\n            <code>ListDashboards</code> returns up to 1000 results on one page. If there\n\t\t\tare more than 1000 dashboards, you can call <code>ListDashboards</code> again and\n\t\tinclude the value you received for <code>NextToken</code> in the first call, to receive\n\t\tthe next 1000 results.</p>\n\t     "
    },
    "ListDashboardsForAccount": {
      "name": "ListDashboardsForAccount",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "required": true,
            "shape_name": "AccountId",
            "documentation": null,
            "min_length": 1,
            "max_length": 255
          },
          "DashboardNamePrefix": {
            "type": "string",
            "shape_name": "DashboardNamePrefix",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListDashboardsForAccountInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardEntries": {
            "type": "list",
            "shape_name": "DashboardEntries",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "DashboardName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the dashboard.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the dashboard.</p>\n\t     ",
                  "shape_name": "DashboardName"
                },
                "DashboardArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the dashboard.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the dashboard.</p>\n\t     ",
                  "shape_name": "DashboardArn"
                },
                "LastModified": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of when the dashboard was last modified, either by an API call or\n\t\t\tthrough the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of when the dashboard was last modified, either by an API call or\n\t\t\tthrough the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</p>\n\t     ",
                  "shape_name": "LastModified"
                },
                "Size": {
                  "type": "long",
                  "zonbookDocumentation": "\n\t\t       <simpara>The size of the dashboard, in bytes.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The size of the dashboard, in bytes.</p>\n\t     ",
                  "shape_name": "Size"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents a specific dashboard.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents a specific dashboard.</p>\n\t     ",
              "shape_name": "DashboardEntry"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "ListDashboardsForAccountOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "GetDashboard": {
      "name": "GetDashboard",
      "input": {
        "type": "structure",
        "members": {
          "DashboardName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the dashboard to be described.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the dashboard to be described.</p>\n\t     ",
            "required": true,
            "shape_name": "DashboardName"
          }
        },
        "shape_name": "GetDashboardInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the dashboard.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the dashboard.</p>\n\t     ",
            "shape_name": "DashboardArn"
          },
          "DashboardBody": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The detailed information about the dashboard, including what widgets are included and their location\n\t\t\ton the dashboard. For more information about the <code>DashboardBody</code> syntax, \n\t\t\tsee <xref linkend=\"CloudWatch-Dashboard-Body-Structure\"/>. </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The detailed information about the dashboard, including what widgets are included and their location\n\t\t\ton the dashboard. For more information about the <code>DashboardBody</code> syntax, \n\t\t\tsee <a>CloudWatch-Dashboard-Body-Structure</a>. </p>\n\t     ",
            "shape_name": "DashboardBody"
          },
          "DashboardName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the dashboard.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the dashboard.</p>\n\t     ",
            "shape_name": "DashboardName"
          }
        },
        "shape_name": "GetDashboardOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The specified dashboard does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The specified dashboard does not exist.</p>\n\t     ",
          "shape_name": "DashboardNotFoundError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Displays the details of the dashboard that you specify.</p>\n\t\t       <p>To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data returned\n\t\t\twithin <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code> to create\n\t\t\tthe copy.</p>\n\t     "
    },
    "GetDashboardForAccount": {
      "name": "GetDashboardForAccount",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "required": true,
            "shape_name": "AccountId",
            "documentation": null,
            "min_length": 1,
            "max_length": 255
          },
          "DashboardName": {
            "type": "string",
            "required": true,
            "shape_name": "DashboardName",
            "documentation": null
          }
        },
        "shape_name": "GetDashboardForAccountInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardArn": {
            "type": "string",
            "shape_name": "DashboardArn",
            "documentation": null
          },
          "DashboardBody": {
            "type": "string",
            "shape_name": "DashboardBody",
            "documentation": null
          },
          "DashboardName": {
            "type": "string",
            "shape_name": "DashboardName",
            "documentation": null
          }
        },
        "shape_name": "GetDashboardForAccountOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The specified dashboard does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The specified dashboard does not exist.</p>\n\t     ",
          "shape_name": "DashboardNotFoundError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "DeleteDashboards": {
      "name": "DeleteDashboards",
      "input": {
        "type": "structure",
        "members": {
          "DashboardNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The dashboards to be deleted. This parameter is required.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The dashboards to be deleted. This parameter is required.</p>\n\t     ",
            "required": true,
            "shape_name": "DashboardNames",
            "members": {
              "type": "string",
              "shape_name": "DashboardName",
              "documentation": null
            }
          }
        },
        "shape_name": "DeleteDashboardsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteDashboardsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The specified dashboard does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The specified dashboard does not exist.</p>\n\t     ",
          "shape_name": "DashboardNotFoundError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Deletes all dashboards that you specify. You may specify up to 100 dashboards to delete. \n\t\t\tIf there is an error during this call, no dashboards are deleted.</p>\n\t     "
    },
    "DeleteDashboardsForAccount": {
      "name": "DeleteDashboardsForAccount",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "required": true,
            "shape_name": "AccountId",
            "documentation": null,
            "min_length": 1,
            "max_length": 255
          },
          "DashboardNames": {
            "type": "list",
            "required": true,
            "shape_name": "DashboardNames",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "DashboardName",
              "documentation": null
            }
          }
        },
        "shape_name": "DeleteDashboardsForAccountInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteDashboardsForAccountOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The specified dashboard does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The specified dashboard does not exist.</p>\n\t     ",
          "shape_name": "DashboardNotFoundError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "PutDashboard": {
      "name": "PutDashboard",
      "input": {
        "type": "structure",
        "members": {
          "DashboardName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing\n\t\t\tits current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are \n\t\t\tA-Z, a-z, 0-9, \"-\", and \"_\".  This parameter is required.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing\n\t\t\tits current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are \n\t\t\tA-Z, a-z, 0-9, \"-\", and \"_\".  This parameter is required.</p>\n\t     ",
            "required": true,
            "shape_name": "DashboardName"
          },
          "DashboardBody": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The detailed information about the dashboard in JSON format, including the widgets to include and their location\n\t\t\ton the dashboard.  This parameter is required.</simpara>\n\t\t       <simpara>For more information about the syntax, \n\t\t\tsee <xref linkend=\"CloudWatch-Dashboard-Body-Structure\"/>.</simpara>\n\t\t\n\n\t     ",
            "documentation": "\n\t\t       <p>The detailed information about the dashboard in JSON format, including the widgets to include and their location\n\t\t\ton the dashboard.  This parameter is required.</p>\n\t\t       <p>For more information about the syntax, \n\t\t\tsee <a>CloudWatch-Dashboard-Body-Structure</a>.</p>\n\t\t\n\n\t     ",
            "required": true,
            "shape_name": "DashboardBody"
          }
        },
        "shape_name": "PutDashboardInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardValidationMessages": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>If the input for <code>PutDashboard</code> was correct and the dashboard was successfully created or modified, this result is empty.</simpara>\n\t\t\t      <simpara>If this result includes only warning messages, then the input was valid enough for the dashboard to be created or modified, but some elements of \n\t\t\t\tthe dashboard may not render.</simpara>\n\t\t\t\t     <simpara>If this result includes error messages, the input was not valid and the operation failed.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>If the input for <code>PutDashboard</code> was correct and the dashboard was successfully created or modified, this result is empty.</p>\n\t\t\t      <p>If this result includes only warning messages, then the input was valid enough for the dashboard to be created or modified, but some elements of \n\t\t\t\tthe dashboard may not render.</p>\n\t\t\t\t     <p>If this result includes error messages, the input was not valid and the operation failed.</p>\n\t     ",
            "shape_name": "DashboardValidationMessages",
            "members": {
              "type": "structure",
              "members": {
                "DataPath": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The data path related to the message.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The data path related to the message.</p>\n\t     ",
                  "shape_name": "DataPath"
                },
                "Message": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>A message describing the error or warning.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>A message describing the error or warning.</p>\n\t     ",
                  "shape_name": "Message"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>An error or warning for the operation.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>An error or warning for the operation.</p>\n\t     ",
              "shape_name": "DashboardValidationMessage"
            }
          }
        },
        "shape_name": "PutDashboardOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            },
            "dashboardValidationMessages": {
              "type": "list",
              "shape_name": "DashboardValidationMessages",
              "documentation": null,
              "members": {
                "type": "structure",
                "members": {
                  "DataPath": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <simpara>The data path related to the message.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>The data path related to the message.</p>\n\t     ",
                    "shape_name": "DataPath"
                  },
                  "Message": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <simpara>A message describing the error or warning.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>A message describing the error or warning.</p>\n\t     ",
                    "shape_name": "Message"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <simpara>An error or warning for the operation.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>An error or warning for the operation.</p>\n\t     ",
                "shape_name": "DashboardValidationMessage"
              }
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Some part of the dashboard data is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Some part of the dashboard data is invalid.</p>\n\t     ",
          "shape_name": "DashboardInvalidInputError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": "\n\t\t       <p>Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard,\n\t\tthe entire contents are replaced with what you specify here.</p>\n\t\t       <p>There is no limit to the number of dashboards in your account. All dashboards in your account are global, not region-specific.</p>\n\t\t       <p>A simple way to create a dashboard using <code>PutDashboard</code> is to copy an \n\t\t\texisting dashboard. To copy an existing dashboard using the console, you can load the dashboard\n\t\t\tand then use the View/edit source command in the Actions menu to display the JSON  block\n\t\t\tfor that dashboard. Another way to copy a dashboard is to \n\t\t\tuse <code>GetDashboard</code>, and then use the data returned\n\t\t\twithin <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code>.</p>\n\t\t       <p>When you create a dashboard with <code>PutDashboard</code>, a good practice is to \n\t\t\tadd a text widget at the top of the dashboard with a message that the dashboard was created by script and should\n\t\tnot be changed in the console. This message could also point console users to the location \n\t\tof the <code>DashboardBody</code> script or the CloudFormation template used to create the\n\t\tdashboard.</p>\n\t\t\n\t     "
    },
    "PutDashboardForAccount": {
      "name": "PutDashboardForAccount",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "required": true,
            "shape_name": "AccountId",
            "documentation": null,
            "min_length": 1,
            "max_length": 255
          },
          "DashboardName": {
            "type": "string",
            "required": true,
            "shape_name": "DashboardName",
            "documentation": null
          },
          "DashboardBody": {
            "type": "string",
            "required": true,
            "shape_name": "DashboardBody",
            "documentation": null
          }
        },
        "shape_name": "PutDashboardForAccountInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DashboardValidationMessages": {
            "type": "list",
            "shape_name": "DashboardValidationMessages",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "DataPath": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The data path related to the message.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The data path related to the message.</p>\n\t     ",
                  "shape_name": "DataPath"
                },
                "Message": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>A message describing the error or warning.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>A message describing the error or warning.</p>\n\t     ",
                  "shape_name": "Message"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>An error or warning for the operation.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>An error or warning for the operation.</p>\n\t     ",
              "shape_name": "DashboardValidationMessage"
            }
          }
        },
        "shape_name": "PutDashboardForAccountOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "DashboardErrorMessage",
              "documentation": null
            },
            "dashboardValidationMessages": {
              "type": "list",
              "shape_name": "DashboardValidationMessages",
              "documentation": null,
              "members": {
                "type": "structure",
                "members": {
                  "DataPath": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <simpara>The data path related to the message.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>The data path related to the message.</p>\n\t     ",
                    "shape_name": "DataPath"
                  },
                  "Message": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <simpara>A message describing the error or warning.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>A message describing the error or warning.</p>\n\t     ",
                    "shape_name": "Message"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <simpara>An error or warning for the operation.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>An error or warning for the operation.</p>\n\t     ",
                "shape_name": "DashboardValidationMessage"
              }
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Some part of the dashboard data is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Some part of the dashboard data is invalid.</p>\n\t     ",
          "shape_name": "DashboardInvalidInputError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "GetMetricWidgetImage": {
      "name": "GetMetricWidgetImage",
      "input": {
        "type": "structure",
        "members": {
          "MetricWidget": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>A JSON string that defines the bitmap graph to be retrieved. The string includes the \n\t\t\tmetrics to include in the graph, statistics, annotations, title, axis limits, and so on. \n\t\t\tYou can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</simpara>\n\t\t       <para>For more information about the syntax of <code>MetricWidget</code> see <xref linkend=\"CloudWatch-Metric-Widget-Structure\"/>.</para>\n\t\t\n\t\t       <para>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation\n\t\t\tpoint appears next to the graph legend.</para>\n\t\t\n\t     ",
            "documentation": "\n\t\t       <p>A JSON string that defines the bitmap graph to be retrieved. The string includes the \n\t\t\tmetrics to include in the graph, statistics, annotations, title, axis limits, and so on. \n\t\t\tYou can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p>\n\t\t       <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p>\n\t\t\n\t\t       <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation\n\t\t\tpoint appears next to the graph legend.</p>\n\t\t\n\t     ",
            "required": true,
            "shape_name": "MetricWidget"
          },
          "OutputFormat": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The format of the resulting image. Only PNG images are supported.</simpara>\n\n\t\t       <simpara>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the \n\t\t\tcontent-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> \n\t\t\tfield. For example:</simpara>\n\t\t\n\t\t       <para>\n            <code>\n\t\t\t&lt;GetMetricWidgetImageResponse xmlns=\"http://monitoring.amazonaws.com/doc/2010-08-01/\"&gt;</code>\n         </para>\n\t\t       <para>\n            <code>  &lt;GetMetricWidgetImageResult&gt;</code>\n         </para>\n\t\t       <para>\n            <code>    &lt;MetricWidgetImage&gt;</code>\n         </para>\n\t\t       <para>\n            <code>       iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code>\n         </para>\n\t\t       <para>\n            <code>    &lt;/MetricWidgetImage&gt;</code>\n         </para>\n\t\t       <para>\n            <code>  &lt;/GetMetricWidgetImageResult&gt;</code>\n         </para>\n\t\t       <para>\n            <code>  &lt;ResponseMetadata&gt;</code>\n         </para>\n\t\t       <para>\n            <code>    &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code>\n         </para>\n\t\t       <para>\n            <code>  &lt;/ResponseMetadata&gt;</code>\n         </para>\n\t\t       <para>\n            <code>&lt;/GetMetricWidgetImageResponse&gt;</code>\n         </para>\n\t\t\n\t\t       <simpara>The <code>image/png</code> setting is intended only for custom HTTP requests. For most\n\t\t\tuse cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify \n\t\t\t<code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, \n\t\t\tand the body of the response is a PNG image. </simpara>\n\n\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t     ",
            "documentation": "\n\t\t       <p>The format of the resulting image. Only PNG images are supported.</p>\n\n\t\t       <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the \n\t\t\tcontent-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> \n\t\t\tfield. For example:</p>\n\t\t\n\t\t       <p>\n            <code>\n\t\t\t&lt;GetMetricWidgetImageResponse xmlns=\"http://monitoring.amazonaws.com/doc/2010-08-01/\"&gt;</code>\n         </p>\n\t\t       <p>\n            <code>  &lt;GetMetricWidgetImageResult&gt;</code>\n         </p>\n\t\t       <p>\n            <code>    &lt;MetricWidgetImage&gt;</code>\n         </p>\n\t\t       <p>\n            <code>       iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code>\n         </p>\n\t\t       <p>\n            <code>    &lt;/MetricWidgetImage&gt;</code>\n         </p>\n\t\t       <p>\n            <code>  &lt;/GetMetricWidgetImageResult&gt;</code>\n         </p>\n\t\t       <p>\n            <code>  &lt;ResponseMetadata&gt;</code>\n         </p>\n\t\t       <p>\n            <code>    &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code>\n         </p>\n\t\t       <p>\n            <code>  &lt;/ResponseMetadata&gt;</code>\n         </p>\n\t\t       <p>\n            <code>&lt;/GetMetricWidgetImageResponse&gt;</code>\n         </p>\n\t\t\n\t\t       <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most\n\t\t\tuse cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify \n\t\t\t<code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, \n\t\t\tand the body of the response is a PNG image. </p>\n\n\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t     ",
            "shape_name": "OutputFormat"
          }
        },
        "shape_name": "GetMetricWidgetImageInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "MetricWidgetImage": {
            "type": "blob",
            "zonbookDocumentation": "\n\t\t       <para>The image of the graph, in the output format specified.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The image of the graph, in the output format specified.</p>\n\t     ",
            "shape_name": "MetricWidgetImage"
          }
        },
        "shape_name": "GetMetricWidgetImageOutput",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t       <p>You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph of \n\t\t\tone or more Amazon CloudWatch metrics as a bitmap image. You can then embed this \n\t\t\timage into your services and products, such as wiki pages, reports, and documents. \n\t\t\tYou could also retrieve images regularly, such as every minute, and create your own \n\t\t\tcustom live dashboard.</p>\n\t\t\n\t\t       <p>The graph you retrieve can include all CloudWatch metric graph features, including metric math\n\t\tand horizontal and vertical annotations.</p>\n\t\t\n\t\t       <p>There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code> action has the following limits:</p>\n\t\t       <ul>\n            <li>\n\t\t\t\t           <p>As many as 100 metrics in the graph.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>Up to 100 KB uncompressed payload.</p>\n\t\t\t         </li>\n         </ul>\n\t\t\n\t\t\n\t     "
    },
    "PutMetricDataBatch": {
      "name": "PutMetricDataBatch",
      "input": {
        "type": "structure",
        "members": {
          "MetricDataBatches": {
            "type": "list",
            "required": true,
            "shape_name": "MetricDataBatches",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "AccountId": {
                  "type": "string",
                  "required": true,
                  "shape_name": "AccountId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 255
                },
                "Namespace": {
                  "type": "string",
                  "pattern": "[^:].*",
                  "required": true,
                  "shape_name": "Namespace",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 255
                },
                "MetricData": {
                  "type": "list",
                  "required": true,
                  "shape_name": "MetricData",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "MetricName": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
                        "required": true,
                        "shape_name": "MetricName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Dimensions": {
                        "type": "list",
                        "zonbookDocumentation": "\n\t\t       <simpara>The dimensions associated with the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The dimensions associated with the metric.</p>\n\t     ",
                        "shape_name": "Dimensions",
                        "max_length": 10,
                        "members": {
                          "type": "structure",
                          "members": {
                            "Name": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                              "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                              "required": true,
                              "shape_name": "DimensionName",
                              "min_length": 1,
                              "max_length": 255
                            },
                            "Value": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                              "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                              "required": true,
                              "shape_name": "DimensionValue",
                              "min_length": 1,
                              "max_length": 255
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                          "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                          "shape_name": "Dimension",
                          "member_order": [
                            "Name",
                            "Value"
                          ]
                        }
                      },
                      "Timestamp": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n\t\t       <simpara>The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.</p>\n\t     ",
                        "shape_name": "Timestamp"
                      },
                      "Value": {
                        "type": "double",
                        "zonbookDocumentation": "\n\t\t       <simpara>The value for the metric.</simpara>\n\t\t       <simpara>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or\n\t\t\ttoo large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or\n\t\t\t2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity)\n\t\t\tare not supported.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The value for the metric.</p>\n\t\t       <p>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or\n\t\t\ttoo large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or\n\t\t\t2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity)\n\t\t\tare not supported.</p>\n\t     ",
                        "shape_name": "DatapointValue"
                      },
                      "StatisticValues": {
                        "type": "structure",
                        "members": {
                          "SampleCount": {
                            "type": "double",
                            "zonbookDocumentation": "\n\t\t       <simpara>The number of samples used for the statistic set.</simpara>\n\t     ",
                            "documentation": "\n\t\t       <p>The number of samples used for the statistic set.</p>\n\t     ",
                            "required": true,
                            "shape_name": "DatapointValue"
                          },
                          "Sum": {
                            "type": "double",
                            "zonbookDocumentation": "\n\t\t       <simpara>The sum of values for the sample set.</simpara>\n\t     ",
                            "documentation": "\n\t\t       <p>The sum of values for the sample set.</p>\n\t     ",
                            "required": true,
                            "shape_name": "DatapointValue"
                          },
                          "Minimum": {
                            "type": "double",
                            "zonbookDocumentation": "\n\t\t       <simpara>The minimum value of the sample set.</simpara>\n\t     ",
                            "documentation": "\n\t\t       <p>The minimum value of the sample set.</p>\n\t     ",
                            "required": true,
                            "shape_name": "DatapointValue"
                          },
                          "Maximum": {
                            "type": "double",
                            "zonbookDocumentation": "\n\t\t       <simpara>The maximum value of the sample set.</simpara>\n\t     ",
                            "documentation": "\n\t\t       <p>The maximum value of the sample set.</p>\n\t     ",
                            "required": true,
                            "shape_name": "DatapointValue"
                          }
                        },
                        "zonbookDocumentation": "\n\t\t       <simpara>The statistical values for the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The statistical values for the metric.</p>\n\t     ",
                        "shape_name": "StatisticSet"
                      },
                      "Values": {
                        "type": "list",
                        "zonbookDocumentation": "\n\t\t       <para>Array of numbers representing the values for the metric during the period. Each unique value is listed just once\n\t\tin this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period.\n\t\tYou can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</para>\n\t\t       <simpara>Although the <code>Values</code> array accepts numbers of type\n\t\t\t<code>Double</code>, CloudWatch rejects values that are either too small\n\t\t\tor too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base\n\t\t\t10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity,\n\t\t\t-Infinity) are not supported.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>Array of numbers representing the values for the metric during the period. Each unique value is listed just once\n\t\tin this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period.\n\t\tYou can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</p>\n\t\t       <p>Although the <code>Values</code> array accepts numbers of type\n\t\t\t<code>Double</code>, CloudWatch rejects values that are either too small\n\t\t\tor too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base\n\t\t\t10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity,\n\t\t\t-Infinity) are not supported.</p>\n\t     ",
                        "shape_name": "Values",
                        "members": {
                          "type": "double",
                          "shape_name": "DatapointValue",
                          "documentation": null
                        }
                      },
                      "Counts": {
                        "type": "list",
                        "zonbookDocumentation": "\n\t\t       <para>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array \n\t\t\tis the number of times the corresponding value in the <code>Values</code> array occurred during the period. </para>\n\t\t       <para>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you\n\t\tinclude a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</para>\n\t     ",
                        "documentation": "\n\t\t       <p>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array \n\t\t\tis the number of times the corresponding value in the <code>Values</code> array occurred during the period. </p>\n\t\t       <p>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you\n\t\tinclude a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</p>\n\t     ",
                        "shape_name": "Counts",
                        "members": {
                          "type": "double",
                          "shape_name": "DatapointValue",
                          "documentation": null
                        }
                      },
                      "Unit": {
                        "type": "string",
                        "enum": [
                          "Seconds",
                          "Microseconds",
                          "Milliseconds",
                          "Bytes",
                          "Kilobytes",
                          "Megabytes",
                          "Gigabytes",
                          "Terabytes",
                          "Bits",
                          "Kilobits",
                          "Megabits",
                          "Gigabits",
                          "Terabits",
                          "Percent",
                          "Count",
                          "Bytes/Second",
                          "Kilobytes/Second",
                          "Megabytes/Second",
                          "Gigabytes/Second",
                          "Terabytes/Second",
                          "Bits/Second",
                          "Kilobits/Second",
                          "Megabits/Second",
                          "Gigabits/Second",
                          "Terabits/Second",
                          "Count/Second",
                          "None"
                        ],
                        "zonbookDocumentation": "\n\t\t       <simpara>The unit of the metric.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The unit of the metric.</p>\n\t     ",
                        "shape_name": "StandardUnit"
                      },
                      "StorageResolution": {
                        "type": "integer",
                        "zonbookDocumentation": "\n\t\t\n\n\t\t       <simpara>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with \n\t\t\tsub-minute resolution down to one second.\n\t\tSetting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available\n\t\tonly for custom metrics. For more information about high-resolution metrics, \n\t\t\tsee <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics\">High-Resolution Metrics</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.\n\t\t</simpara>\n\t        <simpara>This field is optional, if you do not specify it the default of 60 is used.</simpara>\n\t     ",
                        "documentation": "\n\t\t\n\n\t\t       <p>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with \n\t\t\tsub-minute resolution down to one second.\n\t\tSetting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available\n\t\tonly for custom metrics. For more information about high-resolution metrics, \n\t\t\tsee <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics\">High-Resolution Metrics</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.\n\t\t</p>\n\t        <p>This field is optional, if you do not specify it the default of 60 is used.</p>\n\t     ",
                        "shape_name": "StorageResolution",
                        "min_length": 1
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <simpara>Encapsulates the information sent to either create a metric or add new values\n\t\t\tto be aggregated into an existing metric.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>Encapsulates the information sent to either create a metric or add new values\n\t\t\tto be aggregated into an existing metric.</p>\n\t     ",
                    "shape_name": "MetricDatum"
                  }
                },
                "AutoDecompose": {
                  "type": "boolean",
                  "shape_name": "AutoDecompose",
                  "documentation": null
                }
              },
              "shape_name": "MetricDataBatch",
              "documentation": null
            }
          }
        },
        "shape_name": "PutMetricDataBatchInput",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The value of an input parameter is bad or out-of-range.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The value of an input parameter is bad or out-of-range.</p>\n\t     ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>An input parameter that is required is missing.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>An input parameter that is required is missing.</p>\n\t     ",
          "shape_name": "MissingRequiredParameterException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "AwsQueryErrorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Parameters were used together that cannot be used together.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Parameters were used together that cannot be used together.</p>\n\t     ",
          "shape_name": "InvalidParameterCombinationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "ListHostInfo": {
      "name": "ListHostInfo",
      "input": null,
      "output": {
        "type": "structure",
        "members": {
          "HostName": {
            "type": "string",
            "shape_name": "HostName",
            "documentation": null
          },
          "StackName": {
            "type": "string",
            "shape_name": "StackName",
            "documentation": null
          },
          "Marketplace": {
            "type": "string",
            "shape_name": "Marketplace",
            "documentation": null
          },
          "Region": {
            "type": "string",
            "shape_name": "Region",
            "documentation": null
          },
          "SdbDatastoreEndpoints": {
            "type": "list",
            "shape_name": "SdbDatastoreEndpoints",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "SdbDatastoreEndpoint",
              "documentation": null
            }
          },
          "DatastoreEndpoints": {
            "type": "list",
            "shape_name": "DatastoreEndpoints",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "DatastoreEndpoint",
              "documentation": null
            }
          },
          "AmpQueues": {
            "type": "list",
            "shape_name": "AmpQueues",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "AmpQueue",
              "documentation": null
            }
          }
        },
        "shape_name": "ListHostInfoOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "FaultDescription"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Request processing has failed due to some unknown error, exception, or failure.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Request processing has failed due to some unknown error, exception, or failure.</p>\n\t     ",
          "shape_name": "InternalServiceFault",
          "member_order": [
            "Message"
          ]
        }
      ],
      "documentation": null
    },
    "PutMetricAlarm": {
      "name": "PutMetricAlarm",
      "input": {
        "type": "structure",
        "members": {
          "AlarmName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name for the alarm. This name must be unique within the AWS account.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name for the alarm. This name must be unique within the AWS account.</p>\n\t     ",
            "required": true,
            "shape_name": "AlarmName",
            "min_length": 1,
            "max_length": 255
          },
          "AlarmDescription": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The description for the alarm.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The description for the alarm.</p>\n\t     ",
            "shape_name": "AlarmDescription",
            "min_length": 0,
            "max_length": 1024
          },
          "ActionsEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <simpara>Indicates whether actions should be executed during any changes to the alarm state.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Indicates whether actions should be executed during any changes to the alarm state.</p>\n\t     ",
            "shape_name": "ActionsEnabled"
          },
          "OKActions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to an <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\n\t\t       <simpara>Valid Values: <code>arn:aws:automate:<emphasis>region</emphasis>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:<emphasis>sns-topic-name</emphasis>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:scalingPolicy:<emphasis>policy-id</emphasis>autoScalingGroupName/<emphasis>group-friendly-name</emphasis>:policyName/<emphasis>policy-friendly-name</emphasis>\n            </code>\n         </simpara>\n\n\t\t       <simpara>Valid Values (for use with IAM roles):\n\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to an <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\n\t\t       <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>\n            </code>\n         </p>\n\n\t\t       <p>Valid Values (for use with IAM roles):\n\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </p>\n\t     ",
            "shape_name": "ResourceList",
            "max_length": 5,
            "members": {
              "type": "string",
              "shape_name": "ResourceName",
              "documentation": null,
              "min_length": 1,
              "max_length": 1024
            }
          },
          "AlarmActions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. \n\t\t\tEach action is specified as an Amazon Resource Name (ARN).</simpara>\n\n\t\t       <simpara>Valid Values: <code>arn:aws:automate:<emphasis>region</emphasis>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:<emphasis>sns-topic-name</emphasis>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:scalingPolicy:<emphasis>policy-id</emphasis>autoScalingGroupName/<emphasis>group-friendly-name</emphasis>:policyName/<emphasis>policy-friendly-name</emphasis>\n            </code>\n         </simpara>\n\n\t\t       <simpara>Valid Values (for use with IAM roles):\n\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. \n\t\t\tEach action is specified as an Amazon Resource Name (ARN).</p>\n\n\t\t       <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>\n            </code>\n         </p>\n\n\t\t       <p>Valid Values (for use with IAM roles):\n\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </p>\n\t     ",
            "shape_name": "ResourceList",
            "max_length": 5,
            "members": {
              "type": "string",
              "shape_name": "ResourceName",
              "documentation": null,
              "min_length": 1,
              "max_length": 1024
            }
          },
          "InsufficientDataActions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. \n\t\t\tEach action is specified as an Amazon Resource Name (ARN).</simpara>\n\n\t\t       <simpara>Valid Values: <code>arn:aws:automate:<emphasis>region</emphasis>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<emphasis>region</emphasis>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:<emphasis>sns-topic-name</emphasis>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:scalingPolicy:<emphasis>policy-id</emphasis>autoScalingGroupName/<emphasis>group-friendly-name</emphasis>:policyName/<emphasis>policy-friendly-name</emphasis>\n            </code>\n         </simpara>\n\n\t\t       <simpara>Valid Values (for use with IAM roles):\n\t\t\t<code>&gt;arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<emphasis>region</emphasis>:<emphasis>account-id</emphasis>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. \n\t\t\tEach action is specified as an Amazon Resource Name (ARN).</p>\n\n\t\t       <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | \n\t\t\t<code>arn:aws:automate:<i>region</i>:ec2:recover</code> |\n\t\t\t<code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i>\n            </code> |\n\t\t\t<code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i>\n            </code>\n         </p>\n\n\t\t       <p>Valid Values (for use with IAM roles):\n\t\t\t<code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> |\n\t\t\t\t<code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code>\n         </p>\n\t     ",
            "shape_name": "ResourceList",
            "max_length": 5,
            "members": {
              "type": "string",
              "shape_name": "ResourceName",
              "documentation": null,
              "min_length": 1,
              "max_length": 1024
            }
          },
          "MetricName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name for the metric associated with the alarm.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name for the metric associated with the alarm.</p>\n\t     ",
            "required": true,
            "shape_name": "MetricName",
            "min_length": 1,
            "max_length": 255
          },
          "Namespace": {
            "type": "string",
            "pattern": "[^:].*",
            "zonbookDocumentation": "\n\t\t       <simpara>The namespace for the metric associated with the alarm.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The namespace for the metric associated with the alarm.</p>\n\t     ",
            "required": true,
            "shape_name": "Namespace",
            "min_length": 1,
            "max_length": 255
          },
          "Statistic": {
            "type": "string",
            "enum": [
              "SampleCount",
              "Average",
              "Sum",
              "Minimum",
              "Maximum"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code>, you must \n\t\tspecify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code>, you must \n\t\tspecify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.</p>\n\t     ",
            "shape_name": "Statistic"
          },
          "ExtendedStatistic": {
            "type": "string",
            "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
            "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistic for the metric associated with the alarm. Specify a value \n\t\t\tbetween p0.0 and p100. When you call <code>PutMetricAlarm</code>, you must \n\t\t\tspecify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The percentile statistic for the metric associated with the alarm. Specify a value \n\t\t\tbetween p0.0 and p100. When you call <code>PutMetricAlarm</code>, you must \n\t\t\tspecify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.</p>\n\t     ",
            "shape_name": "ExtendedStatistic"
          },
          "Dimensions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric associated with the alarm.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The dimensions for the metric associated with the alarm.</p>\n\t     ",
            "shape_name": "Dimensions",
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionValue",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
              "shape_name": "Dimension",
              "member_order": [
                "Name",
                "Value"
              ]
            }
          },
          "Period": {
            "type": "integer",
            "zonbookDocumentation": "\n\n\t\t       <simpara>The period, in seconds, over which the specified statistic is applied. Valid values are 10, 30, and any multiple of 60.</simpara>\n\t\t       <simpara>Be sure to specify 10 or 30 only for metrics that are stored by a\n\t\t\t\t<code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you\n\t\t\tspecify a period of 10 or 30 for a metric that does not have sub-minute resolution, the\n\t\t\talarm still attempts to gather data at the period rate that you specify. In this case,\n\t\t\tit does not receive data for the attempts that do not correspond to a one-minute data\n\t\t\tresolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or\n\t\t\t30 also sets this alarm as a high-resolution alarm, which has a higher charge than other\n\t\t\talarms. For more information about pricing, see <ulink url=\"https://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch\n\t\t\tPricing</ulink>.</simpara>\n\t\t       <simpara>An alarm's total current evaluation period can\n\t\tbe no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</simpara>\n\n\t     ",
            "documentation": "\n\n\t\t       <p>The period, in seconds, over which the specified statistic is applied. Valid values are 10, 30, and any multiple of 60.</p>\n\t\t       <p>Be sure to specify 10 or 30 only for metrics that are stored by a\n\t\t\t\t<code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you\n\t\t\tspecify a period of 10 or 30 for a metric that does not have sub-minute resolution, the\n\t\t\talarm still attempts to gather data at the period rate that you specify. In this case,\n\t\t\tit does not receive data for the attempts that do not correspond to a one-minute data\n\t\t\tresolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or\n\t\t\t30 also sets this alarm as a high-resolution alarm, which has a higher charge than other\n\t\t\talarms. For more information about pricing, see <a href=\"https://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch\n\t\t\tPricing</a>.</p>\n\t\t       <p>An alarm's total current evaluation period can\n\t\tbe no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>\n\n\t     ",
            "required": true,
            "shape_name": "Period",
            "min_length": 1
          },
          "Unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The unit of measure for the statistic. For example, the units for the Amazon EC2\n\t\t\tNetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance\n\t\t\treceives on all network interfaces. You can also specify a unit when you create a custom\n\t\t\tmetric. Units help provide conceptual meaning to your data. Metric data points that\n\t\t\tspecify a unit of measure, such as Percent, are aggregated separately.</simpara>\n\n\t\t       <simpara>If you specify a unit, you must use a unit that is appropriate for the metric. \n\t\t\tOtherwise, the CloudWatch alarm can get stuck in the <code>INSUFFICIENT DATA</code> state. </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The unit of measure for the statistic. For example, the units for the Amazon EC2\n\t\t\tNetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance\n\t\t\treceives on all network interfaces. You can also specify a unit when you create a custom\n\t\t\tmetric. Units help provide conceptual meaning to your data. Metric data points that\n\t\t\tspecify a unit of measure, such as Percent, are aggregated separately.</p>\n\n\t\t       <p>If you specify a unit, you must use a unit that is appropriate for the metric. \n\t\t\tOtherwise, the CloudWatch alarm can get stuck in the <code>INSUFFICIENT DATA</code> state. </p>\n\t     ",
            "shape_name": "StandardUnit"
          },
          "EvaluationPeriods": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The number of periods over which data is compared to the specified\n\t\t\tthreshold. If you are setting an alarm which requires that a number of consecutive data points be breaching to trigger the alarm,\n\t\tthis value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N.</simpara>\n\t\t       <simpara>An alarm's total current evaluation period can\n\t\t\tbe no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The number of periods over which data is compared to the specified\n\t\t\tthreshold. If you are setting an alarm which requires that a number of consecutive data points be breaching to trigger the alarm,\n\t\tthis value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N.</p>\n\t\t       <p>An alarm's total current evaluation period can\n\t\t\tbe no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>\n\t     ",
            "required": true,
            "shape_name": "EvaluationPeriods",
            "min_length": 1
          },
          "DatapointsToAlarm": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting \n\t\t\tan \"M out of N\" alarm. In that case, this value is the M. For more information, see \n\t\t\t<ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation\">Evaluating an Alarm</ulink> in the\n\t\t\t<emphasis>Amazon CloudWatch User Guide</emphasis>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting \n\t\t\tan \"M out of N\" alarm. In that case, this value is the M. For more information, see \n\t\t\t<a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation\">Evaluating an Alarm</a> in the\n\t\t\t<i>Amazon CloudWatch User Guide</i>.</p>\n\t     ",
            "shape_name": "DatapointsToAlarm",
            "min_length": 1
          },
          "Threshold": {
            "type": "double",
            "zonbookDocumentation": "\n\t\t       <simpara>The value against which the specified statistic is compared.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The value against which the specified statistic is compared.</p>\n\t     ",
            "required": true,
            "shape_name": "Threshold"
          },
          "ComparisonOperator": {
            "type": "string",
            "enum": [
              "GreaterThanOrEqualToThreshold",
              "GreaterThanThreshold",
              "LessThanThreshold",
              "LessThanOrEqualToThreshold"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara> The arithmetic operation to use when comparing the specified statistic and\n\t\t\tthreshold. The specified statistic value is used as the first operand.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p> The arithmetic operation to use when comparing the specified statistic and\n\t\t\tthreshold. The specified statistic value is used as the first operand.</p>\n\t     ",
            "required": true,
            "shape_name": "ComparisonOperator"
          },
          "TreatMissingData": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. \n\t\t\tFor more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data\">Configuring How CloudWatch \n\t\t\t\tAlarms Treats Missing Data</ulink>.</simpara>\n\t\t       <simpara>Valid Values: <code>breaching | notBreaching | ignore | missing</code>\n         </simpara>\n\t     ",
            "documentation": "\n\t\t       <p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. \n\t\t\tFor more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data\">Configuring How CloudWatch \n\t\t\t\tAlarms Treats Missing Data</a>.</p>\n\t\t       <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code>\n         </p>\n\t     ",
            "shape_name": "TreatMissingData",
            "min_length": 1,
            "max_length": 255
          },
          "EvaluateLowSampleCountPercentile": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be \n\t\t\tstatistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state\n\t\t\tno matter how many data points are available. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples\">Percentile-Based CloudWatch Alarms and Low Data Samples</ulink>.</simpara>\n\t\t       <simpara>Valid Values: <code>evaluate | ignore</code>\n         </simpara>\n\t     ",
            "documentation": "\n\t\t       <p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be \n\t\t\tstatistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state\n\t\t\tno matter how many data points are available. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples\">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p>\n\t\t       <p>Valid Values: <code>evaluate | ignore</code>\n         </p>\n\t     ",
            "shape_name": "EvaluateLowSampleCountPercentile",
            "min_length": 1,
            "max_length": 255
          }
        },
        "shape_name": "PutMetricAlarmInput",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The quota for alarms for this customer has already been reached.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The quota for alarms for this customer has already been reached.</p>\n\t     ",
          "shape_name": "LimitExceededFault"
        }
      ],
      "documentation": "\n\t\t       <p>Creates or updates an alarm and associates it with the specified metric.\n\t\t\tOptionally, this operation can associate one or more Amazon SNS resources with the alarm.</p>\n\t\t       <p>When this operation creates an alarm, the alarm state is immediately set to\n\t\t\t<code>INSUFFICIENT_DATA</code>. The alarm is evaluated and its state is set\n\t\t\tappropriately. Any actions associated with the state are then executed.</p>\n\t\t       <p>When you update an existing alarm, its state is left unchanged, but the\n\t\t\tupdate completely overwrites the previous configuration of the alarm.</p>\n\n\t\t       <p>If you are an IAM user, you must have \n\t\t\tAmazon EC2 permissions for some operations:</p>\n\t\t       <ul>\n            <li>\n\t\t\t\t           <p>\n                  <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>\n                  <code>ec2:DescribeInstanceStatus</code> and\n\t\t\t\t\t<code>ec2:DescribeInstances</code> for all alarms on EC2 instance\n\t\t\t\t\tstatus metrics</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>\n                  <code>ec2:StopInstances</code> for alarms with stop actions</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>\n                  <code>ec2:TerminateInstances</code> for alarms with terminate\n\t\t\t\t\tactions</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>\n                  <code>ec2:DescribeInstanceRecoveryAttribute</code> and\n\t\t\t\t\t<code>ec2:RecoverInstances</code> for alarms with recover actions</p>\n\t\t\t         </li>\n         </ul>\n\n\t\t       <p>If you have read/write permissions for Amazon CloudWatch but not for Amazon\n\t\t\tEC2, you can still create an alarm, but the stop or terminate actions are not\n\t\t\tperformed. However, if you are later granted the required permissions, the alarm \n\t\t\tactions that you created earlier are performed.</p>\n\t\t       <p>If you are using an IAM role (for example, an EC2 instance profile), you cannot\n\t\t\tstop or terminate the instance using alarm actions. However, you can still see the\n\t\t\talarm state and perform any other actions such as Amazon SNS notifications or Auto Scaling \n\t\t\tpolicies.</p>\n\t\t       <p>If you are using temporary security credentials granted using AWS STS, you cannot stop or terminate an EC2 instance using\n\t\t\talarm actions.</p>\n\t\t       <p>The first time you create an alarm in the \n\t\t\tAWS Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch\n\t\t\tcreates the necessary service-linked role for you. The service-linked role is called <code>AWSServiceRoleForCloudWatchEvents</code>.\n\t\t\tFor more information about service-linked roles, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role\">AWS service-linked role</a>.</p>\n\t\t\t\n\t     "
    },
    "SetAlarmState": {
      "name": "SetAlarmState",
      "input": {
        "type": "structure",
        "members": {
          "AlarmName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name for the alarm. This name must be unique within the AWS\n\t\t\taccount. The maximum length is 255 characters.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name for the alarm. This name must be unique within the AWS\n\t\t\taccount. The maximum length is 255 characters.</p>\n\t     ",
            "required": true,
            "shape_name": "AlarmName",
            "min_length": 1,
            "max_length": 255
          },
          "StateValue": {
            "type": "string",
            "enum": [
              "OK",
              "ALARM",
              "INSUFFICIENT_DATA"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The value of the state.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The value of the state.</p>\n\t     ",
            "required": true,
            "shape_name": "StateValue"
          },
          "StateReason": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The reason that this alarm is set to this specific state, in text format.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The reason that this alarm is set to this specific state, in text format.</p>\n\t     ",
            "required": true,
            "shape_name": "StateReason",
            "min_length": 0,
            "max_length": 1023
          },
          "StateReasonData": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The reason that this alarm is set to this specific state, in JSON format.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The reason that this alarm is set to this specific state, in JSON format.</p>\n\t     ",
            "shape_name": "StateReasonData",
            "min_length": 0,
            "max_length": 4000
          }
        },
        "shape_name": "SetAlarmStateInput",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The named resource does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The named resource does not exist.</p>\n\t     ",
          "shape_name": "ResourceNotFound"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>Data was not syntactically valid JSON.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>Data was not syntactically valid JSON.</p>\n\t     ",
          "shape_name": "InvalidFormatFault"
        }
      ],
      "documentation": "\n\t\t       <p>Temporarily sets the state of an alarm for testing purposes. When the updated\n\t\t\tstate differs from the previous value, the action configured for\n\t\t\tthe appropriate state is invoked. For example, if your alarm is configured to send an\n\t\t\tAmazon SNS message when an alarm is triggered, temporarily changing the alarm state to\n\t\t\t<code>ALARM</code> sends an SNS message. The alarm\n\t\t\treturns to its actual state (often within seconds). Because the alarm state change\n\t\t\thappens quickly, it is typically only visible in the alarm's <b>History</b> tab in the Amazon CloudWatch console or through\n\t\t\t<a>DescribeAlarmHistory</a>.</p>\n\t     "
    },
    "EnableAlarmActions": {
      "name": "EnableAlarmActions",
      "input": {
        "type": "structure",
        "members": {
          "AlarmNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The names of the alarms.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The names of the alarms.</p>\n\t     ",
            "required": true,
            "shape_name": "AlarmNames",
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "AlarmName",
              "documentation": null,
              "min_length": 1,
              "max_length": 255
            }
          }
        },
        "shape_name": "EnableAlarmActionsInput",
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t       <p>Enables the actions for the specified alarms.</p>\n\t     "
    },
    "DisableAlarmActions": {
      "name": "DisableAlarmActions",
      "input": {
        "type": "structure",
        "members": {
          "AlarmNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The names of the alarms.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The names of the alarms.</p>\n\t     ",
            "required": true,
            "shape_name": "AlarmNames",
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "AlarmName",
              "documentation": null,
              "min_length": 1,
              "max_length": 255
            }
          }
        },
        "shape_name": "DisableAlarmActionsInput",
        "documentation": null
      },
      "output": null,
      "errors": [

      ],
      "documentation": "\n\t\t       <p>Disables the actions for the specified alarms. When an alarm's actions are disabled, the\n\t\t\talarm actions do not execute when the alarm state changes.</p>\n\t     "
    },
    "DescribeAlarms": {
      "name": "DescribeAlarms",
      "input": {
        "type": "structure",
        "members": {
          "AlarmNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The names of the alarms.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The names of the alarms.</p>\n\t     ",
            "shape_name": "AlarmNames",
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "AlarmName",
              "documentation": null,
              "min_length": 1,
              "max_length": 255
            }
          },
          "AlarmNamePrefix": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The alarm name prefix. If this parameter\n\t\t\tis specified, you cannot specify <code>AlarmNames</code>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The alarm name prefix. If this parameter\n\t\t\tis specified, you cannot specify <code>AlarmNames</code>.</p>\n\t     ",
            "shape_name": "AlarmNamePrefix",
            "min_length": 1,
            "max_length": 255
          },
          "StateValue": {
            "type": "string",
            "enum": [
              "OK",
              "ALARM",
              "INSUFFICIENT_DATA"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The state value to be used in matching alarms.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The state value to be used in matching alarms.</p>\n\t     ",
            "shape_name": "StateValue"
          },
          "ActionPrefix": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The action name prefix.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The action name prefix.</p>\n\t     ",
            "shape_name": "ActionPrefix",
            "min_length": 1,
            "max_length": 1024
          },
          "MaxRecords": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of alarm descriptions to retrieve.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of alarm descriptions to retrieve.</p>\n\t     ",
            "shape_name": "MaxRecords",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "DescribeAlarmsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "MetricAlarms": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The information for the specified alarms.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The information for the specified alarms.</p>\n\t     ",
            "shape_name": "MetricAlarms",
            "members": {
              "type": "structure",
              "members": {
                "AlarmName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmName",
                  "min_length": 1,
                  "max_length": 255
                },
                "AlarmArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmArn",
                  "min_length": 1,
                  "max_length": 1600
                },
                "AlarmDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The description of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The description of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmDescription",
                  "min_length": 0,
                  "max_length": 1024
                },
                "AlarmConfigurationUpdatedTimestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of the last update to the alarm configuration.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of the last update to the alarm configuration.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "ActionsEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n\t\t       <simpara>Indicates whether actions should be executed during any changes to the alarm state.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Indicates whether actions should be executed during any changes to the alarm state.</p>\n\t     ",
                  "shape_name": "ActionsEnabled"
                },
                "OKActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "AlarmActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>ALARM</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>ALARM</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "InsufficientDataActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "StateValue": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "ALARM",
                    "INSUFFICIENT_DATA"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The state value for the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The state value for the alarm.</p>\n\t     ",
                  "shape_name": "StateValue"
                },
                "StateReason": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>An explanation for the alarm state, in text format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>An explanation for the alarm state, in text format.</p>\n\t     ",
                  "shape_name": "StateReason",
                  "min_length": 0,
                  "max_length": 1023
                },
                "StateReasonData": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>An explanation for the alarm state, in JSON format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>An explanation for the alarm state, in JSON format.</p>\n\t     ",
                  "shape_name": "StateReasonData",
                  "min_length": 0,
                  "max_length": 4000
                },
                "StateUpdatedTimestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of the last update to the alarm state.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of the last update to the alarm state.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "MetricName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "MetricName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Namespace": {
                  "type": "string",
                  "pattern": "[^:].*",
                  "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The namespace of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "Namespace",
                  "min_length": 1,
                  "max_length": 255
                },
                "Statistic": {
                  "type": "string",
                  "enum": [
                    "SampleCount",
                    "Average",
                    "Sum",
                    "Minimum",
                    "Maximum"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>.</p>\n\t     ",
                  "shape_name": "Statistic"
                },
                "ExtendedStatistic": {
                  "type": "string",
                  "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
                  "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistic for the metric associated with the alarm. Specify a value between\n\t\t\tp0.0 and p100.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The percentile statistic for the metric associated with the alarm. Specify a value between\n\t\t\tp0.0 and p100.</p>\n\t     ",
                  "shape_name": "ExtendedStatistic"
                },
                "Dimensions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The dimensions for the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "Dimensions",
                  "max_length": 10,
                  "members": {
                    "type": "structure",
                    "members": {
                      "Name": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionValue",
                        "min_length": 1,
                        "max_length": 255
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                    "shape_name": "Dimension",
                    "member_order": [
                      "Name",
                      "Value"
                    ]
                  }
                },
                "Period": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The period, in seconds, over which the statistic is applied.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The period, in seconds, over which the statistic is applied.</p>\n\t     ",
                  "shape_name": "Period",
                  "min_length": 1
                },
                "Unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The unit of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The unit of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "StandardUnit"
                },
                "EvaluationPeriods": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The number of periods over which data is compared to the specified threshold.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of periods over which data is compared to the specified threshold.</p>\n\t     ",
                  "shape_name": "EvaluationPeriods",
                  "min_length": 1
                },
                "DatapointsToAlarm": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The number of datapoints that must be breaching to trigger the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of datapoints that must be breaching to trigger the alarm.</p>\n\t     ",
                  "shape_name": "DatapointsToAlarm",
                  "min_length": 1
                },
                "Threshold": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value to compare with the specified statistic.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value to compare with the specified statistic.</p>\n\t     ",
                  "shape_name": "Threshold"
                },
                "ComparisonOperator": {
                  "type": "string",
                  "enum": [
                    "GreaterThanOrEqualToThreshold",
                    "GreaterThanThreshold",
                    "LessThanThreshold",
                    "LessThanOrEqualToThreshold"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The arithmetic operation to use when comparing the specified\n\t\t\tstatistic and threshold. The specified statistic value is used as the first operand.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The arithmetic operation to use when comparing the specified\n\t\t\tstatistic and threshold. The specified statistic value is used as the first operand.</p>\n\t     ",
                  "shape_name": "ComparisonOperator"
                },
                "TreatMissingData": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.</simpara>\n\t     ",
                  "documentation": "\n        <p>Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.</p>\n\t     ",
                  "shape_name": "TreatMissingData",
                  "min_length": 1,
                  "max_length": 255
                },
                "EvaluateLowSampleCountPercentile": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change \n\t\t\tduring periods with too few data points to be statistically significant. If <code>evaluate</code> or this \n\t\t\tparameter is not used, the alarm is always evaluated and possibly changes state no matter \n\t\t\thow many data points are available.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change \n\t\t\tduring periods with too few data points to be statistically significant. If <code>evaluate</code> or this \n\t\t\tparameter is not used, the alarm is always evaluated and possibly changes state no matter \n\t\t\thow many data points are available.</p>\n\t     ",
                  "shape_name": "EvaluateLowSampleCountPercentile",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents an alarm.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents an alarm.</p>\n\t     ",
              "shape_name": "MetricAlarm",
              "member_order": [
                "AlarmName",
                "AlarmArn",
                "AlarmDescription",
                "AlarmConfigurationUpdatedTimestamp",
                "ActionsEnabled",
                "OKActions",
                "AlarmActions",
                "InsufficientDataActions",
                "StateValue",
                "StateReason",
                "StateReasonData",
                "StateUpdatedTimestamp",
                "MetricName",
                "Namespace",
                "Statistic",
                "Dimensions",
                "Period",
                "Unit",
                "EvaluationPeriods",
                "Threshold",
                "ComparisonOperator",
                "ExtendedStatistic",
                "TreatMissingData",
                "EvaluateLowSampleCountPercentile",
                "DatapointsToAlarm"
              ]
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token that marks the start of the next batch of returned results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token that marks the start of the next batch of returned results.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "DescribeAlarmsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The next token specified is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The next token specified is invalid.</p>\n\t     ",
          "shape_name": "InvalidNextToken"
        }
      ],
      "documentation": "\n\t\t       <p>Retrieves the specified alarms. If no alarms are specified, all alarms are\n\t\t\treturned. Alarms can be retrieved by using only a prefix for the alarm\n\t\t\tname, the alarm state, or a prefix for any action.</p>\n\t     "
    },
    "DescribeAlarmsForMetric": {
      "name": "DescribeAlarmsForMetric",
      "input": {
        "type": "structure",
        "members": {
          "MetricName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the metric.</p>\n\t     ",
            "required": true,
            "shape_name": "MetricName",
            "min_length": 1,
            "max_length": 255
          },
          "Namespace": {
            "type": "string",
            "pattern": "[^:].*",
            "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The namespace of the metric.</p>\n\t     ",
            "required": true,
            "shape_name": "Namespace",
            "min_length": 1,
            "max_length": 255
          },
          "Statistic": {
            "type": "string",
            "enum": [
              "SampleCount",
              "Average",
              "Sum",
              "Minimum",
              "Maximum"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The statistic for the metric, other than percentiles.\n\t\t    For percentile statistics, use <code>ExtendedStatistics</code>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The statistic for the metric, other than percentiles.\n\t\t    For percentile statistics, use <code>ExtendedStatistics</code>.</p>\n\t     ",
            "shape_name": "Statistic"
          },
          "ExtendedStatistic": {
            "type": "string",
            "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
            "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistic for the metric. Specify a value between\n\t\t    p0.0 and p100.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The percentile statistic for the metric. Specify a value between\n\t\t    p0.0 and p100.</p>\n\t     ",
            "shape_name": "ExtendedStatistic"
          },
          "Dimensions": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The dimensions associated with the metric. If the metric has any associated\n\t\t\tdimensions, you must specify them in order for the call to succeed.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The dimensions associated with the metric. If the metric has any associated\n\t\t\tdimensions, you must specify them in order for the call to succeed.</p>\n\t     ",
            "shape_name": "Dimensions",
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                  "required": true,
                  "shape_name": "DimensionValue",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
              "shape_name": "Dimension",
              "member_order": [
                "Name",
                "Value"
              ]
            }
          },
          "Period": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The period, in seconds, over which the statistic is applied.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The period, in seconds, over which the statistic is applied.</p>\n\t     ",
            "shape_name": "Period",
            "min_length": 1
          },
          "Unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The unit for the metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The unit for the metric.</p>\n\t     ",
            "shape_name": "StandardUnit"
          }
        },
        "shape_name": "DescribeAlarmsForMetricInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "MetricAlarms": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The information for each alarm with the specified metric.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The information for each alarm with the specified metric.</p>\n\t     ",
            "shape_name": "MetricAlarms",
            "members": {
              "type": "structure",
              "members": {
                "AlarmName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmName",
                  "min_length": 1,
                  "max_length": 255
                },
                "AlarmArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmArn",
                  "min_length": 1,
                  "max_length": 1600
                },
                "AlarmDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The description of the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The description of the alarm.</p>\n\t     ",
                  "shape_name": "AlarmDescription",
                  "min_length": 0,
                  "max_length": 1024
                },
                "AlarmConfigurationUpdatedTimestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of the last update to the alarm configuration.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of the last update to the alarm configuration.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "ActionsEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n\t\t       <simpara>Indicates whether actions should be executed during any changes to the alarm state.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Indicates whether actions should be executed during any changes to the alarm state.</p>\n\t     ",
                  "shape_name": "ActionsEnabled"
                },
                "OKActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>OK</code> state\n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "AlarmActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>ALARM</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>ALARM</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "InsufficientDataActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state \n\t\t\tfrom any other state. Each action is specified as an Amazon Resource Name (ARN).</p>\n\t     ",
                  "shape_name": "ResourceList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 1024
                  }
                },
                "StateValue": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "ALARM",
                    "INSUFFICIENT_DATA"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The state value for the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The state value for the alarm.</p>\n\t     ",
                  "shape_name": "StateValue"
                },
                "StateReason": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>An explanation for the alarm state, in text format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>An explanation for the alarm state, in text format.</p>\n\t     ",
                  "shape_name": "StateReason",
                  "min_length": 0,
                  "max_length": 1023
                },
                "StateReasonData": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>An explanation for the alarm state, in JSON format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>An explanation for the alarm state, in JSON format.</p>\n\t     ",
                  "shape_name": "StateReasonData",
                  "min_length": 0,
                  "max_length": 4000
                },
                "StateUpdatedTimestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp of the last update to the alarm state.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp of the last update to the alarm state.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "MetricName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "MetricName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Namespace": {
                  "type": "string",
                  "pattern": "[^:].*",
                  "zonbookDocumentation": "\n\t\t       <simpara>The namespace of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The namespace of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "Namespace",
                  "min_length": 1,
                  "max_length": 255
                },
                "Statistic": {
                  "type": "string",
                  "enum": [
                    "SampleCount",
                    "Average",
                    "Sum",
                    "Minimum",
                    "Maximum"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The statistic for the metric associated with the alarm, other than percentile.\n\t\t    For percentile statistics, use <code>ExtendedStatistic</code>.</p>\n\t     ",
                  "shape_name": "Statistic"
                },
                "ExtendedStatistic": {
                  "type": "string",
                  "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
                  "zonbookDocumentation": "\n\t\t       <simpara>The percentile statistic for the metric associated with the alarm. Specify a value between\n\t\t\tp0.0 and p100.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The percentile statistic for the metric associated with the alarm. Specify a value between\n\t\t\tp0.0 and p100.</p>\n\t     ",
                  "shape_name": "ExtendedStatistic"
                },
                "Dimensions": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>The dimensions for the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The dimensions for the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "Dimensions",
                  "max_length": 10,
                  "members": {
                    "type": "structure",
                    "members": {
                      "Name": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The name of the dimension.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The name of the dimension.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionName",
                        "min_length": 1,
                        "max_length": 255
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <simpara>The value representing the dimension measurement.</simpara>\n\t     ",
                        "documentation": "\n\t\t       <p>The value representing the dimension measurement.</p>\n\t     ",
                        "required": true,
                        "shape_name": "DimensionValue",
                        "min_length": 1,
                        "max_length": 255
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <simpara>Expands the identity of a metric.</simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>Expands the identity of a metric.</p>\n\t     ",
                    "shape_name": "Dimension",
                    "member_order": [
                      "Name",
                      "Value"
                    ]
                  }
                },
                "Period": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The period, in seconds, over which the statistic is applied.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The period, in seconds, over which the statistic is applied.</p>\n\t     ",
                  "shape_name": "Period",
                  "min_length": 1
                },
                "Unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The unit of the metric associated with the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The unit of the metric associated with the alarm.</p>\n\t     ",
                  "shape_name": "StandardUnit"
                },
                "EvaluationPeriods": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The number of periods over which data is compared to the specified threshold.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of periods over which data is compared to the specified threshold.</p>\n\t     ",
                  "shape_name": "EvaluationPeriods",
                  "min_length": 1
                },
                "DatapointsToAlarm": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <simpara>The number of datapoints that must be breaching to trigger the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of datapoints that must be breaching to trigger the alarm.</p>\n\t     ",
                  "shape_name": "DatapointsToAlarm",
                  "min_length": 1
                },
                "Threshold": {
                  "type": "double",
                  "zonbookDocumentation": "\n\t\t       <simpara>The value to compare with the specified statistic.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The value to compare with the specified statistic.</p>\n\t     ",
                  "shape_name": "Threshold"
                },
                "ComparisonOperator": {
                  "type": "string",
                  "enum": [
                    "GreaterThanOrEqualToThreshold",
                    "GreaterThanThreshold",
                    "LessThanThreshold",
                    "LessThanOrEqualToThreshold"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The arithmetic operation to use when comparing the specified\n\t\t\tstatistic and threshold. The specified statistic value is used as the first operand.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The arithmetic operation to use when comparing the specified\n\t\t\tstatistic and threshold. The specified statistic value is used as the first operand.</p>\n\t     ",
                  "shape_name": "ComparisonOperator"
                },
                "TreatMissingData": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.</simpara>\n\t     ",
                  "documentation": "\n        <p>Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.</p>\n\t     ",
                  "shape_name": "TreatMissingData",
                  "min_length": 1,
                  "max_length": 255
                },
                "EvaluateLowSampleCountPercentile": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change \n\t\t\tduring periods with too few data points to be statistically significant. If <code>evaluate</code> or this \n\t\t\tparameter is not used, the alarm is always evaluated and possibly changes state no matter \n\t\t\thow many data points are available.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change \n\t\t\tduring periods with too few data points to be statistically significant. If <code>evaluate</code> or this \n\t\t\tparameter is not used, the alarm is always evaluated and possibly changes state no matter \n\t\t\thow many data points are available.</p>\n\t     ",
                  "shape_name": "EvaluateLowSampleCountPercentile",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents an alarm.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents an alarm.</p>\n\t     ",
              "shape_name": "MetricAlarm",
              "member_order": [
                "AlarmName",
                "AlarmArn",
                "AlarmDescription",
                "AlarmConfigurationUpdatedTimestamp",
                "ActionsEnabled",
                "OKActions",
                "AlarmActions",
                "InsufficientDataActions",
                "StateValue",
                "StateReason",
                "StateReasonData",
                "StateUpdatedTimestamp",
                "MetricName",
                "Namespace",
                "Statistic",
                "Dimensions",
                "Period",
                "Unit",
                "EvaluationPeriods",
                "Threshold",
                "ComparisonOperator",
                "ExtendedStatistic",
                "TreatMissingData",
                "EvaluateLowSampleCountPercentile",
                "DatapointsToAlarm"
              ]
            }
          }
        },
        "shape_name": "DescribeAlarmsForMetricOutput",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n\t\t       <p>Retrieves the alarms for the specified metric. To\n\t\t\tfilter the results, specify a statistic, period, or unit.</p>\n\t     "
    },
    "DeleteAlarms": {
      "name": "DeleteAlarms",
      "input": {
        "type": "structure",
        "members": {
          "AlarmNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The alarms to be deleted.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The alarms to be deleted.</p>\n\t     ",
            "required": true,
            "shape_name": "AlarmNames",
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "AlarmName",
              "documentation": null,
              "min_length": 1,
              "max_length": 255
            }
          }
        },
        "shape_name": "DeleteAlarmsInput",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The named resource does not exist.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The named resource does not exist.</p>\n\t     ",
          "shape_name": "ResourceNotFound"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes the specified alarms. In the event of an error, no alarms are\n\t\t\tdeleted.</p>\n\t     "
    },
    "DescribeAlarmHistory": {
      "name": "DescribeAlarmHistory",
      "input": {
        "type": "structure",
        "members": {
          "AlarmName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the alarm.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the alarm.</p>\n\t     ",
            "shape_name": "AlarmName",
            "min_length": 1,
            "max_length": 255
          },
          "HistoryItemType": {
            "type": "string",
            "enum": [
              "ConfigurationUpdate",
              "StateUpdate",
              "Action"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The type of alarm histories to retrieve.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The type of alarm histories to retrieve.</p>\n\t     ",
            "shape_name": "HistoryItemType"
          },
          "StartDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The starting date to retrieve alarm history.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The starting date to retrieve alarm history.</p>\n\t     ",
            "shape_name": "Timestamp"
          },
          "EndDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The ending date to retrieve alarm history.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ending date to retrieve alarm history.</p>\n\t     ",
            "shape_name": "Timestamp"
          },
          "MaxRecords": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of alarm history records to retrieve.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of alarm history records to retrieve.</p>\n\t     ",
            "shape_name": "MaxRecords",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token returned by a previous call to indicate that there is more data\n\t\t\tavailable.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "DescribeAlarmHistoryInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AlarmHistoryItems": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The alarm histories, in JSON format.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The alarm histories, in JSON format.</p>\n\t     ",
            "shape_name": "AlarmHistoryItems",
            "members": {
              "type": "structure",
              "members": {
                "AlarmName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The descriptive name for the alarm.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The descriptive name for the alarm.</p>\n\t     ",
                  "shape_name": "AlarmName",
                  "min_length": 1,
                  "max_length": 255
                },
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <simpara>The time stamp for the alarm history item.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The time stamp for the alarm history item.</p>\n\t     ",
                  "shape_name": "Timestamp"
                },
                "HistoryItemType": {
                  "type": "string",
                  "enum": [
                    "ConfigurationUpdate",
                    "StateUpdate",
                    "Action"
                  ],
                  "zonbookDocumentation": "\n\t\t       <simpara>The type of alarm history item.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The type of alarm history item.</p>\n\t     ",
                  "shape_name": "HistoryItemType"
                },
                "HistorySummary": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>A summary of the alarm history, in text format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>A summary of the alarm history, in text format.</p>\n\t     ",
                  "shape_name": "HistorySummary",
                  "min_length": 1,
                  "max_length": 255
                },
                "HistoryData": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>Data about the alarm, in JSON format.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Data about the alarm, in JSON format.</p>\n\t     ",
                  "shape_name": "HistoryData",
                  "min_length": 1,
                  "max_length": 4095
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>Represents the history of a specific alarm.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>Represents the history of a specific alarm.</p>\n\t     ",
              "shape_name": "AlarmHistoryItem"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token that marks the start of the next batch of returned results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token that marks the start of the next batch of returned results.</p>\n\t     ",
            "shape_name": "NextToken",
            "min_length": 0,
            "max_length": 1024
          }
        },
        "shape_name": "DescribeAlarmHistoryOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara/>\n\t     ",
              "documentation": "\n\t\t       <p/>\n\t     ",
              "shape_name": "ErrorMessage",
              "min_length": 1,
              "max_length": 255
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The next token specified is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The next token specified is invalid.</p>\n\t     ",
          "shape_name": "InvalidNextToken"
        }
      ],
      "documentation": "\n\t\t       <p>Retrieves the history for the specified alarm. You can filter the results by date range or item type.\n\t\t\tIf an alarm name is not specified, the histories for all alarms are returned.</p>\n\t\t       <p>CloudWatch retains the history of an alarm even if you delete the alarm.</p>\n\t     "
    }
  }
}
