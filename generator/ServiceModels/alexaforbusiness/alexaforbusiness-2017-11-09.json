{
  "version": "1.0",
  "type": "json",
  "json_version": "1.1",
  "signature_version": "v4",
  "endpoint_prefix": "a4b",
  "service_full_name": "Alexa For Business",
  "service_id": "Alexa For Business",
  "uid": "alexaforbusiness-2017-11-09",
  "api_version": "2017-11-09",
  "target_prefix": "AlexaForBusiness",
  "documentation": "\n         <p>Alexa for Business helps you use Alexa in your organization. Alexa for Business provides the tools you to\n         manage Alexa devices, enroll your users, and assign skills, at scale. You can build your\n         own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations.\n         You can also make these available as private skills for your organization. Alexa for Business makes it\n         efficient to voice-enable your products and services, thus providing context-aware voice\n         experiences for your customers. In addition, Alexa for Business enables Alexa Voice Services (AVS)\n         device manufacturers to centrally deploy and manage their devices in Alexa for Business as shared\n         devices as a part of their existing management flow. </p>\n      ",
  "operations": {
    "CreateOrganization": {
      "name": "CreateOrganization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "shape_name": "OrganizationName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "OrganizationCategory": {
            "type": "string",
            "enum": [
              "A4B",
              "A4H"
            ],
            "shape_name": "OrganizationCategory",
            "documentation": null
          }
        },
        "shape_name": "CreateOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "CreateOrganizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "UpdateOrganization": {
      "name": "UpdateOrganization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "shape_name": "OrganizationName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "DefaultProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "DefaultProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "DomainNames": {
            "type": "list",
            "shape_name": "DomainList",
            "documentation": null,
            "members": {
              "type": "string",
              "pattern": "([0-9a-z][-a-z0-9_]*[0-9a-z]\\.)+[a-z]{2,9}",
              "shape_name": "Domain",
              "documentation": null,
              "min_length": 1,
              "max_length": 253
            }
          },
          "RestrictionRequired": {
            "type": "boolean",
            "shape_name": "Boolean",
            "documentation": null
          },
          "OrganizationCategory": {
            "type": "string",
            "enum": [
              "A4B",
              "A4H"
            ],
            "shape_name": "OrganizationCategory",
            "documentation": null
          }
        },
        "shape_name": "UpdateOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateOrganizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListOrganizations": {
      "name": "ListOrganizations",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListOrganizationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Organizations": {
            "type": "list",
            "shape_name": "OrganizationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "OrganizationArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "OrganizationId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "OrganizationId",
                  "documentation": null
                },
                "OrganizationName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "shape_name": "OrganizationName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ProviderId": {
                  "type": "string",
                  "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
                  "shape_name": "ProviderId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "DefaultProfileId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "ProfileId",
                  "documentation": null
                },
                "DefaultOutboundCallerId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "shape_name": "OutboundCallerId",
                  "documentation": null
                },
                "DefaultProfileArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "DomainNames": {
                  "type": "list",
                  "shape_name": "DomainList",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "pattern": "([0-9a-z][-a-z0-9_]*[0-9a-z]\\.)+[a-z]{2,9}",
                    "shape_name": "Domain",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 253
                  }
                },
                "RestrictionRequired": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "OrganizationCategory": {
                  "type": "string",
                  "enum": [
                    "A4B",
                    "A4H"
                  ],
                  "shape_name": "OrganizationCategory",
                  "documentation": null
                }
              },
              "shape_name": "Organization",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListOrganizationsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateRoom": {
      "name": "CreateRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name for the room.</simpara>\n      ",
            "documentation": "\n         <p>The name for the room.</p>\n      ",
            "required": true,
            "shape_name": "RoomName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The description for the room.</simpara>\n      ",
            "documentation": "\n         <p>The description for the room.</p>\n      ",
            "shape_name": "RoomDescription",
            "min_length": 1,
            "max_length": 200
          },
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The profile ARN for the room.</simpara>\n      ",
            "documentation": "\n         <p>The profile ARN for the room.</p>\n      ",
            "shape_name": "Arn"
          },
          "ProviderCalendarId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The calendar ARN for the room.</simpara>\n      ",
            "documentation": "\n         <p>The calendar ARN for the room.</p>\n      ",
            "shape_name": "ProviderCalendarId",
            "min_length": 0,
            "max_length": 100
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>A unique, user-specified identifier for this request that ensures idempotency.\n      </p>\n      ",
            "zonbookDocumentation": "\n         <simpara>A unique, user-specified identifier for this request that ensures idempotency.\n      </simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The tags for the room.</simpara>\n      ",
            "documentation": "\n         <p>The tags for the room.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The key of a tag. Tag keys are case-sensitive. </simpara>\n      ",
                  "documentation": "\n         <p>The key of a tag. Tag keys are case-sensitive. </p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 128
                },
                "Value": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The value of a tag. Tag values are case-sensitive and can be null.</simpara>\n      ",
                  "documentation": "\n         <p>The value of a tag. Tag values are case-sensitive and can be null.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 0,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <simpara>A key-value pair that can be associated with a resource. </simpara>\n      ",
              "documentation": "\n         <p>A key-value pair that can be associated with a resource. </p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created room in the response.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created room in the response.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a room with the specified details.</p>\n      "
    },
    "GetRoom": {
      "name": "GetRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room for which to request details. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room for which to request details. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Room": {
            "type": "structure",
            "members": {
              "RoomId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "RoomId",
                "documentation": null
              },
              "RoomArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of a room.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of a room.</p>\n      ",
                "shape_name": "Arn"
              },
              "RoomName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of a room.</simpara>\n      ",
                "documentation": "\n         <p>The name of a room.</p>\n      ",
                "shape_name": "RoomName",
                "min_length": 1,
                "max_length": 100
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The description of a room.</simpara>\n      ",
                "documentation": "\n         <p>The description of a room.</p>\n      ",
                "shape_name": "RoomDescription",
                "min_length": 1,
                "max_length": 200
              },
              "ProviderCalendarId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The provider calendar ARN of a room.</simpara>\n      ",
                "documentation": "\n         <p>The provider calendar ARN of a room.</p>\n      ",
                "shape_name": "ProviderCalendarId",
                "min_length": 0,
                "max_length": 100
              },
              "ProfileId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "ProfileId",
                "documentation": null
              },
              "ProfileArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The profile ARN of a room.</simpara>\n      ",
                "documentation": "\n         <p>The profile ARN of a room.</p>\n      ",
                "shape_name": "Arn"
              },
              "RoomType": {
                "type": "string",
                "enum": [
                  "TEST"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of room.</simpara>\n      ",
                "documentation": "\n         <p>The type of room.</p>\n      ",
                "internalonly": true,
                "shape_name": "RoomType"
              },
              "GatewayGroupArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "internalonly": true,
                "shape_name": "Arn",
                "documentation": null
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the room requested.</simpara>\n      ",
            "documentation": "\n         <p>The details of the room requested.</p>\n      ",
            "shape_name": "Room"
          }
        },
        "shape_name": "GetRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets room details by room ARN.</p>\n      "
    },
    "InternalGetRoom": {
      "name": "InternalGetRoom",
      "input": {
        "type": "structure",
        "members": {
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "InternalGetRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "InternalRoom": {
            "type": "structure",
            "members": {
              "RoomArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "RoomName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "RoomName",
                "documentation": null,
                "min_length": 1,
                "max_length": 100
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "RoomDescription",
                "documentation": null,
                "min_length": 1,
                "max_length": 200
              },
              "ProviderCalendarId": {
                "type": "string",
                "shape_name": "ProviderCalendarId",
                "documentation": null,
                "min_length": 0,
                "max_length": 100
              },
              "CustomerId": {
                "type": "string",
                "pattern": "^[0-9A-Z]*$",
                "shape_name": "CustomerId",
                "documentation": null,
                "min_length": 10,
                "max_length": 64
              },
              "ProfileArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "RoomType": {
                "type": "string",
                "enum": [
                  "TEST"
                ],
                "shape_name": "RoomType",
                "documentation": null
              },
              "GatewayGroupArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              }
            },
            "shape_name": "InternalRoom",
            "documentation": null
          }
        },
        "shape_name": "InternalGetRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "UpdateRoom": {
      "name": "UpdateRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room to\n         update.\n      </simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room to\n         update.\n      </p>\n      ",
            "shape_name": "Arn"
          },
          "RoomName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated name for the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated name for the room.</p>\n      ",
            "shape_name": "RoomName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated description for the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated description for the room.</p>\n      ",
            "shape_name": "RoomDescription",
            "min_length": 1,
            "max_length": 200
          },
          "ProviderCalendarId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The updated provider calendar ARN for the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated provider calendar ARN for the room.</p>\n      ",
            "shape_name": "ProviderCalendarId",
            "min_length": 0,
            "max_length": 100
          },
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The updated profile ARN for the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated profile ARN for the room.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "UpdateRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        }
      ],
      "documentation": "\n         <p>Updates room details by room ARN.</p>\n      "
    },
    "DeleteRoom": {
      "name": "DeleteRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room to delete. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room to delete. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes a room by the room ARN.</p>\n      "
    },
    "ListRooms": {
      "name": "ListRooms",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListRoomsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Rooms": {
            "type": "list",
            "shape_name": "RoomList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "RoomId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "RoomId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a room.</p>\n      ",
                  "shape_name": "Arn"
                },
                "RoomName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a room.</p>\n      ",
                  "shape_name": "RoomName",
                  "min_length": 1,
                  "max_length": 100
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The description of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The description of a room.</p>\n      ",
                  "shape_name": "RoomDescription",
                  "min_length": 1,
                  "max_length": 200
                },
                "ProviderCalendarId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The provider calendar ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The provider calendar ARN of a room.</p>\n      ",
                  "shape_name": "ProviderCalendarId",
                  "min_length": 0,
                  "max_length": 100
                },
                "ProfileId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "ProfileId",
                  "documentation": null
                },
                "ProfileArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The profile ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The profile ARN of a room.</p>\n      ",
                  "shape_name": "Arn"
                },
                "RoomType": {
                  "type": "string",
                  "enum": [
                    "TEST"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of room.</simpara>\n      ",
                  "documentation": "\n         <p>The type of room.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "RoomType"
                },
                "GatewayGroupArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "internalonly": true,
                  "shape_name": "Arn",
                  "documentation": null
                }
              },
              "zonbookDocumentation": "\n         <simpara>A room with attributes.</simpara>\n      ",
              "documentation": "\n         <p>A room with attributes.</p>\n      ",
              "shape_name": "Room"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListRoomsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "GetRoomForDevice": {
      "name": "GetRoomForDevice",
      "input": {
        "type": "structure",
        "members": {
          "DeviceSerialNumber": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,200}",
            "required": true,
            "shape_name": "DeviceSerialNumber",
            "documentation": null
          },
          "DeviceType": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,200}",
            "required": true,
            "shape_name": "DeviceType",
            "documentation": null
          },
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          }
        },
        "shape_name": "GetRoomForDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AwsAccountOrganizationId": {
            "type": "string",
            "internalonly": true,
            "shape_name": "AwsAccountOrganizationId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderCalendarId": {
            "type": "string",
            "shape_name": "ProviderCalendarId",
            "documentation": null,
            "min_length": 0,
            "max_length": 100
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "CommsId": {
            "type": "string",
            "shape_name": "CommsId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "ConferenceProvider": {
            "type": "structure",
            "members": {
              "Arn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the newly created conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the newly created conference provider.</p>\n      ",
                "shape_name": "Arn"
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of the conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The name of the conference provider.</p>\n      ",
                "shape_name": "ConferenceProviderName",
                "min_length": 1,
                "max_length": 50
              },
              "Type": {
                "type": "string",
                "enum": [
                  "CHIME",
                  "BLUEJEANS",
                  "FUZE",
                  "GOOGLE_HANGOUTS",
                  "POLYCOM",
                  "RINGCENTRAL",
                  "SKYPE_FOR_BUSINESS",
                  "WEBEX",
                  "ZOOM",
                  "CUSTOM"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of conference providers.</simpara>\n      ",
                "documentation": "\n         <p>The type of conference providers.</p>\n      ",
                "shape_name": "ConferenceProviderType"
              },
              "IPDialIn": {
                "type": "structure",
                "members": {
                  "Endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                    "documentation": "\n         <p>The IP address.</p>\n      ",
                    "required": true,
                    "shape_name": "Endpoint",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "CommsProtocol": {
                    "type": "string",
                    "enum": [
                      "SIP",
                      "SIPS",
                      "H323"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                    "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                    "required": true,
                    "shape_name": "CommsProtocol"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
                "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
                "shape_name": "IPDialIn"
              },
              "PSTNDialIn": {
                "type": "structure",
                "members": {
                  "CountryCode": {
                    "type": "string",
                    "pattern": "\\d{1,3}",
                    "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                    "documentation": "\n         <p>The zip code.</p>\n      ",
                    "required": true,
                    "shape_name": "CountryCode"
                  },
                  "PhoneNumber": {
                    "type": "string",
                    "pattern": "\\d{10}",
                    "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                    "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                    "required": true,
                    "shape_name": "PhoneNumber"
                  },
                  "OneClickIdDelay": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                    "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                    "required": true,
                    "shape_name": "OneClickIdDelay",
                    "min_length": 1,
                    "max_length": 2
                  },
                  "OneClickPinDelay": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                    "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                    "required": true,
                    "shape_name": "OneClickPinDelay",
                    "min_length": 1,
                    "max_length": 2
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
                "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
                "shape_name": "PSTNDialIn"
              },
              "MeetingSetting": {
                "type": "structure",
                "members": {
                  "RequirePin": {
                    "type": "string",
                    "enum": [
                      "YES",
                      "NO",
                      "OPTIONAL"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                    "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                    "required": true,
                    "shape_name": "RequirePin"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
                "shape_name": "MeetingSetting"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </simpara>\n      ",
            "documentation": "\n         <p>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </p>\n      ",
            "shape_name": "ConferenceProvider"
          },
          "OutboundCallerPhoneNumber": {
            "type": "string",
            "pattern": "^\\+\\d{8,}$",
            "shape_name": "OutboundCallerPhoneNumber",
            "documentation": null
          }
        },
        "shape_name": "GetRoomForDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ResolveRoom": {
      "name": "ResolveRoom",
      "input": {
        "type": "structure",
        "members": {
          "UserId": {
            "type": "string",
            "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
            "zonbookDocumentation": "\n         <simpara>The\n         ARN of the user. Required.</simpara>\n      ",
            "documentation": "\n         <p>The\n         ARN of the user. Required.</p>\n      ",
            "required": true,
            "shape_name": "UserId"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill that was requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill that was requested. Required.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          }
        },
        "shape_name": "ResolveRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room from which the skill request was invoked.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room from which the skill request was invoked.</p>\n      ",
            "shape_name": "Arn"
          },
          "RoomName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name of the room from which the skill request was invoked.</simpara>\n      ",
            "documentation": "\n         <p>The name of the room from which the skill request was invoked.</p>\n      ",
            "shape_name": "RoomName",
            "min_length": 1,
            "max_length": 100
          },
          "RoomSkillParameters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Response to get the room profile request. Required.</simpara>\n      ",
            "documentation": "\n         <p>Response to get the room profile request. Required.</p>\n      ",
            "shape_name": "RoomSkillParameters",
            "members": {
              "type": "structure",
              "members": {
                "ParameterKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</simpara>\n      ",
                  "documentation": "\n         <p>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</p>\n      ",
                  "required": true,
                  "shape_name": "RoomSkillParameterKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "ParameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The parameter value of a room skill parameter.</simpara>\n      ",
                  "documentation": "\n         <p>The parameter value of a room skill parameter.</p>\n      ",
                  "required": true,
                  "shape_name": "RoomSkillParameterValue",
                  "min_length": 1,
                  "max_length": 512
                }
              },
              "zonbookDocumentation": "\n         <simpara>A skill parameter associated with a room.</simpara>\n      ",
              "documentation": "\n         <p>A skill parameter associated with a room.</p>\n      ",
              "shape_name": "RoomSkillParameter"
            }
          }
        },
        "shape_name": "ResolveRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Determines the details for the room from which a skill request was invoked. This\n         operation is used by skill developers.</p>\n      "
    },
    "SearchRooms": {
      "name": "SearchRooms",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. </simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. </p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of rooms. The supported filter keys are\n         RoomName and ProfileName.</simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of rooms. The supported filter keys are\n         RoomName and ProfileName.</p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of rooms. The supported sort keys\n         are RoomName and ProfileName.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of rooms. The supported sort keys\n         are RoomName and ProfileName.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          }
        },
        "shape_name": "SearchRoomsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Rooms": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The rooms that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The rooms that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "RoomDataList",
            "members": {
              "type": "structure",
              "members": {
                "RoomId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "RoomId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a room.</p>\n      ",
                  "shape_name": "Arn"
                },
                "RoomName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a room.</p>\n      ",
                  "shape_name": "RoomName",
                  "min_length": 1,
                  "max_length": 100
                },
                "RoomType": {
                  "type": "string",
                  "enum": [
                    "TEST"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of room.</simpara>\n      ",
                  "documentation": "\n         <p>The type of room.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "RoomType"
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The description of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The description of a room.</p>\n      ",
                  "shape_name": "RoomDescription",
                  "min_length": 1,
                  "max_length": 200
                },
                "ProviderCalendarId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The provider calendar ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The provider calendar ARN of a room.</p>\n      ",
                  "shape_name": "ProviderCalendarId",
                  "min_length": 0,
                  "max_length": 100
                },
                "ProfileId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "ProfileId",
                  "documentation": null
                },
                "ProfileArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The profile ARN of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The profile ARN of a room.</p>\n      ",
                  "shape_name": "Arn"
                },
                "ProfileName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The profile name of a room.</simpara>\n      ",
                  "documentation": "\n         <p>The profile name of a room.</p>\n      ",
                  "shape_name": "ProfileName",
                  "min_length": 1,
                  "max_length": 100
                }
              },
              "zonbookDocumentation": "\n         <simpara>The\n         data of a room.</simpara>\n      ",
              "documentation": "\n         <p>The\n         data of a room.</p>\n      ",
              "shape_name": "RoomData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of rooms returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of rooms returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchRoomsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches rooms and lists the ones that meet a set of filter and sort\n         criteria.</p>\n      "
    },
    "CreateProfile": {
      "name": "CreateProfile",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "ProfileName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name of a room profile.</simpara>\n      ",
            "documentation": "\n         <p>The name of a room profile.</p>\n      ",
            "required": true,
            "shape_name": "ProfileName",
            "min_length": 1,
            "max_length": 100
          },
          "Timezone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The time zone used by a room profile.</simpara>\n      ",
            "documentation": "\n         <p>The time zone used by a room profile.</p>\n      ",
            "required": true,
            "shape_name": "Timezone",
            "min_length": 1,
            "max_length": 100
          },
          "Address": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The valid address for the room.</simpara>\n      ",
            "documentation": "\n         <p>The valid address for the room.</p>\n      ",
            "required": true,
            "shape_name": "Address",
            "min_length": 1,
            "max_length": 500
          },
          "DistanceUnit": {
            "type": "string",
            "enum": [
              "METRIC",
              "IMPERIAL"
            ],
            "zonbookDocumentation": "\n         <simpara>The distance unit to be used by devices in the profile.</simpara>\n      ",
            "documentation": "\n         <p>The distance unit to be used by devices in the profile.</p>\n      ",
            "required": true,
            "shape_name": "DistanceUnit"
          },
          "TemperatureUnit": {
            "type": "string",
            "enum": [
              "FAHRENHEIT",
              "CELSIUS"
            ],
            "zonbookDocumentation": "\n         <simpara>The temperature unit to be used by devices in the profile.</simpara>\n      ",
            "documentation": "\n         <p>The temperature unit to be used by devices in the profile.</p>\n      ",
            "required": true,
            "shape_name": "TemperatureUnit"
          },
          "WakeWord": {
            "type": "string",
            "enum": [
              "ALEXA",
              "AMAZON",
              "ECHO",
              "COMPUTER"
            ],
            "zonbookDocumentation": "\n         <simpara>A wake word for Alexa, Echo, Amazon, or a computer.</simpara>\n      ",
            "documentation": "\n         <p>A wake word for Alexa, Echo, Amazon, or a computer.</p>\n      ",
            "required": true,
            "shape_name": "WakeWord"
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>The user-specified token that is used during the creation of a profile.</p>\n      ",
            "zonbookDocumentation": "\n         <simpara>The user-specified token that is used during the creation of a profile.</simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          },
          "SetupModeDisabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Whether room profile setup is enabled.</simpara>\n      ",
            "documentation": "\n         <p>Whether room profile setup is enabled.</p>\n      ",
            "shape_name": "Boolean"
          },
          "MaxVolumeLimit": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum volume limit for a room profile.</simpara>\n      ",
            "documentation": "\n         <p>The maximum volume limit for a room profile.</p>\n      ",
            "shape_name": "MaxVolumeLimit"
          },
          "PSTNEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Whether PSTN calling is enabled.</simpara>\n      ",
            "documentation": "\n         <p>Whether PSTN calling is enabled.</p>\n      ",
            "shape_name": "Boolean"
          },
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "zonbookDocumentation": "\n         <simpara>The outbound caller ARN used to identify the outbound caller's phone\n         number.</simpara>\n      ",
            "documentation": "\n         <p>The outbound caller ARN used to identify the outbound caller's phone\n         number.</p>\n      ",
            "internalonly": true,
            "shape_name": "OutboundCallerId"
          }
        },
        "shape_name": "CreateProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created room profile in the response.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created room profile in the response.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Creates a new room profile with the specified details.</p>\n      "
    },
    "GetAddressSuggestions": {
      "name": "GetAddressSuggestions",
      "input": {
        "type": "structure",
        "members": {
          "SearchText": {
            "type": "string",
            "required": true,
            "shape_name": "SearchText",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "GetAddressSuggestionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AddressSuggestions": {
            "type": "list",
            "shape_name": "AddressSuggestionList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "InternalLabel": {
                  "type": "string",
                  "shape_name": "InternalLabel",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 500
                },
                "DisplayLabel": {
                  "type": "string",
                  "shape_name": "DisplayLabel",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 500
                }
              },
              "shape_name": "AddressSuggestion",
              "documentation": null
            }
          }
        },
        "shape_name": "GetAddressSuggestionsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "GetProfile": {
      "name": "GetProfile",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room profile for which to request details. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room profile for which to request details. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Profile": {
            "type": "structure",
            "members": {
              "ProfileId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "ProfileId",
                "documentation": null
              },
              "ProfileArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of a room profile.</p>\n      ",
                "shape_name": "Arn"
              },
              "ProfileName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The name of a room profile.</p>\n      ",
                "shape_name": "ProfileName",
                "min_length": 1,
                "max_length": 100
              },
              "IsDefault": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Retrieves if the profile is default or not.</simpara>\n      ",
                "documentation": "\n         <p>Retrieves if the profile is default or not.</p>\n      ",
                "shape_name": "Boolean"
              },
              "Address": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The address of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The address of a room profile.</p>\n      ",
                "shape_name": "Address",
                "min_length": 1,
                "max_length": 500
              },
              "Timezone": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The time zone of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The time zone of a room profile.</p>\n      ",
                "shape_name": "Timezone",
                "min_length": 1,
                "max_length": 100
              },
              "DistanceUnit": {
                "type": "string",
                "enum": [
                  "METRIC",
                  "IMPERIAL"
                ],
                "zonbookDocumentation": "\n         <simpara>The distance unit of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The distance unit of a room profile.</p>\n      ",
                "shape_name": "DistanceUnit"
              },
              "TemperatureUnit": {
                "type": "string",
                "enum": [
                  "FAHRENHEIT",
                  "CELSIUS"
                ],
                "zonbookDocumentation": "\n         <simpara>The temperature unit of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The temperature unit of a room profile.</p>\n      ",
                "shape_name": "TemperatureUnit"
              },
              "WakeWord": {
                "type": "string",
                "enum": [
                  "ALEXA",
                  "AMAZON",
                  "ECHO",
                  "COMPUTER"
                ],
                "zonbookDocumentation": "\n         <simpara>The wake word of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The wake word of a room profile.</p>\n      ",
                "shape_name": "WakeWord"
              },
              "SetupModeDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>The setup mode of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The setup mode of a room profile.</p>\n      ",
                "shape_name": "Boolean"
              },
              "MaxVolumeLimit": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The max volume limit of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The max volume limit of a room profile.</p>\n      ",
                "shape_name": "MaxVolumeLimit"
              },
              "PSTNEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>The PSTN setting of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The PSTN setting of a room profile.</p>\n      ",
                "shape_name": "Boolean"
              },
              "OutboundCallerPhoneNumber": {
                "type": "string",
                "pattern": "^\\+\\d{8,}$",
                "zonbookDocumentation": "\n         <simpara>The outbound caller phone number of a room profile.</simpara>\n      ",
                "documentation": "\n         <p>The outbound caller phone number of a room profile.</p>\n      ",
                "internalonly": true,
                "shape_name": "OutboundCallerPhoneNumber"
              },
              "AddressBookArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the address book.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the address book.</p>\n      ",
                "shape_name": "Arn"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the room profile requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The details of the room profile requested. Required.</p>\n      ",
            "shape_name": "Profile"
          }
        },
        "shape_name": "GetProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets the details of a room profile by profile ARN.</p>\n      "
    },
    "UpdateProfile": {
      "name": "UpdateProfile",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room profile to update. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room profile to update. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "ProfileName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated name for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated name for the room profile.</p>\n      ",
            "shape_name": "ProfileName",
            "min_length": 1,
            "max_length": 100
          },
          "IsDefault": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Sets the profile as default if selected. If this is missing, no update is done to the default status.</simpara>\n      ",
            "documentation": "\n         <p>Sets the profile as default if selected. If this is missing, no update is done to the default status.</p>\n      ",
            "shape_name": "Boolean"
          },
          "Timezone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The updated timezone for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated timezone for the room profile.</p>\n      ",
            "shape_name": "Timezone",
            "min_length": 1,
            "max_length": 100
          },
          "Address": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The updated address for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated address for the room profile.</p>\n      ",
            "shape_name": "Address",
            "min_length": 1,
            "max_length": 500
          },
          "DistanceUnit": {
            "type": "string",
            "enum": [
              "METRIC",
              "IMPERIAL"
            ],
            "zonbookDocumentation": "\n         <simpara>The updated distance unit for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated distance unit for the room profile.</p>\n      ",
            "shape_name": "DistanceUnit"
          },
          "TemperatureUnit": {
            "type": "string",
            "enum": [
              "FAHRENHEIT",
              "CELSIUS"
            ],
            "zonbookDocumentation": "\n         <simpara>The updated temperature unit for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated temperature unit for the room profile.</p>\n      ",
            "shape_name": "TemperatureUnit"
          },
          "WakeWord": {
            "type": "string",
            "enum": [
              "ALEXA",
              "AMAZON",
              "ECHO",
              "COMPUTER"
            ],
            "zonbookDocumentation": "\n         <simpara>The updated wake word for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated wake word for the room profile.</p>\n      ",
            "shape_name": "WakeWord"
          },
          "SetupModeDisabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Whether the setup mode of the profile is enabled.</simpara>\n      ",
            "documentation": "\n         <p>Whether the setup mode of the profile is enabled.</p>\n      ",
            "shape_name": "Boolean"
          },
          "MaxVolumeLimit": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The updated maximum volume limit for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated maximum volume limit for the room profile.</p>\n      ",
            "shape_name": "MaxVolumeLimit"
          },
          "PSTNEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Whether the PSTN setting of the room profile is enabled.</simpara>\n      ",
            "documentation": "\n         <p>Whether the PSTN setting of the room profile is enabled.</p>\n      ",
            "shape_name": "Boolean"
          },
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "zonbookDocumentation": "\n         <simpara>The updated outbound caller ARN for the room profile.</simpara>\n      ",
            "documentation": "\n         <p>The updated outbound caller ARN for the room profile.</p>\n      ",
            "internalonly": true,
            "shape_name": "OutboundCallerId"
          },
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "UpdateProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Updates an existing room profile by room profile ARN.</p>\n      "
    },
    "DeleteProfile": {
      "name": "DeleteProfile",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "ProfileId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "ProfileId",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room profile to delete. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room profile to delete. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes a room profile by the profile ARN.</p>\n      "
    },
    "ListProfiles": {
      "name": "ListProfiles",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Profiles": {
            "type": "list",
            "shape_name": "ProfileList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ProfileId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "ProfileId",
                  "documentation": null
                },
                "ProfileArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a room profile.</p>\n      ",
                  "shape_name": "Arn"
                },
                "ProfileName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a room profile.</p>\n      ",
                  "shape_name": "ProfileName",
                  "min_length": 1,
                  "max_length": 100
                },
                "IsDefault": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Retrieves if the profile is default or not.</simpara>\n      ",
                  "documentation": "\n         <p>Retrieves if the profile is default or not.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "Address": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The address of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The address of a room profile.</p>\n      ",
                  "shape_name": "Address",
                  "min_length": 1,
                  "max_length": 500
                },
                "Timezone": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The time zone of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The time zone of a room profile.</p>\n      ",
                  "shape_name": "Timezone",
                  "min_length": 1,
                  "max_length": 100
                },
                "DistanceUnit": {
                  "type": "string",
                  "enum": [
                    "METRIC",
                    "IMPERIAL"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The distance unit of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The distance unit of a room profile.</p>\n      ",
                  "shape_name": "DistanceUnit"
                },
                "TemperatureUnit": {
                  "type": "string",
                  "enum": [
                    "FAHRENHEIT",
                    "CELSIUS"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The temperature unit of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The temperature unit of a room profile.</p>\n      ",
                  "shape_name": "TemperatureUnit"
                },
                "WakeWord": {
                  "type": "string",
                  "enum": [
                    "ALEXA",
                    "AMAZON",
                    "ECHO",
                    "COMPUTER"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The wake word of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The wake word of a room profile.</p>\n      ",
                  "shape_name": "WakeWord"
                },
                "SetupModeDisabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>The setup mode of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The setup mode of a room profile.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "MaxVolumeLimit": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The max volume limit of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The max volume limit of a room profile.</p>\n      ",
                  "shape_name": "MaxVolumeLimit"
                },
                "PSTNEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>The PSTN setting of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The PSTN setting of a room profile.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "OutboundCallerPhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+\\d{8,}$",
                  "zonbookDocumentation": "\n         <simpara>The outbound caller phone number of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The outbound caller phone number of a room profile.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "OutboundCallerPhoneNumber"
                },
                "AddressBookArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the address book.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the address book.</p>\n      ",
                  "shape_name": "Arn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A room profile with attributes.</simpara>\n      ",
              "documentation": "\n         <p>A room profile with attributes.</p>\n      ",
              "shape_name": "Profile"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListProfilesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "SearchProfiles": {
      "name": "SearchProfiles",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of room profiles. Supported filter keys\n         are ProfileName and Address. Required. </simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of room profiles. Supported filter keys\n         are ProfileName and Address. Required. </p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of room profiles. Supported sort\n         keys are ProfileName and Address.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of room profiles. Supported sort\n         keys are ProfileName and Address.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          }
        },
        "shape_name": "SearchProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Profiles": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The profiles that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The profiles that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "ProfileDataList",
            "members": {
              "type": "structure",
              "members": {
                "ProfileId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "ProfileId",
                  "documentation": null
                },
                "ProfileArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a room profile.</p>\n      ",
                  "shape_name": "Arn"
                },
                "ProfileName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a room profile.</p>\n      ",
                  "shape_name": "ProfileName",
                  "min_length": 1,
                  "max_length": 100
                },
                "IsDefault": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Retrieves if the profile data is default or not.</simpara>\n      ",
                  "documentation": "\n         <p>Retrieves if the profile data is default or not.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "Address": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The address of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The address of a room profile.</p>\n      ",
                  "shape_name": "Address",
                  "min_length": 1,
                  "max_length": 500
                },
                "Timezone": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The timezone of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The timezone of a room profile.</p>\n      ",
                  "shape_name": "Timezone",
                  "min_length": 1,
                  "max_length": 100
                },
                "DistanceUnit": {
                  "type": "string",
                  "enum": [
                    "METRIC",
                    "IMPERIAL"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The distance unit of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The distance unit of a room profile.</p>\n      ",
                  "shape_name": "DistanceUnit"
                },
                "TemperatureUnit": {
                  "type": "string",
                  "enum": [
                    "FAHRENHEIT",
                    "CELSIUS"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The temperature unit of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The temperature unit of a room profile.</p>\n      ",
                  "shape_name": "TemperatureUnit"
                },
                "WakeWord": {
                  "type": "string",
                  "enum": [
                    "ALEXA",
                    "AMAZON",
                    "ECHO",
                    "COMPUTER"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The wake word of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The wake word of a room profile.</p>\n      ",
                  "shape_name": "WakeWord"
                },
                "SetupModeDisabled": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaxVolumeLimit": {
                  "type": "integer",
                  "internalonly": true,
                  "shape_name": "MaxVolumeLimit",
                  "documentation": null
                },
                "PSTNEnabled": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "OutboundCallerPhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+\\d{8,}$",
                  "zonbookDocumentation": "\n         <simpara>The outbound caller phone number of a room profile.</simpara>\n      ",
                  "documentation": "\n         <p>The outbound caller phone number of a room profile.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "OutboundCallerPhoneNumber"
                },
                "AddressBookArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "internalonly": true,
                  "shape_name": "Arn",
                  "documentation": null
                }
              },
              "zonbookDocumentation": "\n         <simpara>The\n         data of a room profile.</simpara>\n      ",
              "documentation": "\n         <p>The\n         data of a room profile.</p>\n      ",
              "shape_name": "ProfileData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of room profiles returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of room profiles returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchProfilesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches room profiles and lists the ones that meet a set of filter\n         criteria.</p>\n      "
    },
    "CreateSkillGroup": {
      "name": "CreateSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillGroupName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name for the skill group.</simpara>\n      ",
            "documentation": "\n         <p>The name for the skill group.</p>\n      ",
            "required": true,
            "shape_name": "SkillGroupName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The description for the skill group.</simpara>\n      ",
            "documentation": "\n         <p>The description for the skill group.</p>\n      ",
            "shape_name": "SkillGroupDescription",
            "min_length": 1,
            "max_length": 200
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>A unique, user-specified identifier for this request that ensures idempotency.\n      </p>\n      ",
            "zonbookDocumentation": "\n         <simpara>A unique, user-specified identifier for this request that ensures idempotency.\n      </simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created skill group in the response.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created skill group in the response.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Creates a skill group with a specified name and description.</p>\n      "
    },
    "GetSkillGroup": {
      "name": "GetSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group for which to get details. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group for which to get details. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillGroup": {
            "type": "structure",
            "members": {
              "SkillGroupId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "SkillGroupId",
                "documentation": null
              },
              "SkillGroupArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of a skill group.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of a skill group.</p>\n      ",
                "shape_name": "Arn"
              },
              "SkillGroupName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of a skill group.</simpara>\n      ",
                "documentation": "\n         <p>The name of a skill group.</p>\n      ",
                "shape_name": "SkillGroupName",
                "min_length": 1,
                "max_length": 100
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The description of a skill group.</simpara>\n      ",
                "documentation": "\n         <p>The description of a skill group.</p>\n      ",
                "shape_name": "SkillGroupDescription",
                "min_length": 1,
                "max_length": 200
              },
              "SkillGroupType": {
                "type": "string",
                "enum": [
                  "TEST"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of a skill group.</simpara>\n      ",
                "documentation": "\n         <p>The type of a skill group.</p>\n      ",
                "internalonly": true,
                "shape_name": "SkillGroupType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the skill group requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The details of the skill group requested. Required.</p>\n      ",
            "shape_name": "SkillGroup"
          }
        },
        "shape_name": "GetSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets skill group details by skill group ARN.</p>\n      "
    },
    "DeleteSkillGroup": {
      "name": "DeleteSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group to delete. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group to delete. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes a skill group by skill group ARN.</p>\n      "
    },
    "UpdateSkillGroup": {
      "name": "UpdateSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group\n         to\n         update. </simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group\n         to\n         update. </p>\n      ",
            "shape_name": "Arn"
          },
          "SkillGroupName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated name for the skill group.</simpara>\n      ",
            "documentation": "\n         <p>The updated name for the skill group.</p>\n      ",
            "shape_name": "SkillGroupName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated description for the skill group.</simpara>\n      ",
            "documentation": "\n         <p>The updated description for the skill group.</p>\n      ",
            "shape_name": "SkillGroupDescription",
            "min_length": 1,
            "max_length": 200
          }
        },
        "shape_name": "UpdateSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Updates skill group details by skill group ARN.</p>\n      "
    },
    "ListSkillGroups": {
      "name": "ListSkillGroups",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "shape_name": "SkillId",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListSkillGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillGroups": {
            "type": "list",
            "shape_name": "SkillGroupList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillGroupId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "SkillGroupId",
                  "documentation": null
                },
                "SkillGroupArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a skill group.</p>\n      ",
                  "shape_name": "Arn"
                },
                "SkillGroupName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a skill group.</p>\n      ",
                  "shape_name": "SkillGroupName",
                  "min_length": 1,
                  "max_length": 100
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The description of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The description of a skill group.</p>\n      ",
                  "shape_name": "SkillGroupDescription",
                  "min_length": 1,
                  "max_length": 200
                },
                "SkillGroupType": {
                  "type": "string",
                  "enum": [
                    "TEST"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The type of a skill group.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "SkillGroupType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A skill group with attributes.</simpara>\n      ",
              "documentation": "\n         <p>A skill group with attributes.</p>\n      ",
              "shape_name": "SkillGroup"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillGroupsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "AssociateSkillGroupWithRoom": {
      "name": "AssociateSkillGroupWithRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group to associate with a room. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group to associate with a room. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room with which to associate the skill group. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room with which to associate the skill group. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "AssociateSkillGroupWithRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateSkillGroupWithRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Associates a skill group with a given room. This enables all skills in the associated\n         skill group on all devices in the room.</p>\n      "
    },
    "DisassociateSkillGroupFromRoom": {
      "name": "DisassociateSkillGroupFromRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group to disassociate from a room. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group to disassociate from a room. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room from which the skill group is to be disassociated.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room from which the skill group is to be disassociated.\n         Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DisassociateSkillGroupFromRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateSkillGroupFromRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Disassociates a skill group from a specified room. This disables all skills in the\n         skill group on all devices in the room.</p>\n      "
    },
    "SearchSkillGroups": {
      "name": "SearchSkillGroups",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. </simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. </p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of skill groups. The supported filter key\n         is SkillGroupName. </simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of skill groups. The supported filter key\n         is SkillGroupName. </p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of skill groups. The supported\n         sort key is SkillGroupName. </simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of skill groups. The supported\n         sort key is SkillGroupName. </p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          }
        },
        "shape_name": "SearchSkillGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillGroups": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The skill groups that meet the filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The skill groups that meet the filter criteria, in sort order.</p>\n      ",
            "shape_name": "SkillGroupDataList",
            "members": {
              "type": "structure",
              "members": {
                "SkillGroupId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "SkillGroupId",
                  "documentation": null
                },
                "SkillGroupArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The skill group ARN of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The skill group ARN of a skill group.</p>\n      ",
                  "shape_name": "Arn"
                },
                "SkillGroupName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The skill group name of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The skill group name of a skill group.</p>\n      ",
                  "shape_name": "SkillGroupName",
                  "min_length": 1,
                  "max_length": 100
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The description of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The description of a skill group.</p>\n      ",
                  "shape_name": "SkillGroupDescription",
                  "min_length": 1,
                  "max_length": 200
                },
                "SkillGroupType": {
                  "type": "string",
                  "enum": [
                    "TEST"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The skill group type of a skill group.</simpara>\n      ",
                  "documentation": "\n         <p>The skill group type of a skill group.</p>\n      ",
                  "internalonly": true,
                  "shape_name": "SkillGroupType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The attributes of a skill group.</simpara>\n      ",
              "documentation": "\n         <p>The attributes of a skill group.</p>\n      ",
              "shape_name": "SkillGroupData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of skill groups returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of skill groups returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchSkillGroupsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches skill groups and lists the ones that meet a set of filter and sort\n         criteria.</p>\n      "
    },
    "ListSkillsByCategory": {
      "name": "ListSkillsByCategory",
      "input": {
        "type": "structure",
        "members": {
          "CategoryId": {
            "type": "long",
            "required": true,
            "shape_name": "CategoryId",
            "documentation": null,
            "min_length": 1
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "SkillListMaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 10
          },
          "SearchText": {
            "type": "string",
            "shape_name": "SearchText",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "ListSkillsByCategoryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Skills": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsByCategoryResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListSkillsStoreSkillsByCategory": {
      "name": "ListSkillsStoreSkillsByCategory",
      "input": {
        "type": "structure",
        "members": {
          "CategoryId": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The category ID for which the skills are being retrieved from the skill store.</simpara>\n      ",
            "documentation": "\n         <p>The category ID for which the skills are being retrieved from the skill store.</p>\n      ",
            "required": true,
            "shape_name": "CategoryId",
            "min_length": 1
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of skills returned per paginated calls.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of skills returned per paginated calls.</p>\n      ",
            "shape_name": "SkillListMaxResults",
            "min_length": 1,
            "max_length": 10
          },
          "SearchText": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The skill keyword that can be used for search.</simpara>\n      ",
            "documentation": "\n         <p>The skill keyword that can be used for search.</p>\n      ",
            "internalonly": true,
            "shape_name": "SearchText",
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "ListSkillsStoreSkillsByCategoryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillsStoreSkills": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The skill store skills.</para>\n      ",
            "documentation": "\n         <p>The skill store skills.</p>\n      ",
            "shape_name": "SkillsStoreSkillList",
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "zonbookDocumentation": "\n         <para>The ARN of the skill.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the skill.</p>\n      ",
                  "shape_name": "SkillId"
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <para>The name of the skill.</para>\n      ",
                  "documentation": "\n         <p>The name of the skill.</p>\n      ",
                  "shape_name": "SkillName",
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Short description about the skill.</para>\n      ",
                  "documentation": "\n         <p>Short description about the skill.</p>\n      ",
                  "shape_name": "ShortDescription"
                },
                "IconUrl": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The URL where the skill icon resides.</para>\n      ",
                  "documentation": "\n         <p>The URL where the skill icon resides.</p>\n      ",
                  "shape_name": "IconUrl"
                },
                "SampleUtterances": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>Sample utterances that interact with the skill.</para>\n      ",
                  "documentation": "\n         <p>Sample utterances that interact with the skill.</p>\n      ",
                  "shape_name": "SampleUtterances",
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the skill.</para>\n      ",
                  "documentation": "\n         <p>Information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>Linking support for a skill.</para>\n      ",
                  "documentation": "\n         <p>Linking support for a skill.</p>\n      ",
                  "shape_name": "boolean"
                }
              },
              "zonbookDocumentation": "\n         <para>The detailed information about an Alexa skill.</para>\n      ",
              "documentation": "\n         <p>The detailed information about an Alexa skill.</p>\n      ",
              "shape_name": "SkillsStoreSkill"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsStoreSkillsByCategoryResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Lists all skills in the Alexa skill store by category.</p>\n      "
    },
    "ListSkillsForOrganization": {
      "name": "ListSkillsForOrganization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "SkillListMaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 10
          }
        },
        "shape_name": "ListSkillsForOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Skills": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsForOrganizationResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListSkills": {
      "name": "ListSkills",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group for which to list enabled skills. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group for which to list enabled skills. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "EnablementType": {
            "type": "string",
            "enum": [
              "ENABLED",
              "PENDING"
            ],
            "zonbookDocumentation": "\n         <para>Whether the skill is enabled under the user's account, or if it requires linking to be used.</para>\n      ",
            "documentation": "\n         <p>Whether the skill is enabled under the user's account, or if it requires linking to be used.</p>\n      ",
            "shape_name": "EnablementTypeFilter"
          },
          "SkillType": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE",
              "ALL"
            ],
            "zonbookDocumentation": "\n         <para>Whether the skill is publicly available or is a private skill.</para>\n      ",
            "documentation": "\n         <p>Whether the skill is publicly available or is a private skill.</p>\n      ",
            "shape_name": "SkillTypeFilter"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. Required.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. Required.</p>\n      ",
            "shape_name": "SkillListMaxResults",
            "min_length": 1,
            "max_length": 10
          }
        },
        "shape_name": "ListSkillsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of enabled skills requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The list of enabled skills requested. Required.</p>\n      ",
            "shape_name": "SkillSummaryList",
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the skill summary.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the skill summary.</p>\n      ",
                  "shape_name": "SkillId"
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the skill.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the skill.</p>\n      ",
                  "shape_name": "SkillName",
                  "min_length": 1,
                  "max_length": 100
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Linking support for a skill.</simpara>\n      ",
                  "documentation": "\n         <p>Linking support for a skill.</p>\n      ",
                  "shape_name": "boolean"
                },
                "EnablementType": {
                  "type": "string",
                  "enum": [
                    "ENABLED",
                    "PENDING"
                  ],
                  "zonbookDocumentation": "\n         <para>Whether the skill is enabled under the user's account, or if it requires linking to be used.</para>\n      ",
                  "documentation": "\n         <p>Whether the skill is enabled under the user's account, or if it requires linking to be used.</p>\n      ",
                  "shape_name": "EnablementType"
                },
                "SkillType": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
                  "enum": [
                    "PUBLIC",
                    "PRIVATE"
                  ],
                  "zonbookDocumentation": "\n         <para>Whether the skill is publicly available or is a private skill.</para>\n      ",
                  "documentation": "\n         <p>Whether the skill is publicly available or is a private skill.</p>\n      ",
                  "shape_name": "SkillType",
                  "min_length": 1,
                  "max_length": 100
                }
              },
              "zonbookDocumentation": "\n         <simpara>The\n         summary of skills.</simpara>\n      ",
              "documentation": "\n         <p>The\n         summary of skills.</p>\n      ",
              "shape_name": "SkillSummary"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Lists all enabled skills in a specific skill group.</p>\n      "
    },
    "ListSkillCategories": {
      "name": "ListSkillCategories",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListSkillCategoriesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CategoryList": {
            "type": "list",
            "shape_name": "CategoryList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "CategoryId": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The ID of the skill store category.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the skill store category.</p>\n      ",
                  "shape_name": "CategoryId",
                  "min_length": 1
                },
                "CategoryName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the skill store category.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the skill store category.</p>\n      ",
                  "shape_name": "CategoryName"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.</simpara>\n      ",
              "documentation": "\n         <p>The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.</p>\n      ",
              "shape_name": "Category"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillCategoriesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListSkillsStoreCategories": {
      "name": "ListSkillsStoreCategories",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of categories returned, per paginated calls.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of categories returned, per paginated calls.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListSkillsStoreCategoriesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CategoryList": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of categories.</simpara>\n      ",
            "documentation": "\n         <p>The list of categories.</p>\n      ",
            "shape_name": "CategoryList",
            "members": {
              "type": "structure",
              "members": {
                "CategoryId": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The ID of the skill store category.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the skill store category.</p>\n      ",
                  "shape_name": "CategoryId",
                  "min_length": 1
                },
                "CategoryName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the skill store category.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the skill store category.</p>\n      ",
                  "shape_name": "CategoryName"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.</simpara>\n      ",
              "documentation": "\n         <p>The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.</p>\n      ",
              "shape_name": "Category"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsStoreCategoriesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Lists all categories in the Alexa skill store.</p>\n      "
    },
    "AssociateSkillWithOrganization": {
      "name": "AssociateSkillWithOrganization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "AssociateSkillWithOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateSkillWithOrganizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": null
    },
    "AssociatePrivilegedSkillWithOrganization": {
      "name": "AssociatePrivilegedSkillWithOrganization",
      "input": {
        "type": "structure",
        "members": {
          "AwsAccountId": {
            "type": "string",
            "pattern": "^(\\d{12})$",
            "required": true,
            "shape_name": "AwsAccountId",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "AssociatePrivilegedSkillWithOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociatePrivilegedSkillWithOrganizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": null
    },
    "DisassociateSkillFromOrganization": {
      "name": "DisassociateSkillFromOrganization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "DisassociateSkillFromOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateSkillFromOrganizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "AssociateSkillWithUsers": {
      "name": "AssociateSkillWithUsers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "AssociateSkillWithUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateSkillWithUsersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DisassociateSkillFromUsers": {
      "name": "DisassociateSkillFromUsers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "DisassociateSkillFromUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateSkillFromUsersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "AssociateSkillWithSkillGroup": {
      "name": "AssociateSkillWithSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill group to associate the skill\n         to.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill group to associate the skill\n         to.\n         Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of the skill.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of the skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          }
        },
        "shape_name": "AssociateSkillWithSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateSkillWithSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Associates a skill with a skill group.</p>\n      "
    },
    "DisassociateSkillFromSkillGroup": {
      "name": "DisassociateSkillFromSkillGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "SkillGroupId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "SkillGroupId",
            "documentation": null
          },
          "SkillGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of a\n         skill.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of a\n         skill.\n         Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The ARN of a skill group to associate to a skill.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of a skill group to associate to a skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          }
        },
        "shape_name": "DisassociateSkillFromSkillGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateSkillFromSkillGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Disassociates a skill from a skill group.</p>\n      "
    },
    "ImportPrivilegedSkill": {
      "name": "ImportPrivilegedSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "OwnerAwsAccountId": {
            "type": "string",
            "pattern": "^(\\d{12})$",
            "required": true,
            "shape_name": "AwsAccountId",
            "documentation": null
          }
        },
        "shape_name": "ImportPrivilegedSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ImportPrivilegedSkillResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DeletePrivilegedSkill": {
      "name": "DeletePrivilegedSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "DeletePrivilegedSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeletePrivilegedSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "UpdatePrivilegedSkill": {
      "name": "UpdatePrivilegedSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "OwnerAwsAccountId": {
            "type": "string",
            "pattern": "^(\\d{12})$",
            "required": true,
            "shape_name": "AwsAccountId",
            "documentation": null
          }
        },
        "shape_name": "UpdatePrivilegedSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdatePrivilegedSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ImportAccountForSkill": {
      "name": "ImportAccountForSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Stage": {
            "type": "string",
            "enum": [
              "LIVE"
            ],
            "required": true,
            "shape_name": "PrivateSkillStage",
            "documentation": null
          },
          "Principal": {
            "type": "string",
            "pattern": "^arn:aws:iam::(\\d{12}):root",
            "required": true,
            "shape_name": "Principal",
            "documentation": null
          }
        },
        "shape_name": "ImportAccountForSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ImportAccountForSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DeleteAccountForSkill": {
      "name": "DeleteAccountForSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Stage": {
            "type": "string",
            "enum": [
              "LIVE"
            ],
            "required": true,
            "shape_name": "PrivateSkillStage",
            "documentation": null
          },
          "Principal": {
            "type": "string",
            "pattern": "^arn:aws:iam::(\\d{12}):root",
            "required": true,
            "shape_name": "Principal",
            "documentation": null
          }
        },
        "shape_name": "DeleteAccountForSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteAccountForSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListAccountsForSkill": {
      "name": "ListAccountsForSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Stage": {
            "type": "string",
            "enum": [
              "LIVE"
            ],
            "required": true,
            "shape_name": "PrivateSkillStage",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListAccountsForSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SkillAccountList": {
            "type": "list",
            "shape_name": "SkillAccountList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Principal": {
                  "type": "string",
                  "pattern": "^arn:aws:iam::(\\d{12}):root",
                  "shape_name": "Principal",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                }
              },
              "shape_name": "SkillAccount",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListAccountsForSkillResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListSkillsForAccount": {
      "name": "ListSkillsForAccount",
      "input": {
        "type": "structure",
        "members": {
          "AcceptStatus": {
            "type": "string",
            "enum": [
              "ACCEPTED",
              "PENDING"
            ],
            "shape_name": "AcceptStatus",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "SkillListMaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 10
          }
        },
        "shape_name": "ListSkillsForAccountRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Skills": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsForAccountResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "AcceptSkillAccess": {
      "name": "AcceptSkillAccess",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Stage": {
            "type": "string",
            "enum": [
              "LIVE",
              "DEVELOPMENT"
            ],
            "required": true,
            "shape_name": "Stage",
            "documentation": null
          }
        },
        "shape_name": "AcceptSkillAccessRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AcceptSkillAccessResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "RejectSkillAccess": {
      "name": "RejectSkillAccess",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Stage": {
            "type": "string",
            "enum": [
              "LIVE",
              "DEVELOPMENT"
            ],
            "required": true,
            "shape_name": "Stage",
            "documentation": null
          }
        },
        "shape_name": "RejectSkillAccessRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RejectSkillAccessResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "PutSkillPermissionScopeConsents": {
      "name": "PutSkillPermissionScopeConsents",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "PermissionScopeConsents": {
            "type": "list",
            "required": true,
            "shape_name": "PermissionScopeConsents",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "PermissionScope": {
                  "type": "string",
                  "shape_name": "PermissionScope",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 300
                },
                "HasConsent": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                }
              },
              "shape_name": "PermissionScopeConsent",
              "documentation": null
            }
          }
        },
        "shape_name": "PutSkillPermissionScopeConsentsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutSkillPermissionScopeConsentsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListSkillPermissionScopeConsents": {
      "name": "ListSkillPermissionScopeConsents",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "ListSkillPermissionScopeConsentsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "PermissionScopeConsents": {
            "type": "list",
            "shape_name": "PermissionScopeConsents",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "PermissionScope": {
                  "type": "string",
                  "shape_name": "PermissionScope",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 300
                },
                "HasConsent": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                }
              },
              "shape_name": "PermissionScopeConsent",
              "documentation": null
            }
          }
        },
        "shape_name": "ListSkillPermissionScopeConsentsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "GetConsentedPermissionScopesForSkill": {
      "name": "GetConsentedPermissionScopesForSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetConsentedPermissionScopesForSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "PermissionScopes": {
            "type": "list",
            "shape_name": "PermissionScopes",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "PermissionScope",
              "documentation": null,
              "min_length": 1,
              "max_length": 300
            }
          }
        },
        "shape_name": "GetConsentedPermissionScopesForSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ApproveSkill": {
      "name": "ApproveSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of the skill.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of the skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          }
        },
        "shape_name": "ApproveSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ApproveSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.</p>\n      "
    },
    "RejectSkill": {
      "name": "RejectSkill",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of the skill.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of the skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          }
        },
        "shape_name": "RejectSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RejectSkillResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill that is rejected can be added later by calling the ApproveSkill API. </p>\n      "
    },
    "PutRoomSkillParameter": {
      "name": "PutRoomSkillParameter",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room associated with the room skill parameter. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room associated with the room skill parameter. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill associated with the room skill parameter. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill associated with the room skill parameter. Required.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          },
          "RoomSkillParameter": {
            "type": "structure",
            "members": {
              "ParameterKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</simpara>\n      ",
                "documentation": "\n         <p>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</p>\n      ",
                "required": true,
                "shape_name": "RoomSkillParameterKey",
                "min_length": 1,
                "max_length": 256
              },
              "ParameterValue": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The parameter value of a room skill parameter.</simpara>\n      ",
                "documentation": "\n         <p>The parameter value of a room skill parameter.</p>\n      ",
                "required": true,
                "shape_name": "RoomSkillParameterValue",
                "min_length": 1,
                "max_length": 512
              }
            },
            "zonbookDocumentation": "\n         <simpara>The updated room skill parameter. Required.</simpara>\n      ",
            "documentation": "\n         <p>The updated room skill parameter. Required.</p>\n      ",
            "required": true,
            "shape_name": "RoomSkillParameter"
          }
        },
        "shape_name": "PutRoomSkillParameterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutRoomSkillParameterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Updates room skill parameter details by room, skill, and parameter key ID. Not all\n         skills have a room skill parameter.</p>\n      "
    },
    "GetRoomSkillParameter": {
      "name": "GetRoomSkillParameter",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room from which to get the room skill parameter details. </simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room from which to get the room skill parameter details. </p>\n      ",
            "shape_name": "Arn"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The ARN of the skill from which to get the room skill parameter details.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the skill from which to get the room skill parameter details.\n         Required.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          },
          "ParameterKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The room skill parameter key for which to get details. Required.</simpara>\n      ",
            "documentation": "\n         <p>The room skill parameter key for which to get details. Required.</p>\n      ",
            "required": true,
            "shape_name": "RoomSkillParameterKey",
            "min_length": 1,
            "max_length": 256
          }
        },
        "shape_name": "GetRoomSkillParameterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "RoomSkillParameter": {
            "type": "structure",
            "members": {
              "ParameterKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</simpara>\n      ",
                "documentation": "\n         <p>The parameter key of a room skill parameter. ParameterKey is an enumerated type that\n         only takes “DEFAULT” or “SCOPE” as valid values.</p>\n      ",
                "required": true,
                "shape_name": "RoomSkillParameterKey",
                "min_length": 1,
                "max_length": 256
              },
              "ParameterValue": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The parameter value of a room skill parameter.</simpara>\n      ",
                "documentation": "\n         <p>The parameter value of a room skill parameter.</p>\n      ",
                "required": true,
                "shape_name": "RoomSkillParameterValue",
                "min_length": 1,
                "max_length": 512
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the room skill parameter requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The details of the room skill parameter requested. Required.</p>\n      ",
            "shape_name": "RoomSkillParameter"
          }
        },
        "shape_name": "GetRoomSkillParameterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets room skill parameter details by room, skill, and parameter key ARN.</p>\n      "
    },
    "DeleteRoomSkillParameter": {
      "name": "DeleteRoomSkillParameter",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room from which to remove the room skill parameter details.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room from which to remove the room skill parameter details.</p>\n      ",
            "shape_name": "Arn"
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The ID of the skill from which to remove the room skill parameter details.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the skill from which to remove the room skill parameter details.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          },
          "ParameterKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The room skill parameter key for which to remove details.</simpara>\n      ",
            "documentation": "\n         <p>The room skill parameter key for which to remove details.</p>\n      ",
            "required": true,
            "shape_name": "RoomSkillParameterKey",
            "min_length": 1,
            "max_length": 256
          }
        },
        "shape_name": "DeleteRoomSkillParameterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteRoomSkillParameterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes room skill parameter details by room, skill, and parameter key ID.</p>\n      "
    },
    "ListSkillsForUsers": {
      "name": "ListSkillsForUsers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "SkillListMaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 10
          }
        },
        "shape_name": "ListSkillsForUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Skills": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSkillsForUsersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListEntitledSkillsForUser": {
      "name": "ListEntitledSkillsForUser",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListEntitledSkillsForUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "EntitledSkills": {
            "type": "list",
            "shape_name": "EntitledSkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ClientId": {
                  "type": "string",
                  "pattern": "^\\S+{1,256}$",
                  "shape_name": "ClientId",
                  "documentation": null
                },
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "SkillTypes": {
                  "type": "list",
                  "shape_name": "SkillTypes",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "SkillStoreType",
                    "documentation": null
                  }
                }
              },
              "shape_name": "EntitledSkill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListEntitledSkillsForUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "RegisterDevice": {
      "name": "RegisterDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "LinkCode": {
            "type": "structure",
            "members": {
              "Code": {
                "type": "string",
                "pattern": "[a-zA-Z0-9]{1,50}",
                "required": true,
                "shape_name": "Code",
                "documentation": null
              },
              "Source": {
                "type": "string",
                "enum": [
                  "DMS",
                  "PANDA"
                ],
                "required": true,
                "shape_name": "LinkCodeSource",
                "documentation": null
              }
            },
            "required": true,
            "shape_name": "LinkCode",
            "documentation": null
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "RegisterDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DeviceRegistrationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "shape_name": "DeviceRegistrationId",
            "documentation": null
          }
        },
        "shape_name": "RegisterDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "deprecated": true,
          "shape_name": "DeviceRegistrationException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The device is in an invalid state.</simpara>\n      ",
          "documentation": "\n         <p>The device is in an invalid state.</p>\n      ",
          "shape_name": "InvalidDeviceException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": null
    },
    "RegisterAVSDevice": {
      "name": "RegisterAVSDevice",
      "input": {
        "type": "structure",
        "members": {
          "ClientId": {
            "type": "string",
            "pattern": "^\\S+{1,256}$",
            "zonbookDocumentation": "\n         <simpara>The client ID of the OEM used for code-based linking authorization on an AVS device.</simpara>\n      ",
            "documentation": "\n         <p>The client ID of the OEM used for code-based linking authorization on an AVS device.</p>\n      ",
            "required": true,
            "shape_name": "ClientId"
          },
          "UserCode": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.</simpara>\n      ",
            "documentation": "\n         <p>The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.</p>\n      ",
            "required": true,
            "shape_name": "UserCode",
            "min_length": 1,
            "max_length": 128
          },
          "ProductId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,256}$",
            "zonbookDocumentation": "\n         <simpara>The product ID used to identify your AVS device during authorization.</simpara>\n      ",
            "documentation": "\n         <p>The product ID used to identify your AVS device during authorization.</p>\n      ",
            "required": true,
            "shape_name": "ProductId"
          },
          "DeviceSerialNumber": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1,50}$",
            "zonbookDocumentation": "\n         <simpara>The key generated by the OEM that uniquely identifies a specified instance of your AVS device.</simpara>\n      ",
            "documentation": "\n         <p>The key generated by the OEM that uniquely identifies a specified instance of your AVS device.</p>\n      ",
            "required": true,
            "shape_name": "DeviceSerialNumberForAVS"
          },
          "AmazonId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,18}",
            "zonbookDocumentation": "\n         <simpara>The device type ID for your AVS device generated by\n         Amazon\n         when the OEM creates a new product on Amazon's Developer Console.</simpara>\n      ",
            "documentation": "\n         <p>The device type ID for your AVS device generated by\n         Amazon\n         when the OEM creates a new product on Amazon's Developer Console.</p>\n      ",
            "required": true,
            "shape_name": "AmazonId"
          }
        },
        "shape_name": "RegisterAVSDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "RegisterAVSDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The device is in an invalid state.</simpara>\n      ",
          "documentation": "\n         <p>The device is in an invalid state.</p>\n      ",
          "shape_name": "InvalidDeviceException"
        }
      ],
      "documentation": "\n         <p>Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).</p>\n      "
    },
    "CompleteRegistration": {
      "name": "CompleteRegistration",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "DeviceRegistrationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "required": true,
            "shape_name": "DeviceRegistrationId",
            "documentation": null
          },
          "EnterpriseWiFiData": {
            "type": "structure",
            "members": {
              "CertificateEndTime": {
                "type": "timestamp",
                "required": true,
                "shape_name": "Timestamp",
                "documentation": null
              },
              "CertificateArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "required": true,
                "shape_name": "Arn",
                "documentation": null
              }
            },
            "internalonly": true,
            "shape_name": "EnterpriseWiFiData",
            "documentation": null
          }
        },
        "shape_name": "CompleteRegistrationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "CompleteRegistrationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "deprecated": true,
          "shape_name": "DeviceRegistrationException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ConcurrentDeviceRegistrationException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "DeregisterDevice": {
      "name": "DeregisterDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeregisterDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeregisterDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DeleteDevice": {
      "name": "DeleteDevice",
      "input": {
        "type": "structure",
        "members": {
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <para>The ARN of the device for which to request details.</para>\n      ",
            "documentation": "\n         <p>The ARN of the device for which to request details.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The Certificate Authority can't issue or revoke a certificate.</simpara>\n      ",
          "documentation": "\n         <p>The Certificate Authority can't issue or revoke a certificate.</p>\n      ",
          "shape_name": "InvalidCertificateAuthorityException"
        }
      ],
      "documentation": "\n         <p>Removes a device from Alexa For Business.</p>\n      "
    },
    "ListDevices": {
      "name": "ListDevices",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "UnassociatedOnly": {
            "type": "boolean",
            "shape_name": "Boolean",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListDevicesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Devices": {
            "type": "list",
            "shape_name": "DeviceList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "DeviceId": {
                  "type": "string",
                  "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
                  "internalonly": true,
                  "shape_name": "DeviceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 200
                },
                "DeviceArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a device.</p>\n      ",
                  "shape_name": "Arn"
                },
                "DeviceSerialNumber": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9]{1,200}",
                  "zonbookDocumentation": "\n         <simpara>The serial number of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The serial number of a device.</p>\n      ",
                  "shape_name": "DeviceSerialNumber"
                },
                "DeviceType": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9]{1,200}",
                  "zonbookDocumentation": "\n         <simpara>The type of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The type of a device.</p>\n      ",
                  "shape_name": "DeviceType"
                },
                "DeviceName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a device.</p>\n      ",
                  "shape_name": "DeviceName",
                  "min_length": 2,
                  "max_length": 100
                },
                "SoftwareVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The software version of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The software version of a device.</p>\n      ",
                  "shape_name": "SoftwareVersion"
                },
                "MacAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The MAC address of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The MAC address of a device.</p>\n      ",
                  "shape_name": "MacAddress"
                },
                "RoomId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "RoomId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The room ARN of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The room ARN of a device.</p>\n      ",
                  "shape_name": "Arn"
                },
                "DeviceStatus": {
                  "type": "string",
                  "enum": [
                    "READY",
                    "PENDING",
                    "WAS_OFFLINE",
                    "DEREGISTERED"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.</simpara>\n      ",
                  "documentation": "\n         <p>The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.</p>\n      ",
                  "shape_name": "DeviceStatus"
                },
                "DeviceStatusInfo": {
                  "type": "structure",
                  "members": {
                    "DeviceStatusDetails": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>One or more device status detail descriptions.</simpara>\n      ",
                      "documentation": "\n         <p>One or more device status detail descriptions.</p>\n      ",
                      "shape_name": "DeviceStatusDetails",
                      "members": {
                        "type": "structure",
                        "members": {
                          "Code": {
                            "type": "string",
                            "enum": [
                              "DEVICE_SOFTWARE_UPDATE_NEEDED",
                              "DEVICE_WAS_OFFLINE"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The device status detail code.</simpara>\n      ",
                            "documentation": "\n         <p>The device status detail code.</p>\n      ",
                            "shape_name": "DeviceStatusDetailCode"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Details of a device’s status.</simpara>\n      ",
                        "documentation": "\n         <p>Details of a device’s status.</p>\n      ",
                        "shape_name": "DeviceStatusDetail"
                      }
                    },
                    "ConnectionStatus": {
                      "type": "string",
                      "enum": [
                        "ONLINE",
                        "OFFLINE"
                      ],
                      "zonbookDocumentation": "\n         <para>The latest available information about the connection status of a device. </para>\n      ",
                      "documentation": "\n         <p>The latest available information about the connection status of a device. </p>\n      ",
                      "shape_name": "ConnectionStatus"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Detailed information about a device's status.</simpara>\n      ",
                  "documentation": "\n         <p>Detailed information about a device's status.</p>\n      ",
                  "shape_name": "DeviceStatusInfo"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A device with attributes.</simpara>\n      ",
              "documentation": "\n         <p>A device with attributes.</p>\n      ",
              "shape_name": "Device"
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListDevicesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListDeviceEvents": {
      "name": "ListDeviceEvents",
      "input": {
        "type": "structure",
        "members": {
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of a device.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of a device.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "EventType": {
            "type": "string",
            "enum": [
              "CONNECTION_STATUS",
              "DEVICE_STATUS"
            ],
            "zonbookDocumentation": "\n         <simpara>The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. </simpara>\n      ",
            "documentation": "\n         <p>The event type to filter device events. If EventType isn't specified, this returns a list of all device events in reverse chronological order. If EventType is specified, this returns a list of device events for that EventType in reverse chronological order. </p>\n      ",
            "shape_name": "DeviceEventType"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response only includes\n         results beyond the token, up to the value specified by MaxResults. When the end of \n         results is reached, the response has a value of null.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response only includes\n         results beyond the token, up to the value specified by MaxResults. When the end of \n         results is reached, the response has a value of null.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\n      </simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. The default value is 50. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.\n      </p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListDeviceEventsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DeviceEvents": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The device events requested for the device ARN.</simpara>\n      ",
            "documentation": "\n         <p>The device events requested for the device ARN.</p>\n      ",
            "shape_name": "DeviceEventList",
            "members": {
              "type": "structure",
              "members": {
                "Type": {
                  "type": "string",
                  "enum": [
                    "CONNECTION_STATUS",
                    "DEVICE_STATUS"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of device event.</para>\n      ",
                  "documentation": "\n         <p>The type of device event.</p>\n      ",
                  "shape_name": "DeviceEventType"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The value of the event.</para>\n      ",
                  "documentation": "\n         <p>The value of the event.</p>\n      ",
                  "shape_name": "DeviceEventValue"
                },
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time (in epoch) when the event occurred. </para>\n      ",
                  "documentation": "\n         <p>The time (in epoch) when the event occurred. </p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <para>The list of device events.</para>\n      ",
              "documentation": "\n         <p>The list of device events.</p>\n      ",
              "shape_name": "DeviceEvent"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListDeviceEventsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Lists the device event history, including device connection status, for up to 30 days.</p>\n      "
    },
    "GetDevice": {
      "name": "GetDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device for which to request details. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device for which to request details. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Device": {
            "type": "structure",
            "members": {
              "DeviceId": {
                "type": "string",
                "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
                "internalonly": true,
                "shape_name": "DeviceId",
                "documentation": null,
                "min_length": 1,
                "max_length": 200
              },
              "DeviceArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of a device.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of a device.</p>\n      ",
                "shape_name": "Arn"
              },
              "DeviceSerialNumber": {
                "type": "string",
                "pattern": "[a-zA-Z0-9]{1,200}",
                "zonbookDocumentation": "\n         <simpara>The serial number of a device.</simpara>\n      ",
                "documentation": "\n         <p>The serial number of a device.</p>\n      ",
                "shape_name": "DeviceSerialNumber"
              },
              "DeviceType": {
                "type": "string",
                "pattern": "[a-zA-Z0-9]{1,200}",
                "zonbookDocumentation": "\n         <simpara>The type of a device.</simpara>\n      ",
                "documentation": "\n         <p>The type of a device.</p>\n      ",
                "shape_name": "DeviceType"
              },
              "DeviceName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of a device.</simpara>\n      ",
                "documentation": "\n         <p>The name of a device.</p>\n      ",
                "shape_name": "DeviceName",
                "min_length": 2,
                "max_length": 100
              },
              "SoftwareVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The software version of a device.</simpara>\n      ",
                "documentation": "\n         <p>The software version of a device.</p>\n      ",
                "shape_name": "SoftwareVersion"
              },
              "MacAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The MAC address of a device.</simpara>\n      ",
                "documentation": "\n         <p>The MAC address of a device.</p>\n      ",
                "shape_name": "MacAddress"
              },
              "RoomId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "RoomId",
                "documentation": null
              },
              "RoomArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The room ARN of a device.</simpara>\n      ",
                "documentation": "\n         <p>The room ARN of a device.</p>\n      ",
                "shape_name": "Arn"
              },
              "DeviceStatus": {
                "type": "string",
                "enum": [
                  "READY",
                  "PENDING",
                  "WAS_OFFLINE",
                  "DEREGISTERED"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.</simpara>\n      ",
                "documentation": "\n         <p>The status of a device. If the status is not READY, check the DeviceStatusInfo value for details.</p>\n      ",
                "shape_name": "DeviceStatus"
              },
              "DeviceStatusInfo": {
                "type": "structure",
                "members": {
                  "DeviceStatusDetails": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <simpara>One or more device status detail descriptions.</simpara>\n      ",
                    "documentation": "\n         <p>One or more device status detail descriptions.</p>\n      ",
                    "shape_name": "DeviceStatusDetails",
                    "members": {
                      "type": "structure",
                      "members": {
                        "Code": {
                          "type": "string",
                          "enum": [
                            "DEVICE_SOFTWARE_UPDATE_NEEDED",
                            "DEVICE_WAS_OFFLINE"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The device status detail code.</simpara>\n      ",
                          "documentation": "\n         <p>The device status detail code.</p>\n      ",
                          "shape_name": "DeviceStatusDetailCode"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Details of a device’s status.</simpara>\n      ",
                      "documentation": "\n         <p>Details of a device’s status.</p>\n      ",
                      "shape_name": "DeviceStatusDetail"
                    }
                  },
                  "ConnectionStatus": {
                    "type": "string",
                    "enum": [
                      "ONLINE",
                      "OFFLINE"
                    ],
                    "zonbookDocumentation": "\n         <para>The latest available information about the connection status of a device. </para>\n      ",
                    "documentation": "\n         <p>The latest available information about the connection status of a device. </p>\n      ",
                    "shape_name": "ConnectionStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Detailed information about a device's status.</simpara>\n      ",
                "documentation": "\n         <p>Detailed information about a device's status.</p>\n      ",
                "shape_name": "DeviceStatusInfo"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the device requested. Required.</simpara>\n      ",
            "documentation": "\n         <p>The details of the device requested. Required.</p>\n      ",
            "shape_name": "Device"
          }
        },
        "shape_name": "GetDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets the details of a device by device ARN.</p>\n      "
    },
    "GetTestDeviceState": {
      "name": "GetTestDeviceState",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "TestDeviceStateProperties": {
            "type": "list",
            "required": true,
            "shape_name": "TestDeviceStateProperties",
            "documentation": null,
            "members": {
              "type": "string",
              "enum": [
                "VOLUME_LEVEL",
                "WAKE_WORD",
                "ALARMS_COUNT",
                "TIMERS_COUNT",
                "SLEEP_TIMERS_COUNT",
                "REMINDERS_COUNT",
                "TODO_ITEMS_COUNT",
                "SHOPPING_ITEMS_COUNT",
                "ALL"
              ],
              "shape_name": "TestDeviceStateProperty",
              "documentation": null
            }
          }
        },
        "shape_name": "GetTestDeviceStateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "VolumeLevel": {
            "type": "integer",
            "shape_name": "VolumeLevel",
            "documentation": null
          },
          "WakeWord": {
            "type": "string",
            "enum": [
              "ALEXA",
              "AMAZON",
              "ECHO",
              "COMPUTER"
            ],
            "shape_name": "WakeWord",
            "documentation": null
          },
          "AlarmsCount": {
            "type": "integer",
            "shape_name": "AlarmsCount",
            "documentation": null
          },
          "TimersCount": {
            "type": "integer",
            "shape_name": "TimersCount",
            "documentation": null
          },
          "SleepTimersCount": {
            "type": "integer",
            "shape_name": "SleepTimersCount",
            "documentation": null
          },
          "RemindersCount": {
            "type": "integer",
            "shape_name": "RemindersCount",
            "documentation": null
          },
          "ToDoItemsCount": {
            "type": "integer",
            "shape_name": "ToDoItemsCount",
            "documentation": null
          },
          "ShoppingItemsCount": {
            "type": "integer",
            "shape_name": "ShoppingItemsCount",
            "documentation": null
          },
          "SetupModeDisabled": {
            "type": "boolean",
            "shape_name": "Boolean",
            "documentation": null
          },
          "MaxVolumeLimit": {
            "type": "integer",
            "shape_name": "MaxVolumeLimit",
            "documentation": null
          }
        },
        "shape_name": "GetTestDeviceStateResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "UpdateDevice": {
      "name": "UpdateDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device to update. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device to update. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "DeviceName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated device name. Required.</simpara>\n      ",
            "documentation": "\n         <p>The updated device name. Required.</p>\n      ",
            "shape_name": "DeviceName",
            "min_length": 2,
            "max_length": 100
          }
        },
        "shape_name": "UpdateDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": "\n         <p>Updates the device name by device ARN.</p>\n      "
    },
    "AssociateDeviceWithRoom": {
      "name": "AssociateDeviceWithRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device to associate to a room. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device to associate to a room. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room with which to associate the device. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room with which to associate the device. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "AssociateDeviceWithRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateDeviceWithRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": "\n         <p>Associates a device with a given room. This applies all the settings from the room\n         profile to the device, and all the skills in any skill groups added to that room. This\n         operation requires the device to be online, or else a manual sync is required. </p>\n      "
    },
    "DisassociateDeviceFromRoom": {
      "name": "DisassociateDeviceFromRoom",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device to disassociate from a room. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device to disassociate from a room. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DisassociateDeviceFromRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateDeviceFromRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": "\n         <p>Disassociates a device from its current room. The device continues to be connected to\n         the Wi-Fi network and is still registered to the account. The device settings and skills\n         are removed from the room.</p>\n      "
    },
    "DeleteVoiceRecordings": {
      "name": "DeleteVoiceRecordings",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeleteVoiceRecordingsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteVoiceRecordingsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": null
    },
    "GetProfileSyncedForDevice": {
      "name": "GetProfileSyncedForDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetProfileSyncedForDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Address": {
            "type": "string",
            "shape_name": "Address",
            "documentation": null,
            "min_length": 1,
            "max_length": 500
          },
          "CountryCode": {
            "type": "string",
            "pattern": "\\d{1,3}",
            "shape_name": "CountryCode",
            "documentation": null
          },
          "Zipcode": {
            "type": "string",
            "shape_name": "Zipcode",
            "documentation": null
          },
          "Timezone": {
            "type": "string",
            "shape_name": "Timezone",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "DistanceUnit": {
            "type": "string",
            "enum": [
              "METRIC",
              "IMPERIAL"
            ],
            "shape_name": "DistanceUnit",
            "documentation": null
          },
          "TemperatureUnit": {
            "type": "string",
            "enum": [
              "FAHRENHEIT",
              "CELSIUS"
            ],
            "shape_name": "TemperatureUnit",
            "documentation": null
          },
          "WakeWord": {
            "type": "string",
            "enum": [
              "ALEXA",
              "AMAZON",
              "ECHO",
              "COMPUTER"
            ],
            "shape_name": "WakeWord",
            "documentation": null
          },
          "SetupModeDisabled": {
            "type": "boolean",
            "shape_name": "Boolean",
            "documentation": null
          },
          "MaxVolumeLimit": {
            "type": "integer",
            "shape_name": "MaxVolumeLimit",
            "documentation": null
          }
        },
        "shape_name": "GetProfileSyncedForDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": null
    },
    "ListSkillsSyncedForDevice": {
      "name": "ListSkillsSyncedForDevice",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "ListSkillsSyncedForDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Skills": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          }
        },
        "shape_name": "ListSkillsSyncedForDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": null
    },
    "ListConferencingProfilesForDevice": {
      "name": "ListConferencingProfilesForDevice",
      "input": {
        "type": "structure",
        "members": {
          "DeviceSerialNumber": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,200}",
            "required": true,
            "shape_name": "DeviceSerialNumber",
            "documentation": null
          },
          "DeviceType": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,200}",
            "required": true,
            "shape_name": "DeviceType",
            "documentation": null
          },
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListConferencingProfilesForDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferencingProfiles": {
            "type": "list",
            "shape_name": "ConferencingProfileList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "AwsAccountOrganizationId": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "AwsAccountOrganizationId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "OrganizationArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "ProviderCalendarId": {
                  "type": "string",
                  "shape_name": "ProviderCalendarId",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "ProviderId": {
                  "type": "string",
                  "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
                  "shape_name": "ProviderId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "DisplayName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,200}",
                  "shape_name": "ConferencingProfileDisplayName",
                  "documentation": null
                },
                "CommsId": {
                  "type": "string",
                  "shape_name": "CommsId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "RoomId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "RoomId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "ConferenceProvider": {
                  "type": "structure",
                  "members": {
                    "Arn": {
                      "type": "string",
                      "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                      "zonbookDocumentation": "\n         <simpara>The ARN of the newly created conference provider.</simpara>\n      ",
                      "documentation": "\n         <p>The ARN of the newly created conference provider.</p>\n      ",
                      "shape_name": "Arn"
                    },
                    "Name": {
                      "type": "string",
                      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                      "zonbookDocumentation": "\n         <simpara>The name of the conference provider.</simpara>\n      ",
                      "documentation": "\n         <p>The name of the conference provider.</p>\n      ",
                      "shape_name": "ConferenceProviderName",
                      "min_length": 1,
                      "max_length": 50
                    },
                    "Type": {
                      "type": "string",
                      "enum": [
                        "CHIME",
                        "BLUEJEANS",
                        "FUZE",
                        "GOOGLE_HANGOUTS",
                        "POLYCOM",
                        "RINGCENTRAL",
                        "SKYPE_FOR_BUSINESS",
                        "WEBEX",
                        "ZOOM",
                        "CUSTOM"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The type of conference providers.</simpara>\n      ",
                      "documentation": "\n         <p>The type of conference providers.</p>\n      ",
                      "shape_name": "ConferenceProviderType"
                    },
                    "IPDialIn": {
                      "type": "structure",
                      "members": {
                        "Endpoint": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                          "documentation": "\n         <p>The IP address.</p>\n      ",
                          "required": true,
                          "shape_name": "Endpoint",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "CommsProtocol": {
                          "type": "string",
                          "enum": [
                            "SIP",
                            "SIPS",
                            "H323"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                          "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                          "required": true,
                          "shape_name": "CommsProtocol"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
                      "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
                      "shape_name": "IPDialIn"
                    },
                    "PSTNDialIn": {
                      "type": "structure",
                      "members": {
                        "CountryCode": {
                          "type": "string",
                          "pattern": "\\d{1,3}",
                          "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                          "documentation": "\n         <p>The zip code.</p>\n      ",
                          "required": true,
                          "shape_name": "CountryCode"
                        },
                        "PhoneNumber": {
                          "type": "string",
                          "pattern": "\\d{10}",
                          "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                          "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                          "required": true,
                          "shape_name": "PhoneNumber"
                        },
                        "OneClickIdDelay": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                          "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                          "required": true,
                          "shape_name": "OneClickIdDelay",
                          "min_length": 1,
                          "max_length": 2
                        },
                        "OneClickPinDelay": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                          "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                          "required": true,
                          "shape_name": "OneClickPinDelay",
                          "min_length": 1,
                          "max_length": 2
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
                      "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
                      "shape_name": "PSTNDialIn"
                    },
                    "MeetingSetting": {
                      "type": "structure",
                      "members": {
                        "RequirePin": {
                          "type": "string",
                          "enum": [
                            "YES",
                            "NO",
                            "OPTIONAL"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                          "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                          "required": true,
                          "shape_name": "RequirePin"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
                      "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
                      "shape_name": "MeetingSetting"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </simpara>\n      ",
                  "documentation": "\n         <p>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </p>\n      ",
                  "shape_name": "ConferenceProvider"
                },
                "OutboundCallerPhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+\\d{8,}$",
                  "shape_name": "OutboundCallerPhoneNumber",
                  "documentation": null
                }
              },
              "shape_name": "ConferencingProfile",
              "documentation": null
            }
          },
          "DeviceCategory": {
            "type": "string",
            "enum": [
              "PERSONAL",
              "ORGANIZATION",
              "UNASSIGNED",
              "UNMANAGED"
            ],
            "shape_name": "DeviceCategory",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListConferencingProfilesForDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "StartDeviceSync": {
      "name": "StartDeviceSync",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room with which the device to sync is associated. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room with which the device to sync is associated. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the device to sync. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the device to sync. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "Features": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Request\n         structure to start the device sync. Required.</simpara>\n      ",
            "documentation": "\n         <p>Request\n         structure to start the device sync. Required.</p>\n      ",
            "required": true,
            "shape_name": "Features",
            "members": {
              "type": "string",
              "enum": [
                "BLUETOOTH",
                "VOLUME",
                "NOTIFICATIONS",
                "LISTS",
                "SKILLS",
                "ALL"
              ],
              "shape_name": "Feature",
              "documentation": null
            }
          }
        },
        "shape_name": "StartDeviceSyncRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "StartDeviceSyncResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request failed because this device is no longer registered and therefore no longer managed by this account.</simpara>\n      ",
          "documentation": "\n         <p>The request failed because this device is no longer registered and therefore no longer managed by this account.</p>\n      ",
          "shape_name": "DeviceNotRegisteredException"
        }
      ],
      "documentation": "\n         <p>Resets a device and its account to the known default settings, by clearing all\n         information and settings set by previous users.</p>\n      "
    },
    "StartDeviceSyncFromSkill": {
      "name": "StartDeviceSyncFromSkill",
      "input": {
        "type": "structure",
        "members": {
          "UserId": {
            "type": "string",
            "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
            "required": true,
            "shape_name": "UserId",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "Features": {
            "type": "list",
            "required": true,
            "shape_name": "Features",
            "documentation": null,
            "members": {
              "type": "string",
              "enum": [
                "BLUETOOTH",
                "VOLUME",
                "NOTIFICATIONS",
                "LISTS",
                "SKILLS",
                "ALL"
              ],
              "shape_name": "Feature",
              "documentation": null
            }
          }
        },
        "shape_name": "StartDeviceSyncFromSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "StartDeviceSyncFromSkillResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "SearchDevices": {
      "name": "SearchDevices",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of devices. Supported filter keys are\n         DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, and ConnectionStatus (ONLINE and OFFLINE).</simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of devices. Supported filter keys are\n         DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, and ConnectionStatus (ONLINE and OFFLINE).</p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of devices. Supported sort keys\n         are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, and ConnectionStatus.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of devices. Supported sort keys\n         are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, and ConnectionStatus.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          }
        },
        "shape_name": "SearchDevicesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Devices": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The devices that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The devices that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "DeviceDataList",
            "members": {
              "type": "structure",
              "members": {
                "DeviceId": {
                  "type": "string",
                  "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
                  "internalonly": true,
                  "shape_name": "DeviceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 200
                },
                "DeviceArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a device.</p>\n      ",
                  "shape_name": "Arn"
                },
                "DeviceSerialNumber": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9]{1,200}",
                  "zonbookDocumentation": "\n         <simpara>The serial number of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The serial number of a device.</p>\n      ",
                  "shape_name": "DeviceSerialNumber"
                },
                "DeviceType": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9]{1,200}",
                  "zonbookDocumentation": "\n         <simpara>The type of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The type of a device.</p>\n      ",
                  "shape_name": "DeviceType"
                },
                "DeviceName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a device.</p>\n      ",
                  "shape_name": "DeviceName",
                  "min_length": 2,
                  "max_length": 100
                },
                "SoftwareVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The software version of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The software version of a device.</p>\n      ",
                  "shape_name": "SoftwareVersion"
                },
                "MacAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The MAC address of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The MAC address of a device.</p>\n      ",
                  "shape_name": "MacAddress"
                },
                "DeviceStatus": {
                  "type": "string",
                  "enum": [
                    "READY",
                    "PENDING",
                    "WAS_OFFLINE",
                    "DEREGISTERED"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of a device.</simpara>\n      ",
                  "documentation": "\n         <p>The status of a device.</p>\n      ",
                  "shape_name": "DeviceStatus"
                },
                "RoomId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "internalonly": true,
                  "shape_name": "RoomId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The room ARN associated with a device.</simpara>\n      ",
                  "documentation": "\n         <p>The room ARN associated with a device.</p>\n      ",
                  "shape_name": "Arn"
                },
                "RoomName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the room associated with a device.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the room associated with a device.</p>\n      ",
                  "shape_name": "RoomName",
                  "min_length": 1,
                  "max_length": 100
                },
                "DeviceStatusInfo": {
                  "type": "structure",
                  "members": {
                    "DeviceStatusDetails": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>One or more device status detail descriptions.</simpara>\n      ",
                      "documentation": "\n         <p>One or more device status detail descriptions.</p>\n      ",
                      "shape_name": "DeviceStatusDetails",
                      "members": {
                        "type": "structure",
                        "members": {
                          "Code": {
                            "type": "string",
                            "enum": [
                              "DEVICE_SOFTWARE_UPDATE_NEEDED",
                              "DEVICE_WAS_OFFLINE"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The device status detail code.</simpara>\n      ",
                            "documentation": "\n         <p>The device status detail code.</p>\n      ",
                            "shape_name": "DeviceStatusDetailCode"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Details of a device’s status.</simpara>\n      ",
                        "documentation": "\n         <p>Details of a device’s status.</p>\n      ",
                        "shape_name": "DeviceStatusDetail"
                      }
                    },
                    "ConnectionStatus": {
                      "type": "string",
                      "enum": [
                        "ONLINE",
                        "OFFLINE"
                      ],
                      "zonbookDocumentation": "\n         <para>The latest available information about the connection status of a device. </para>\n      ",
                      "documentation": "\n         <p>The latest available information about the connection status of a device. </p>\n      ",
                      "shape_name": "ConnectionStatus"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Detailed information about a device's status.</simpara>\n      ",
                  "documentation": "\n         <p>Detailed information about a device's status.</p>\n      ",
                  "shape_name": "DeviceStatusInfo"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Device attributes.</simpara>\n      ",
              "documentation": "\n         <p>Device attributes.</p>\n      ",
              "shape_name": "DeviceData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of devices returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of devices returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchDevicesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches devices and lists the ones that meet a set of filter criteria.</p>\n      "
    },
    "TransferDevice": {
      "name": "TransferDevice",
      "input": {
        "type": "structure",
        "members": {
          "DeviceId": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]+):([a-zA-Z0-9]+)",
            "internalonly": true,
            "shape_name": "DeviceId",
            "documentation": null,
            "min_length": 1,
            "max_length": 200
          },
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "TargetCustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          }
        },
        "shape_name": "TransferDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "TransferDeviceResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateAuthorizationUrl": {
      "name": "CreateAuthorizationUrl",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RedirectEndpoint": {
            "type": "string",
            "required": true,
            "shape_name": "RedirectEndpoint",
            "documentation": null,
            "min_length": 1,
            "max_length": 1024
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "CreateAuthorizationUrlRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AuthorizationUrl": {
            "type": "string",
            "shape_name": "AuthorizationUrl",
            "documentation": null
          }
        },
        "shape_name": "CreateAuthorizationUrlResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "EstablishAuthorization": {
      "name": "EstablishAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "AuthorizationResult": {
            "type": "map",
            "sensitive": true,
            "required": true,
            "shape_name": "AuthorizationResult",
            "documentation": null,
            "keys": {
              "type": "string",
              "shape_name": "Key",
              "documentation": null,
              "min_length": 1
            },
            "members": {
              "type": "string",
              "shape_name": "Value",
              "documentation": null,
              "min_length": 1
            }
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          }
        },
        "shape_name": "EstablishAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "shape_name": "SkillId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          }
        },
        "shape_name": "EstablishAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "RevokeAuthorization": {
      "name": "RevokeAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "RevokeAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RevokeAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "CreateProviderAuthorizationUrl": {
      "name": "CreateProviderAuthorizationUrl",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RedirectEndpoint": {
            "type": "string",
            "shape_name": "RedirectEndpoint",
            "documentation": null,
            "min_length": 1,
            "max_length": 1024
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "required": true,
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "CreateProviderAuthorizationUrlRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AuthorizationUrl": {
            "type": "string",
            "shape_name": "AuthorizationUrl",
            "documentation": null
          }
        },
        "shape_name": "CreateProviderAuthorizationUrlResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "EstablishProviderAuthorization": {
      "name": "EstablishProviderAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "required": true,
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "AuthorizationResult": {
            "type": "map",
            "sensitive": true,
            "shape_name": "AuthorizationResult",
            "documentation": null,
            "keys": {
              "type": "string",
              "shape_name": "Key",
              "documentation": null,
              "min_length": 1
            },
            "members": {
              "type": "string",
              "shape_name": "Value",
              "documentation": null,
              "min_length": 1
            }
          },
          "ProviderAccountCredentials": {
            "type": "list",
            "shape_name": "ProviderAccountCredentialList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Username": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "Password": {
                  "type": "string",
                  "sensitive": true,
                  "shape_name": "Password",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                }
              },
              "shape_name": "ProviderAccountCredential",
              "documentation": null
            }
          },
          "ProviderConfiguration": {
            "type": "structure",
            "members": {
              "EndpointUrl": {
                "type": "string",
                "pattern": "^https://.+(?i)/ews/exchange.asmx$",
                "shape_name": "EndpointUrl",
                "documentation": null,
                "min_length": 10,
                "max_length": 1024
              },
              "EnableImpersonation": {
                "type": "boolean",
                "shape_name": "Boolean",
                "documentation": null
              }
            },
            "shape_name": "ProviderConfiguration",
            "documentation": null
          }
        },
        "shape_name": "EstablishProviderAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ProviderAccount": {
            "type": "structure",
            "members": {
              "OrganizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "OrganizationId",
                "documentation": null
              },
              "OrganizationArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "ProviderId": {
                "type": "string",
                "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
                "shape_name": "ProviderId",
                "documentation": null,
                "min_length": 1,
                "max_length": 100
              },
              "ProviderConfiguration": {
                "type": "structure",
                "members": {
                  "EndpointUrl": {
                    "type": "string",
                    "pattern": "^https://.+(?i)/ews/exchange.asmx$",
                    "shape_name": "EndpointUrl",
                    "documentation": null,
                    "min_length": 10,
                    "max_length": 1024
                  },
                  "EnableImpersonation": {
                    "type": "boolean",
                    "shape_name": "Boolean",
                    "documentation": null
                  }
                },
                "shape_name": "ProviderConfiguration",
                "documentation": null
              },
              "ProviderAccountProfiles": {
                "type": "list",
                "shape_name": "ProviderAccountProfileList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "AccountId": {
                      "type": "string",
                      "shape_name": "AccountId",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 100
                    },
                    "DisplayName": {
                      "type": "string",
                      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                      "shape_name": "ProviderAccountDisplayName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 50
                    },
                    "Username": {
                      "type": "string",
                      "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                      "shape_name": "Email",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 128
                    },
                    "AuthState": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INVALID"
                      ],
                      "shape_name": "AuthState",
                      "documentation": null
                    },
                    "IsDefault": {
                      "type": "boolean",
                      "shape_name": "boolean",
                      "documentation": null
                    }
                  },
                  "shape_name": "ProviderAccountProfile",
                  "documentation": null
                }
              }
            },
            "shape_name": "ProviderAccount",
            "documentation": null
          }
        },
        "shape_name": "EstablishProviderAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ProviderURLInvalidException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ProviderURLUnreachableException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "UserCredentialsInvalidException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "CalendarNotFoundForAccountException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ErrorCode": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "shape_name": "CalendarProviderFailureException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "InvalidKmsKeyException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "RevokeProviderAuthorization": {
      "name": "RevokeProviderAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "required": true,
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "RevokeProviderAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RevokeProviderAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetProviderAccount": {
      "name": "GetProviderAccount",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "required": true,
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "GetProviderAccountRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ProviderAccount": {
            "type": "structure",
            "members": {
              "OrganizationId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "internalonly": true,
                "shape_name": "OrganizationId",
                "documentation": null
              },
              "OrganizationArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "ProviderId": {
                "type": "string",
                "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
                "shape_name": "ProviderId",
                "documentation": null,
                "min_length": 1,
                "max_length": 100
              },
              "ProviderConfiguration": {
                "type": "structure",
                "members": {
                  "EndpointUrl": {
                    "type": "string",
                    "pattern": "^https://.+(?i)/ews/exchange.asmx$",
                    "shape_name": "EndpointUrl",
                    "documentation": null,
                    "min_length": 10,
                    "max_length": 1024
                  },
                  "EnableImpersonation": {
                    "type": "boolean",
                    "shape_name": "Boolean",
                    "documentation": null
                  }
                },
                "shape_name": "ProviderConfiguration",
                "documentation": null
              },
              "ProviderAccountProfiles": {
                "type": "list",
                "shape_name": "ProviderAccountProfileList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "AccountId": {
                      "type": "string",
                      "shape_name": "AccountId",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 100
                    },
                    "DisplayName": {
                      "type": "string",
                      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                      "shape_name": "ProviderAccountDisplayName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 50
                    },
                    "Username": {
                      "type": "string",
                      "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                      "shape_name": "Email",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 128
                    },
                    "AuthState": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "INVALID"
                      ],
                      "shape_name": "AuthState",
                      "documentation": null
                    },
                    "IsDefault": {
                      "type": "boolean",
                      "shape_name": "boolean",
                      "documentation": null
                    }
                  },
                  "shape_name": "ProviderAccountProfile",
                  "documentation": null
                }
              }
            },
            "shape_name": "ProviderAccount",
            "documentation": null
          }
        },
        "shape_name": "GetProviderAccountResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "UpdateProviderAccount": {
      "name": "UpdateProviderAccount",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProviderId": {
            "type": "string",
            "pattern": "amzn1\\.moneypenny\\.provider\\.([a-f0-9]+-?){5}",
            "required": true,
            "shape_name": "ProviderId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "ProviderAccountCredentials": {
            "type": "list",
            "required": true,
            "shape_name": "ProviderAccountCredentialList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Username": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "Password": {
                  "type": "string",
                  "sensitive": true,
                  "shape_name": "Password",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                }
              },
              "shape_name": "ProviderAccountCredential",
              "documentation": null
            }
          },
          "ProviderConfiguration": {
            "type": "structure",
            "members": {
              "EndpointUrl": {
                "type": "string",
                "pattern": "^https://.+(?i)/ews/exchange.asmx$",
                "shape_name": "EndpointUrl",
                "documentation": null,
                "min_length": 10,
                "max_length": 1024
              },
              "EnableImpersonation": {
                "type": "boolean",
                "shape_name": "Boolean",
                "documentation": null
              }
            },
            "required": true,
            "shape_name": "ProviderConfiguration",
            "documentation": null
          }
        },
        "shape_name": "UpdateProviderAccountRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateProviderAccountResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": null
    },
    "PutSkillAuthorization": {
      "name": "PutSkillAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "AuthorizationResult": {
            "type": "map",
            "sensitive": true,
            "zonbookDocumentation": "\n         <simpara>The authorization result specific to OAUTH code grant output. \"Code” must be populated in the AuthorizationResult map to establish the authorization.</simpara>\n      ",
            "documentation": "\n         <p>The authorization result specific to OAUTH code grant output. \"Code” must be populated in the AuthorizationResult map to establish the authorization.</p>\n      ",
            "required": true,
            "shape_name": "AuthorizationResult",
            "keys": {
              "type": "string",
              "shape_name": "Key",
              "documentation": null,
              "min_length": 1
            },
            "members": {
              "type": "string",
              "shape_name": "Value",
              "documentation": null,
              "min_length": 1
            }
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of a skill.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of a skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The room that the skill is authorized for.</simpara>\n      ",
            "documentation": "\n         <p>The room that the skill is authorized for.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "PutSkillAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutSkillAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The caller has no permissions to operate on the resource involved in the API call.</simpara>\n      ",
          "documentation": "\n         <p>The caller has no permissions to operate on the resource involved in the API call.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Links a user's account to a third-party skill provider. If this API operation is\n         called by an assumed IAM role, the skill being linked must be a private skill. Also, the\n         skill must be owned by the AWS account that assumed the IAM role.</p>\n      "
    },
    "DeleteSkillAuthorization": {
      "name": "DeleteSkillAuthorization",
      "input": {
        "type": "structure",
        "members": {
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "zonbookDocumentation": "\n         <simpara>The unique identifier of a skill.</simpara>\n      ",
            "documentation": "\n         <p>The unique identifier of a skill.</p>\n      ",
            "required": true,
            "shape_name": "SkillId"
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The room that the skill is authorized for.</simpara>\n      ",
            "documentation": "\n         <p>The room that the skill is authorized for.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteSkillAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteSkillAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Unlinks a third-party account from a skill.</p>\n      "
    },
    "ListAppliances": {
      "name": "ListAppliances",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Appliances": {
            "type": "list",
            "shape_name": "ApplianceList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ApplianceId": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "ApplianceId",
                  "documentation": null
                },
                "ApplianceFriendlyName": {
                  "type": "string",
                  "shape_name": "ApplianceFriendlyName",
                  "documentation": null
                },
                "ApplianceDescription": {
                  "type": "string",
                  "shape_name": "ApplianceDescription",
                  "documentation": null
                },
                "ApplianceManufacturerName": {
                  "type": "string",
                  "shape_name": "ApplianceManufacturerName",
                  "documentation": null
                }
              },
              "shape_name": "Appliance",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListAppliancesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "DiscoverAppliances": {
      "name": "DiscoverAppliances",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DiscoverAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DiscoverAppliancesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "DeleteAppliances": {
      "name": "DeleteAppliances",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeleteAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteAppliancesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListApplianceGroups": {
      "name": "ListApplianceGroups",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "ListApplianceGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ApplianceGroups": {
            "type": "list",
            "required": true,
            "shape_name": "ApplianceGroupList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ApplianceGroupName": {
                  "type": "string",
                  "shape_name": "ApplianceGroupName",
                  "documentation": null
                },
                "ApplianceGroupId": {
                  "type": "string",
                  "shape_name": "ApplianceGroupId",
                  "documentation": null
                },
                "ApplianceIds": {
                  "type": "list",
                  "shape_name": "ApplianceIdList",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "ApplianceId",
                    "documentation": null
                  }
                }
              },
              "shape_name": "ApplianceGroup",
              "documentation": null
            }
          }
        },
        "shape_name": "ListApplianceGroupsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "UpdateApplianceGroup": {
      "name": "UpdateApplianceGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ApplianceGroupName": {
            "type": "string",
            "required": true,
            "shape_name": "ApplianceGroupName",
            "documentation": null
          },
          "ApplianceGroupId": {
            "type": "string",
            "shape_name": "ApplianceGroupId",
            "documentation": null
          },
          "ApplianceIds": {
            "type": "list",
            "required": true,
            "shape_name": "ApplianceIdList",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "ApplianceId",
              "documentation": null
            }
          }
        },
        "shape_name": "UpdateApplianceGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateApplianceGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "DeleteApplianceGroup": {
      "name": "DeleteApplianceGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "RoomId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "RoomId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ApplianceGroupId": {
            "type": "string",
            "required": true,
            "shape_name": "ApplianceGroupId",
            "documentation": null
          }
        },
        "shape_name": "DeleteApplianceGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteApplianceGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListSmartHomeAppliances": {
      "name": "ListSmartHomeAppliances",
      "input": {
        "type": "structure",
        "members": {
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The room that the appliances are associated with.</simpara>\n      ",
            "documentation": "\n         <p>The room that the appliances are associated with.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of appliances to be returned, per paginated calls.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of appliances to be returned, per paginated calls.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSmartHomeAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SmartHomeAppliances": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The smart home appliances.</para>\n      ",
            "documentation": "\n         <p>The smart home appliances.</p>\n      ",
            "shape_name": "SmartHomeApplianceList",
            "members": {
              "type": "structure",
              "members": {
                "SmartHomeApplianceId": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "ApplianceId",
                  "documentation": null
                },
                "FriendlyName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The friendly name of the smart home appliance.</para>\n      ",
                  "documentation": "\n         <p>The friendly name of the smart home appliance.</p>\n      ",
                  "shape_name": "ApplianceFriendlyName"
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The description of the smart home appliance.</para>\n      ",
                  "documentation": "\n         <p>The description of the smart home appliance.</p>\n      ",
                  "shape_name": "ApplianceDescription"
                },
                "ManufacturerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of the manufacturer of the smart home appliance.</para>\n      ",
                  "documentation": "\n         <p>The name of the manufacturer of the smart home appliance.</p>\n      ",
                  "shape_name": "ApplianceManufacturerName"
                }
              },
              "zonbookDocumentation": "\n         <para>A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. </para>\n      ",
              "documentation": "\n         <p>A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance. </p>\n      ",
              "shape_name": "SmartHomeAppliance"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListSmartHomeAppliancesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Lists all of the smart home appliances associated with a room.</p>\n      "
    },
    "StartSmartHomeApplianceDiscovery": {
      "name": "StartSmartHomeApplianceDiscovery",
      "input": {
        "type": "structure",
        "members": {
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The room where smart home appliance discovery was initiated.</simpara>\n      ",
            "documentation": "\n         <p>The room where smart home appliance discovery was initiated.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "StartSmartHomeApplianceDiscoveryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "StartSmartHomeApplianceDiscoveryResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Initiates the discovery of any smart home appliances associated with the room.</p>\n      "
    },
    "ForgetSmartHomeAppliances": {
      "name": "ForgetSmartHomeAppliances",
      "input": {
        "type": "structure",
        "members": {
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The room that the appliances are associated with.</simpara>\n      ",
            "documentation": "\n         <p>The room that the appliances are associated with.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "ForgetSmartHomeAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ForgetSmartHomeAppliancesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Forgets smart home appliances associated to a room.</p>\n      "
    },
    "CreateOutboundCaller": {
      "name": "CreateOutboundCaller",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "OutboundCallerName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "CountryCode": {
            "type": "string",
            "pattern": "\\d{1,3}",
            "required": true,
            "shape_name": "CountryCode",
            "documentation": null
          },
          "PhoneNumber": {
            "type": "string",
            "pattern": "\\d{10}",
            "required": true,
            "shape_name": "PhoneNumber",
            "documentation": null
          }
        },
        "shape_name": "CreateOutboundCallerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "shape_name": "OutboundCallerId",
            "documentation": null
          }
        },
        "shape_name": "CreateOutboundCallerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "UpdateOutboundCaller": {
      "name": "UpdateOutboundCaller",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "required": true,
            "shape_name": "OutboundCallerId",
            "documentation": null
          },
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "OutboundCallerName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "UpdateOutboundCallerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateOutboundCallerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DeleteOutboundCaller": {
      "name": "DeleteOutboundCaller",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "required": true,
            "shape_name": "OutboundCallerId",
            "documentation": null
          }
        },
        "shape_name": "DeleteOutboundCallerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteOutboundCallerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetOutboundCaller": {
      "name": "GetOutboundCaller",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "OutboundCallerId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "required": true,
            "shape_name": "OutboundCallerId",
            "documentation": null
          }
        },
        "shape_name": "GetOutboundCallerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OutboundCaller": {
            "type": "structure",
            "members": {
              "OutboundCallerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "shape_name": "OutboundCallerId",
                "documentation": null
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "OutboundCallerName",
                "documentation": null,
                "min_length": 1,
                "max_length": 100
              },
              "CountryCode": {
                "type": "string",
                "pattern": "\\d{1,3}",
                "shape_name": "CountryCode",
                "documentation": null
              },
              "PhoneNumber": {
                "type": "string",
                "pattern": "\\d{10}",
                "shape_name": "PhoneNumber",
                "documentation": null
              }
            },
            "shape_name": "OutboundCaller",
            "documentation": null
          }
        },
        "shape_name": "GetOutboundCallerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListOutboundCallers": {
      "name": "ListOutboundCallers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListOutboundCallersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OutboundCallers": {
            "type": "list",
            "shape_name": "OutboundCallerList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "OutboundCallerId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{32}",
                  "shape_name": "OutboundCallerId",
                  "documentation": null
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "OutboundCallerName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "CountryCode": {
                  "type": "string",
                  "pattern": "\\d{1,3}",
                  "shape_name": "CountryCode",
                  "documentation": null
                },
                "PhoneNumber": {
                  "type": "string",
                  "pattern": "\\d{10}",
                  "shape_name": "PhoneNumber",
                  "documentation": null
                }
              },
              "shape_name": "OutboundCaller",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListOutboundCallersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "PutCallingPreference": {
      "name": "PutCallingPreference",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "Resource": {
            "type": "structure",
            "members": {
              "ResourceType": {
                "type": "string",
                "enum": [
                  "ORGANIZATION",
                  "ROOM",
                  "PROFILE"
                ],
                "required": true,
                "shape_name": "ResourceType",
                "documentation": null
              },
              "ResourceId": {
                "type": "string",
                "required": true,
                "shape_name": "ResourceId",
                "documentation": null,
                "min_length": 1,
                "max_length": 512
              }
            },
            "internalonly": true,
            "shape_name": "Resource",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "CallingPreference": {
            "type": "structure",
            "members": {
              "DefaultOutboundCallerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "shape_name": "OutboundCallerId",
                "documentation": null
              }
            },
            "required": true,
            "shape_name": "CallingPreference",
            "documentation": null
          }
        },
        "shape_name": "PutCallingPreferenceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutCallingPreferenceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetCallingPreference": {
      "name": "GetCallingPreference",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "Resource": {
            "type": "structure",
            "members": {
              "ResourceType": {
                "type": "string",
                "enum": [
                  "ORGANIZATION",
                  "ROOM",
                  "PROFILE"
                ],
                "required": true,
                "shape_name": "ResourceType",
                "documentation": null
              },
              "ResourceId": {
                "type": "string",
                "required": true,
                "shape_name": "ResourceId",
                "documentation": null,
                "min_length": 1,
                "max_length": 512
              }
            },
            "internalonly": true,
            "shape_name": "Resource",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ProfileArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetCallingPreferenceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Preference": {
            "type": "structure",
            "members": {
              "DefaultOutboundCallerId": {
                "type": "string",
                "pattern": "[0-9a-f]{32}",
                "shape_name": "OutboundCallerId",
                "documentation": null
              }
            },
            "shape_name": "CallingPreference",
            "documentation": null
          }
        },
        "shape_name": "GetCallingPreferenceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "CreateConferenceProvider": {
      "name": "CreateConferenceProvider",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceProviderName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name of the conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The name of the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "ConferenceProviderName",
            "min_length": 1,
            "max_length": 50
          },
          "ConferenceProviderType": {
            "type": "string",
            "enum": [
              "CHIME",
              "BLUEJEANS",
              "FUZE",
              "GOOGLE_HANGOUTS",
              "POLYCOM",
              "RINGCENTRAL",
              "SKYPE_FOR_BUSINESS",
              "WEBEX",
              "ZOOM",
              "CUSTOM"
            ],
            "zonbookDocumentation": "\n         <simpara>Represents a type within a list of predefined types.</simpara>\n      ",
            "documentation": "\n         <p>Represents a type within a list of predefined types.</p>\n      ",
            "required": true,
            "shape_name": "ConferenceProviderType"
          },
          "IPDialIn": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                "documentation": "\n         <p>The IP address.</p>\n      ",
                "required": true,
                "shape_name": "Endpoint",
                "min_length": 1,
                "max_length": 256
              },
              "CommsProtocol": {
                "type": "string",
                "enum": [
                  "SIP",
                  "SIPS",
                  "H323"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                "required": true,
                "shape_name": "CommsProtocol"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
            "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
            "shape_name": "IPDialIn"
          },
          "PSTNDialIn": {
            "type": "structure",
            "members": {
              "CountryCode": {
                "type": "string",
                "pattern": "\\d{1,3}",
                "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                "documentation": "\n         <p>The zip code.</p>\n      ",
                "required": true,
                "shape_name": "CountryCode"
              },
              "PhoneNumber": {
                "type": "string",
                "pattern": "\\d{10}",
                "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                "required": true,
                "shape_name": "PhoneNumber"
              },
              "OneClickIdDelay": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                "required": true,
                "shape_name": "OneClickIdDelay",
                "min_length": 1,
                "max_length": 2
              },
              "OneClickPinDelay": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                "required": true,
                "shape_name": "OneClickPinDelay",
                "min_length": 1,
                "max_length": 2
              }
            },
            "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
            "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
            "shape_name": "PSTNDialIn"
          },
          "MeetingSetting": {
            "type": "structure",
            "members": {
              "RequirePin": {
                "type": "string",
                "enum": [
                  "YES",
                  "NO",
                  "OPTIONAL"
                ],
                "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                "required": true,
                "shape_name": "RequirePin"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "MeetingSetting"
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>The request token of the client.</p>\n      ",
            "zonbookDocumentation": "\n         <simpara>The request token of the client.</simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateConferenceProviderRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceProviderArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly-created conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly-created conference provider.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateConferenceProviderResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        }
      ],
      "documentation": "\n         <p>Adds a new conference provider under the user's AWS account.</p>\n      "
    },
    "UpdateConferenceProvider": {
      "name": "UpdateConferenceProvider",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceProviderArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "ConferenceProviderType": {
            "type": "string",
            "enum": [
              "CHIME",
              "BLUEJEANS",
              "FUZE",
              "GOOGLE_HANGOUTS",
              "POLYCOM",
              "RINGCENTRAL",
              "SKYPE_FOR_BUSINESS",
              "WEBEX",
              "ZOOM",
              "CUSTOM"
            ],
            "zonbookDocumentation": "\n         <simpara>The type of the conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The type of the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "ConferenceProviderType"
          },
          "IPDialIn": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                "documentation": "\n         <p>The IP address.</p>\n      ",
                "required": true,
                "shape_name": "Endpoint",
                "min_length": 1,
                "max_length": 256
              },
              "CommsProtocol": {
                "type": "string",
                "enum": [
                  "SIP",
                  "SIPS",
                  "H323"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                "required": true,
                "shape_name": "CommsProtocol"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
            "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
            "shape_name": "IPDialIn"
          },
          "PSTNDialIn": {
            "type": "structure",
            "members": {
              "CountryCode": {
                "type": "string",
                "pattern": "\\d{1,3}",
                "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                "documentation": "\n         <p>The zip code.</p>\n      ",
                "required": true,
                "shape_name": "CountryCode"
              },
              "PhoneNumber": {
                "type": "string",
                "pattern": "\\d{10}",
                "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                "required": true,
                "shape_name": "PhoneNumber"
              },
              "OneClickIdDelay": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                "required": true,
                "shape_name": "OneClickIdDelay",
                "min_length": 1,
                "max_length": 2
              },
              "OneClickPinDelay": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                "required": true,
                "shape_name": "OneClickPinDelay",
                "min_length": 1,
                "max_length": 2
              }
            },
            "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
            "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
            "shape_name": "PSTNDialIn"
          },
          "MeetingSetting": {
            "type": "structure",
            "members": {
              "RequirePin": {
                "type": "string",
                "enum": [
                  "YES",
                  "NO",
                  "OPTIONAL"
                ],
                "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                "required": true,
                "shape_name": "RequirePin"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "MeetingSetting"
          }
        },
        "shape_name": "UpdateConferenceProviderRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateConferenceProviderResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Updates an existing conference provider's settings.</p>\n      "
    },
    "GetConferenceProvider": {
      "name": "GetConferenceProvider",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceProviderArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created conference provider.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetConferenceProviderRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceProvider": {
            "type": "structure",
            "members": {
              "Arn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the newly created conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the newly created conference provider.</p>\n      ",
                "shape_name": "Arn"
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of the conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The name of the conference provider.</p>\n      ",
                "shape_name": "ConferenceProviderName",
                "min_length": 1,
                "max_length": 50
              },
              "Type": {
                "type": "string",
                "enum": [
                  "CHIME",
                  "BLUEJEANS",
                  "FUZE",
                  "GOOGLE_HANGOUTS",
                  "POLYCOM",
                  "RINGCENTRAL",
                  "SKYPE_FOR_BUSINESS",
                  "WEBEX",
                  "ZOOM",
                  "CUSTOM"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of conference providers.</simpara>\n      ",
                "documentation": "\n         <p>The type of conference providers.</p>\n      ",
                "shape_name": "ConferenceProviderType"
              },
              "IPDialIn": {
                "type": "structure",
                "members": {
                  "Endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                    "documentation": "\n         <p>The IP address.</p>\n      ",
                    "required": true,
                    "shape_name": "Endpoint",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "CommsProtocol": {
                    "type": "string",
                    "enum": [
                      "SIP",
                      "SIPS",
                      "H323"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                    "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                    "required": true,
                    "shape_name": "CommsProtocol"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
                "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
                "shape_name": "IPDialIn"
              },
              "PSTNDialIn": {
                "type": "structure",
                "members": {
                  "CountryCode": {
                    "type": "string",
                    "pattern": "\\d{1,3}",
                    "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                    "documentation": "\n         <p>The zip code.</p>\n      ",
                    "required": true,
                    "shape_name": "CountryCode"
                  },
                  "PhoneNumber": {
                    "type": "string",
                    "pattern": "\\d{10}",
                    "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                    "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                    "required": true,
                    "shape_name": "PhoneNumber"
                  },
                  "OneClickIdDelay": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                    "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                    "required": true,
                    "shape_name": "OneClickIdDelay",
                    "min_length": 1,
                    "max_length": 2
                  },
                  "OneClickPinDelay": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                    "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                    "required": true,
                    "shape_name": "OneClickPinDelay",
                    "min_length": 1,
                    "max_length": 2
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
                "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
                "shape_name": "PSTNDialIn"
              },
              "MeetingSetting": {
                "type": "structure",
                "members": {
                  "RequirePin": {
                    "type": "string",
                    "enum": [
                      "YES",
                      "NO",
                      "OPTIONAL"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                    "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                    "required": true,
                    "shape_name": "RequirePin"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
                "shape_name": "MeetingSetting"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The conference provider.</p>\n      ",
            "shape_name": "ConferenceProvider"
          }
        },
        "shape_name": "GetConferenceProviderResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets details about a specific conference provider.</p>\n      "
    },
    "ListConferenceProviders": {
      "name": "ListConferenceProviders",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of conference providers to be returned, per paginated\n         calls.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of conference providers to be returned, per paginated\n         calls.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListConferenceProvidersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceProviders": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The conference providers.</simpara>\n      ",
            "documentation": "\n         <p>The conference providers.</p>\n      ",
            "shape_name": "ConferenceProvidersList",
            "members": {
              "type": "structure",
              "members": {
                "Arn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the newly created conference provider.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the newly created conference provider.</p>\n      ",
                  "shape_name": "Arn"
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the conference provider.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the conference provider.</p>\n      ",
                  "shape_name": "ConferenceProviderName",
                  "min_length": 1,
                  "max_length": 50
                },
                "Type": {
                  "type": "string",
                  "enum": [
                    "CHIME",
                    "BLUEJEANS",
                    "FUZE",
                    "GOOGLE_HANGOUTS",
                    "POLYCOM",
                    "RINGCENTRAL",
                    "SKYPE_FOR_BUSINESS",
                    "WEBEX",
                    "ZOOM",
                    "CUSTOM"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of conference providers.</simpara>\n      ",
                  "documentation": "\n         <p>The type of conference providers.</p>\n      ",
                  "shape_name": "ConferenceProviderType"
                },
                "IPDialIn": {
                  "type": "structure",
                  "members": {
                    "Endpoint": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The IP address.</simpara>\n      ",
                      "documentation": "\n         <p>The IP address.</p>\n      ",
                      "required": true,
                      "shape_name": "Endpoint",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "CommsProtocol": {
                      "type": "string",
                      "enum": [
                        "SIP",
                        "SIPS",
                        "H323"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The protocol, including SIP, SIPS, and H323.</simpara>\n      ",
                      "documentation": "\n         <p>The protocol, including SIP, SIPS, and H323.</p>\n      ",
                      "required": true,
                      "shape_name": "CommsProtocol"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The IP endpoint and protocol for calling.</simpara>\n      ",
                  "documentation": "\n         <p>The IP endpoint and protocol for calling.</p>\n      ",
                  "shape_name": "IPDialIn"
                },
                "PSTNDialIn": {
                  "type": "structure",
                  "members": {
                    "CountryCode": {
                      "type": "string",
                      "pattern": "\\d{1,3}",
                      "zonbookDocumentation": "\n         <simpara>The zip code.</simpara>\n      ",
                      "documentation": "\n         <p>The zip code.</p>\n      ",
                      "required": true,
                      "shape_name": "CountryCode"
                    },
                    "PhoneNumber": {
                      "type": "string",
                      "pattern": "\\d{10}",
                      "zonbookDocumentation": "\n         <simpara>The phone number to call to join the conference.</simpara>\n      ",
                      "documentation": "\n         <p>The phone number to call to join the conference.</p>\n      ",
                      "required": true,
                      "shape_name": "PhoneNumber"
                    },
                    "OneClickIdDelay": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                      "documentation": "\n         <p>The delay duration before Alexa enters the conference ID with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                      "required": true,
                      "shape_name": "OneClickIdDelay",
                      "min_length": 1,
                      "max_length": 2
                    },
                    "OneClickPinDelay": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</simpara>\n      ",
                      "documentation": "\n         <p>The delay duration before Alexa enters the conference pin with dual-tone multi-frequency (DTMF). Each number on the dial pad corresponds to a DTMF tone, which is how we send data over the telephone network.</p>\n      ",
                      "required": true,
                      "shape_name": "OneClickPinDelay",
                      "min_length": 1,
                      "max_length": 2
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The information for PSTN conferencing.</simpara>\n      ",
                  "documentation": "\n         <p>The information for PSTN conferencing.</p>\n      ",
                  "shape_name": "PSTNDialIn"
                },
                "MeetingSetting": {
                  "type": "structure",
                  "members": {
                    "RequirePin": {
                      "type": "string",
                      "enum": [
                        "YES",
                        "NO",
                        "OPTIONAL"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The values that indicate whether the pin is always required.</simpara>\n      ",
                      "documentation": "\n         <p>The values that indicate whether the pin is always required.</p>\n      ",
                      "required": true,
                      "shape_name": "RequirePin"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The meeting settings for the conference provider.</simpara>\n      ",
                  "documentation": "\n         <p>The meeting settings for the conference provider.</p>\n      ",
                  "shape_name": "MeetingSetting"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </simpara>\n      ",
              "documentation": "\n         <p>An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom. </p>\n      ",
              "shape_name": "ConferenceProvider"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The tokens used for pagination.</simpara>\n      ",
            "documentation": "\n         <p>The tokens used for pagination.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListConferenceProvidersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Lists conference providers under a specific AWS account.</p>\n      "
    },
    "DeleteConferenceProvider": {
      "name": "DeleteConferenceProvider",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceProviderArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <para>The ARN of the conference provider.</para>\n      ",
            "documentation": "\n         <p>The ARN of the conference provider.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteConferenceProviderRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteConferenceProviderResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a conference provider.</p>\n      "
    },
    "PutConferencePreference": {
      "name": "PutConferencePreference",
      "input": {
        "type": "structure",
        "members": {
          "ConferencePreference": {
            "type": "structure",
            "members": {
              "DefaultConferenceProviderArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the default conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the default conference provider.</p>\n      ",
                "shape_name": "Arn"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The conference preference of a specific conference provider.</simpara>\n      ",
            "documentation": "\n         <p>The conference preference of a specific conference provider.</p>\n      ",
            "required": true,
            "shape_name": "ConferencePreference"
          }
        },
        "shape_name": "PutConferencePreferenceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutConferencePreferenceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Sets the conference preferences on a specific conference provider at the account level.</p>\n      "
    },
    "GetConferencePreference": {
      "name": "GetConferencePreference",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "GetConferencePreferenceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Preference": {
            "type": "structure",
            "members": {
              "DefaultConferenceProviderArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the default conference provider.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the default conference provider.</p>\n      ",
                "shape_name": "Arn"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The conference preference.</simpara>\n      ",
            "documentation": "\n         <p>The conference preference.</p>\n      ",
            "shape_name": "ConferencePreference"
          }
        },
        "shape_name": "GetConferencePreferenceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Retrieves the existing conference preferences.</p>\n      "
    },
    "RegisterGateway": {
      "name": "RegisterGateway",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "GatewayName",
            "documentation": null,
            "min_length": 1,
            "max_length": 253
          },
          "GatewayDescription": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "GatewayDescription",
            "documentation": null,
            "min_length": 0,
            "max_length": 200
          },
          "GatewayVersion": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayVersion",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
            "required": true,
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "RegisterGatewayRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "GatewayArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SystemDownLink": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "shape_name": "GatewayChannelEndpoint",
                "documentation": null
              },
              "Protocol": {
                "type": "string",
                "enum": [
                  "SQS"
                ],
                "shape_name": "GatewayChannelProtocol",
                "documentation": null
              }
            },
            "shape_name": "GatewayChannel",
            "documentation": null
          },
          "DataDownLink": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "shape_name": "GatewayChannelEndpoint",
                "documentation": null
              },
              "Protocol": {
                "type": "string",
                "enum": [
                  "SQS"
                ],
                "shape_name": "GatewayChannelProtocol",
                "documentation": null
              }
            },
            "shape_name": "GatewayChannel",
            "documentation": null
          }
        },
        "shape_name": "RegisterGatewayResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "UpdateGateway": {
      "name": "UpdateGateway",
      "input": {
        "type": "structure",
        "members": {
          "GatewayArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "GatewayName",
            "documentation": null,
            "min_length": 1,
            "max_length": 253
          },
          "GatewayDescription": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "GatewayDescription",
            "documentation": null,
            "min_length": 0,
            "max_length": 200
          },
          "GatewayVersion": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayVersion",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "UpdateGatewayRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateGatewayResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetGateway": {
      "name": "GetGateway",
      "input": {
        "type": "structure",
        "members": {
          "GatewayArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetGatewayRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Gateway": {
            "type": "structure",
            "members": {
              "Arn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "GatewayName",
                "documentation": null,
                "min_length": 1,
                "max_length": 253
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "GatewayDescription",
                "documentation": null,
                "min_length": 0,
                "max_length": 200
              },
              "GatewayGroupArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "Version": {
                "type": "string",
                "shape_name": "GatewayVersion",
                "documentation": null,
                "min_length": 1,
                "max_length": 50
              },
              "SystemDownLink": {
                "type": "structure",
                "members": {
                  "Endpoint": {
                    "type": "string",
                    "shape_name": "GatewayChannelEndpoint",
                    "documentation": null
                  },
                  "Protocol": {
                    "type": "string",
                    "enum": [
                      "SQS"
                    ],
                    "shape_name": "GatewayChannelProtocol",
                    "documentation": null
                  }
                },
                "shape_name": "GatewayChannel",
                "documentation": null
              },
              "DataDownLink": {
                "type": "structure",
                "members": {
                  "Endpoint": {
                    "type": "string",
                    "shape_name": "GatewayChannelEndpoint",
                    "documentation": null
                  },
                  "Protocol": {
                    "type": "string",
                    "enum": [
                      "SQS"
                    ],
                    "shape_name": "GatewayChannelProtocol",
                    "documentation": null
                  }
                },
                "shape_name": "GatewayChannel",
                "documentation": null
              }
            },
            "shape_name": "Gateway",
            "documentation": null
          }
        },
        "shape_name": "GetGatewayResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListGateways": {
      "name": "ListGateways",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListGatewaysRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Gateways": {
            "type": "list",
            "shape_name": "GatewaySummaries",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Arn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "GatewayName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 253
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "GatewayDescription",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 200
                },
                "GatewayGroupArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "Version": {
                  "type": "string",
                  "shape_name": "GatewayVersion",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 50
                }
              },
              "shape_name": "GatewaySummary",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListGatewaysResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DeleteGateway": {
      "name": "DeleteGateway",
      "input": {
        "type": "structure",
        "members": {
          "GatewayArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeleteGatewayRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteGatewayResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "CreateGatewayContext": {
      "name": "CreateGatewayContext",
      "input": {
        "type": "structure",
        "members": {
          "UserId": {
            "type": "string",
            "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
            "required": true,
            "shape_name": "UserId",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "RequestId": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayRequestId",
            "documentation": null,
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "CreateGatewayContextRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "GatewayContext": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/=]{1,4096}",
            "sensitive": true,
            "shape_name": "GatewayContext",
            "documentation": null
          },
          "DataUpLink": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "shape_name": "GatewayChannelEndpoint",
                "documentation": null
              },
              "Protocol": {
                "type": "string",
                "enum": [
                  "SQS"
                ],
                "shape_name": "GatewayChannelProtocol",
                "documentation": null
              }
            },
            "shape_name": "GatewayChannel",
            "documentation": null
          },
          "DataDownLink": {
            "type": "structure",
            "members": {
              "Endpoint": {
                "type": "string",
                "shape_name": "GatewayChannelEndpoint",
                "documentation": null
              },
              "Protocol": {
                "type": "string",
                "enum": [
                  "SQS"
                ],
                "shape_name": "GatewayChannelProtocol",
                "documentation": null
              }
            },
            "shape_name": "GatewayChannel",
            "documentation": null
          }
        },
        "shape_name": "CreateGatewayContextResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "SendGatewayResult": {
      "name": "SendGatewayResult",
      "input": {
        "type": "structure",
        "members": {
          "GatewayArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayContext": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/=]{1,4096}",
            "sensitive": true,
            "required": true,
            "shape_name": "GatewayContext",
            "documentation": null
          },
          "GatewayVersion": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayVersion",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "RequestId": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayRequestId",
            "documentation": null,
            "min_length": 1,
            "max_length": 64
          },
          "Error": {
            "type": "structure",
            "members": {
              "Code": {
                "type": "string",
                "required": true,
                "shape_name": "GatewayErrorCode",
                "documentation": null,
                "min_length": 1,
                "max_length": 64
              },
              "Message": {
                "type": "string",
                "sensitive": true,
                "required": true,
                "shape_name": "GatewayErrorMessage",
                "documentation": null,
                "min_length": 1,
                "max_length": 1024
              }
            },
            "shape_name": "GatewayError",
            "documentation": null
          },
          "ResultVersion": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayResultVersion",
            "documentation": null,
            "min_length": 1,
            "max_length": 10
          },
          "Results": {
            "type": "list",
            "required": true,
            "shape_name": "GatewayResults",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Data": {
                  "type": "string",
                  "sensitive": true,
                  "shape_name": "GatewayData",
                  "documentation": null,
                  "max_length": 4096
                },
                "Error": {
                  "type": "structure",
                  "members": {
                    "Code": {
                      "type": "string",
                      "required": true,
                      "shape_name": "GatewayErrorCode",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 64
                    },
                    "Message": {
                      "type": "string",
                      "sensitive": true,
                      "required": true,
                      "shape_name": "GatewayErrorMessage",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 1024
                    }
                  },
                  "shape_name": "GatewayError",
                  "documentation": null
                }
              },
              "shape_name": "GatewayResult",
              "documentation": null
            }
          }
        },
        "shape_name": "SendGatewayResultRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "SendGatewayResultResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateGatewayGroup": {
      "name": "CreateGatewayGroup",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayGroupName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "GatewayGroupName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "GatewayGroupDescription": {
            "type": "string",
            "shape_name": "GatewayGroupDescription",
            "documentation": null,
            "min_length": 0,
            "max_length": 200
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
            "required": true,
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateGatewayGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "CreateGatewayGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": null
    },
    "UpdateGatewayGroup": {
      "name": "UpdateGatewayGroup",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "GatewayGroupName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "GatewayGroupName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "GatewayGroupDescription": {
            "type": "string",
            "required": true,
            "shape_name": "GatewayGroupDescription",
            "documentation": null,
            "min_length": 0,
            "max_length": 200
          }
        },
        "shape_name": "UpdateGatewayGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateGatewayGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetGatewayGroup": {
      "name": "GetGatewayGroup",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetGatewayGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "GatewayGroup": {
            "type": "structure",
            "members": {
              "Arn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "GatewayGroupName",
                "documentation": null,
                "min_length": 1,
                "max_length": 100
              },
              "Description": {
                "type": "string",
                "shape_name": "GatewayGroupDescription",
                "documentation": null,
                "min_length": 0,
                "max_length": 200
              },
              "DataDownLink": {
                "type": "structure",
                "members": {
                  "Endpoint": {
                    "type": "string",
                    "shape_name": "GatewayChannelEndpoint",
                    "documentation": null
                  },
                  "Protocol": {
                    "type": "string",
                    "enum": [
                      "SQS"
                    ],
                    "shape_name": "GatewayChannelProtocol",
                    "documentation": null
                  }
                },
                "shape_name": "GatewayChannel",
                "documentation": null
              }
            },
            "shape_name": "GatewayGroup",
            "documentation": null
          }
        },
        "shape_name": "GetGatewayGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListGatewayGroups": {
      "name": "ListGatewayGroups",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListGatewayGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "GatewayGroups": {
            "type": "list",
            "shape_name": "GatewayGroupSummaries",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Arn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "GatewayGroupName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "Description": {
                  "type": "string",
                  "shape_name": "GatewayGroupDescription",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 200
                },
                "DataDownLink": {
                  "type": "structure",
                  "members": {
                    "Endpoint": {
                      "type": "string",
                      "shape_name": "GatewayChannelEndpoint",
                      "documentation": null
                    },
                    "Protocol": {
                      "type": "string",
                      "enum": [
                        "SQS"
                      ],
                      "shape_name": "GatewayChannelProtocol",
                      "documentation": null
                    }
                  },
                  "shape_name": "GatewayChannel",
                  "documentation": null
                }
              },
              "shape_name": "GatewayGroupSummary",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListGatewayGroupsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "DeleteGatewayGroup": {
      "name": "DeleteGatewayGroup",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeleteGatewayGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteGatewayGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ResourceAssociatedException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "AssociateGatewayGroupWithRoom": {
      "name": "AssociateGatewayGroupWithRoom",
      "input": {
        "type": "structure",
        "members": {
          "GatewayGroupArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "AssociateGatewayGroupWithRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateGatewayGroupWithRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DisassociateGatewayGroupFromRoom": {
      "name": "DisassociateGatewayGroupFromRoom",
      "input": {
        "type": "structure",
        "members": {
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DisassociateGatewayGroupFromRoomRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateGatewayGroupFromRoomResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "CreateConferenceAppliance": {
      "name": "CreateConferenceAppliance",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "shape_name": "SkillId",
            "documentation": null
          },
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceName",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "SpokenName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceSpokenName",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "Make": {
            "type": "string",
            "enum": [
              "CISCO"
            ],
            "required": true,
            "shape_name": "ConferenceApplianceMake",
            "documentation": null
          },
          "Model": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceModel",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "ConferenceApplianceDescription",
            "documentation": null,
            "min_length": 1,
            "max_length": 256
          },
          "Url": {
            "type": "string",
            "required": true,
            "shape_name": "ConferenceApplianceUrl",
            "documentation": null,
            "min_length": 1,
            "max_length": 256
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateConferenceApplianceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceApplianceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "CreateConferenceApplianceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "GetConferenceAppliance": {
      "name": "GetConferenceAppliance",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceApplianceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetConferenceApplianceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceAppliance": {
            "type": "structure",
            "members": {
              "Arn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "SkillId": {
                "type": "string",
                "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                "shape_name": "SkillId",
                "documentation": null
              },
              "RoomArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "ConferenceApplianceName",
                "documentation": null,
                "min_length": 1,
                "max_length": 50
              },
              "SpokenName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "ConferenceApplianceSpokenName",
                "documentation": null,
                "min_length": 1,
                "max_length": 128
              },
              "Make": {
                "type": "string",
                "enum": [
                  "CISCO"
                ],
                "shape_name": "ConferenceApplianceMake",
                "documentation": null
              },
              "Model": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "ConferenceApplianceModel",
                "documentation": null,
                "min_length": 1,
                "max_length": 50
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "shape_name": "ConferenceApplianceDescription",
                "documentation": null,
                "min_length": 1,
                "max_length": 256
              },
              "Url": {
                "type": "string",
                "shape_name": "ConferenceApplianceUrl",
                "documentation": null,
                "min_length": 1,
                "max_length": 256
              }
            },
            "shape_name": "ConferenceAppliance",
            "documentation": null
          }
        },
        "shape_name": "GetConferenceApplianceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "DeleteConferenceAppliance": {
      "name": "DeleteConferenceAppliance",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceApplianceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "DeleteConferenceApplianceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteConferenceApplianceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListConferenceAppliances": {
      "name": "ListConferenceAppliances",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "shape_name": "SkillId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "|arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "BlankOrArn",
            "documentation": null
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListConferenceAppliancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "ConferenceAppliances": {
            "type": "list",
            "shape_name": "ConferenceAppliances",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Arn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 50
                },
                "SpokenName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceSpokenName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "Make": {
                  "type": "string",
                  "enum": [
                    "CISCO"
                  ],
                  "shape_name": "ConferenceApplianceMake",
                  "documentation": null
                },
                "Model": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceModel",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 50
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceDescription",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 256
                },
                "Url": {
                  "type": "string",
                  "shape_name": "ConferenceApplianceUrl",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "shape_name": "ConferenceAppliance",
              "documentation": null
            }
          }
        },
        "shape_name": "ListConferenceAppliancesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "UpdateConferenceAppliance": {
      "name": "UpdateConferenceAppliance",
      "input": {
        "type": "structure",
        "members": {
          "ConferenceApplianceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceName",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "SpokenName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceSpokenName",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "Make": {
            "type": "string",
            "enum": [
              "CISCO"
            ],
            "required": true,
            "shape_name": "ConferenceApplianceMake",
            "documentation": null
          },
          "Model": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "required": true,
            "shape_name": "ConferenceApplianceModel",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "ConferenceApplianceDescription",
            "documentation": null,
            "min_length": 1,
            "max_length": 256
          },
          "Url": {
            "type": "string",
            "required": true,
            "shape_name": "ConferenceApplianceUrl",
            "documentation": null,
            "min_length": 1,
            "max_length": 256
          },
          "SkillId": {
            "type": "string",
            "pattern": "|amzn1\\.(ask\\.skill|echo-sdk-ams\\.app)\\.[-0-9a-f]{1,200}",
            "required": true,
            "shape_name": "BlankOrSkillId",
            "documentation": null
          },
          "RoomArn": {
            "type": "string",
            "pattern": "|arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "BlankOrArn",
            "documentation": null
          }
        },
        "shape_name": "UpdateConferenceApplianceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateConferenceApplianceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListConferenceAppliancesForSkill": {
      "name": "ListConferenceAppliancesForSkill",
      "input": {
        "type": "structure",
        "members": {
          "UserId": {
            "type": "string",
            "pattern": "amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}",
            "required": true,
            "shape_name": "UserId",
            "documentation": null
          },
          "SkillId": {
            "type": "string",
            "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
            "required": true,
            "shape_name": "SkillId",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListConferenceAppliancesForSkillRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ConferenceAppliances": {
            "type": "list",
            "shape_name": "ConferenceAppliancesForSkill",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Arn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "RoomArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 50
                },
                "SpokenName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceSpokenName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "Make": {
                  "type": "string",
                  "enum": [
                    "CISCO"
                  ],
                  "shape_name": "ConferenceApplianceMake",
                  "documentation": null
                },
                "Model": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceModel",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 50
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "ConferenceApplianceDescription",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 256
                },
                "Url": {
                  "type": "string",
                  "shape_name": "ConferenceApplianceUrl",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "shape_name": "ConferenceApplianceForSkill",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListConferenceAppliancesForSkillResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "ListUsers": {
      "name": "ListUsers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "UserList": {
            "type": "list",
            "shape_name": "UserList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "UserId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9@_+.-]*",
                  "internalonly": true,
                  "shape_name": "user_UserId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "UserArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "FirstName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "shape_name": "user_FirstName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 30
                },
                "LastName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "shape_name": "user_LastName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 30
                },
                "Email": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "EnrollmentStatus": {
                  "type": "string",
                  "enum": [
                    "INITIALIZED",
                    "PENDING",
                    "REGISTERED",
                    "DISASSOCIATING",
                    "DEREGISTERING"
                  ],
                  "shape_name": "EnrollmentStatus",
                  "documentation": null
                },
                "EnrollmentId": {
                  "type": "string",
                  "shape_name": "EnrollmentId",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 128
                }
              },
              "shape_name": "User",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListUsersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "CreateUser": {
      "name": "CreateUser",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "zonbookDocumentation": "\n         <simpara>The ARN for the user.</simpara>\n      ",
            "documentation": "\n         <p>The ARN for the user.</p>\n      ",
            "required": true,
            "shape_name": "user_UserId",
            "min_length": 1,
            "max_length": 128
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "FirstName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "zonbookDocumentation": "\n         <simpara>The first name for the user.</simpara>\n      ",
            "documentation": "\n         <p>The first name for the user.</p>\n      ",
            "shape_name": "user_FirstName",
            "min_length": 0,
            "max_length": 30
          },
          "LastName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "zonbookDocumentation": "\n         <simpara>The last name for the user.</simpara>\n      ",
            "documentation": "\n         <p>The last name for the user.</p>\n      ",
            "shape_name": "user_LastName",
            "min_length": 0,
            "max_length": 30
          },
          "Email": {
            "type": "string",
            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
            "zonbookDocumentation": "\n         <simpara>The email address for the user.</simpara>\n      ",
            "documentation": "\n         <p>The email address for the user.</p>\n      ",
            "shape_name": "Email",
            "min_length": 1,
            "max_length": 128
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>A unique, user-specified identifier for this request that ensures idempotency.\n      </p>\n      ",
            "zonbookDocumentation": "\n         <simpara>A unique, user-specified identifier for this request that ensures idempotency.\n      </simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The tags for the user.</simpara>\n      ",
            "documentation": "\n         <p>The tags for the user.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The key of a tag. Tag keys are case-sensitive. </simpara>\n      ",
                  "documentation": "\n         <p>The key of a tag. Tag keys are case-sensitive. </p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 128
                },
                "Value": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The value of a tag. Tag values are case-sensitive and can be null.</simpara>\n      ",
                  "documentation": "\n         <p>The value of a tag. Tag values are case-sensitive and can be null.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 0,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <simpara>A key-value pair that can be associated with a resource. </simpara>\n      ",
              "documentation": "\n         <p>A key-value pair that can be associated with a resource. </p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created user in the response.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created user in the response.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ClientRequestToken": {
              "type": "string",
              "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
              "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
              "shape_name": "ClientRequestToken",
              "min_length": 10,
              "max_length": 150
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The resource in the request is already in use.</p>\n      ",
          "shape_name": "ResourceInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Creates a user.</p>\n      "
    },
    "SendInvitation": {
      "name": "SendInvitation",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the user to whom to send an invitation. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the user to whom to send an invitation. Required.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "SendInvitationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "SendInvitationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The attempt to update a user is invalid due to the user's current status.</simpara>\n      ",
          "documentation": "\n         <p>The attempt to update a user is invalid due to the user's current status.</p>\n      ",
          "shape_name": "InvalidUserStatusException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Sends an enrollment invitation email with a URL to a user. The URL is valid for 72\n         hours or until you call this operation again, whichever comes first. </p>\n      "
    },
    "InternalDeleteUser": {
      "name": "InternalDeleteUser",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "EnrollmentId": {
            "type": "string",
            "required": true,
            "shape_name": "EnrollmentId",
            "documentation": null,
            "min_length": 0,
            "max_length": 128
          }
        },
        "shape_name": "InternalDeleteUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "InternalDeleteUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ClientRequestToken": {
              "type": "string",
              "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
              "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
              "shape_name": "ClientRequestToken",
              "min_length": 10,
              "max_length": 150
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The resource in the request is already in use.</p>\n      ",
          "shape_name": "ResourceInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "RevokeInvitation": {
      "name": "RevokeInvitation",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the user for whom to revoke an enrollment invitation. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the user for whom to revoke an enrollment invitation. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "EnrollmentId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the enrollment invitation to revoke. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the enrollment invitation to revoke. Required.</p>\n      ",
            "shape_name": "EnrollmentId",
            "min_length": 0,
            "max_length": 128
          }
        },
        "shape_name": "RevokeInvitationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RevokeInvitationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Revokes an invitation and invalidates the enrollment URL.</p>\n      "
    },
    "DeleteUser": {
      "name": "DeleteUser",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the user to delete in the organization. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the user to delete in the organization. Required.</p>\n      ",
            "shape_name": "Arn"
          },
          "EnrollmentId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the user's enrollment in the organization. Required.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the user's enrollment in the organization. Required.</p>\n      ",
            "required": true,
            "shape_name": "EnrollmentId",
            "min_length": 0,
            "max_length": 128
          }
        },
        "shape_name": "DeleteUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes a specified user by user ARN and enrollment ARN.</p>\n      "
    },
    "GetUser": {
      "name": "GetUser",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "User": {
            "type": "structure",
            "members": {
              "UserId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9@_+.-]*",
                "internalonly": true,
                "shape_name": "user_UserId",
                "documentation": null,
                "min_length": 1,
                "max_length": 128
              },
              "UserArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "shape_name": "Arn",
                "documentation": null
              },
              "FirstName": {
                "type": "string",
                "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                "shape_name": "user_FirstName",
                "documentation": null,
                "min_length": 0,
                "max_length": 30
              },
              "LastName": {
                "type": "string",
                "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                "shape_name": "user_LastName",
                "documentation": null,
                "min_length": 0,
                "max_length": 30
              },
              "Email": {
                "type": "string",
                "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                "shape_name": "Email",
                "documentation": null,
                "min_length": 1,
                "max_length": 128
              },
              "EnrollmentStatus": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "PENDING",
                  "REGISTERED",
                  "DISASSOCIATING",
                  "DEREGISTERING"
                ],
                "shape_name": "EnrollmentStatus",
                "documentation": null
              },
              "EnrollmentId": {
                "type": "string",
                "shape_name": "EnrollmentId",
                "documentation": null,
                "min_length": 0,
                "max_length": 128
              }
            },
            "shape_name": "User",
            "documentation": null
          }
        },
        "shape_name": "GetUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "CreateEnrollmentToken": {
      "name": "CreateEnrollmentToken",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "internalonly": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "UserArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateEnrollmentTokenRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "EnrollmentId": {
            "type": "string",
            "shape_name": "EnrollmentId",
            "documentation": null,
            "min_length": 0,
            "max_length": 128
          }
        },
        "shape_name": "CreateEnrollmentTokenResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ClientRequestToken": {
              "type": "string",
              "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
              "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
              "shape_name": "ClientRequestToken",
              "min_length": 10,
              "max_length": 150
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The resource in the request is already in use.</p>\n      ",
          "shape_name": "ResourceInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The attempt to update a user is invalid due to the user's current status.</simpara>\n      ",
          "documentation": "\n         <p>The attempt to update a user is invalid due to the user's current status.</p>\n      ",
          "shape_name": "InvalidUserStatusException"
        }
      ],
      "documentation": null
    },
    "GetEnrollmentToken": {
      "name": "GetEnrollmentToken",
      "input": {
        "type": "structure",
        "members": {
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "required": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "required": true,
            "shape_name": "OrganizationId",
            "documentation": null
          }
        },
        "shape_name": "GetEnrollmentTokenRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "EnrollmentToken": {
            "type": "string",
            "shape_name": "EnrollmentToken",
            "documentation": null,
            "min_length": 0,
            "max_length": 2048
          }
        },
        "shape_name": "GetEnrollmentTokenResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "ListCalendarUsers": {
      "name": "ListCalendarUsers",
      "input": {
        "type": "structure",
        "members": {
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          }
        },
        "shape_name": "ListCalendarUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CalendarUsers": {
            "type": "list",
            "shape_name": "CalendarUsersList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Email": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "CalendarProviderName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "CalendarProviderName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 50
                },
                "RestrictionRequired": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                }
              },
              "shape_name": "CalendarUser",
              "documentation": null
            }
          },
          "CalendarUserErrors": {
            "type": "list",
            "shape_name": "CalendarUserErrorsList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Email": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "CalendarError": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "CalendarError",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 50
                }
              },
              "shape_name": "CalendarUserError",
              "documentation": null
            }
          }
        },
        "shape_name": "ListCalendarUsersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "GetAdminEnrollmentPrefs": {
      "name": "GetAdminEnrollmentPrefs",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "GetAdminEnrollmentPrefsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "OrganizationName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "shape_name": "OrganizationName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "ContactEmail": {
            "type": "string",
            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
            "shape_name": "Email",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "SkillList": {
            "type": "list",
            "shape_name": "SkillList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          }
        },
        "shape_name": "GetAdminEnrollmentPrefsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "GetCalendarProviderCredential": {
      "name": "GetCalendarProviderCredential",
      "input": {
        "type": "structure",
        "members": {
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "Email": {
            "type": "string",
            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
            "required": true,
            "shape_name": "Email",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "GetCalendarProviderCredentialRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CalendarProviderCredential": {
            "type": "structure",
            "members": {
              "EndpointUrl": {
                "type": "string",
                "pattern": "^https://.+(?i)/ews/exchange.asmx$",
                "shape_name": "EndpointUrl",
                "documentation": null,
                "min_length": 10,
                "max_length": 1024
              },
              "EnableImpersonation": {
                "type": "boolean",
                "shape_name": "Boolean",
                "documentation": null
              },
              "SafeDoorCredential": {
                "type": "string",
                "pattern": ".*\\S+.*",
                "shape_name": "SafeDoorCredential",
                "documentation": null,
                "max_length": 16384
              }
            },
            "shape_name": "CalendarProviderCredential",
            "documentation": null
          }
        },
        "shape_name": "GetCalendarProviderCredentialResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "UpdateAdminEnrollmentPrefs": {
      "name": "UpdateAdminEnrollmentPrefs",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          },
          "OrganizationName": {
            "type": "string",
            "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
            "required": true,
            "shape_name": "OrganizationName",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "ContactEmail": {
            "type": "string",
            "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
            "shape_name": "Email",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          },
          "PrivateSkills": {
            "type": "list",
            "shape_name": "ShortSkillList",
            "documentation": null,
            "min_length": 0,
            "max_length": 3,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          },
          "PublicSkills": {
            "type": "list",
            "shape_name": "ShortSkillList",
            "documentation": null,
            "min_length": 0,
            "max_length": 3,
            "members": {
              "type": "structure",
              "members": {
                "SkillId": {
                  "type": "string",
                  "pattern": "(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})",
                  "shape_name": "SkillId",
                  "documentation": null
                },
                "SkillName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "SkillName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 100
                },
                "ShortDescription": {
                  "type": "string",
                  "shape_name": "ShortDescription",
                  "documentation": null
                },
                "IconUrl": {
                  "type": "string",
                  "shape_name": "IconUrl",
                  "documentation": null
                },
                "SampleUtterances": {
                  "type": "list",
                  "shape_name": "SampleUtterances",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "Utterance",
                    "documentation": null
                  }
                },
                "SkillDetails": {
                  "type": "structure",
                  "members": {
                    "ProductDescription": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The description of the product.</simpara>\n      ",
                      "documentation": "\n         <p>The description of the product.</p>\n      ",
                      "shape_name": "ProductDescription"
                    },
                    "InvocationPhrase": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The phrase used to trigger the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The phrase used to trigger the skill.</p>\n      ",
                      "shape_name": "InvocationPhrase"
                    },
                    "ReleaseDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The date when the skill was released.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the skill was released.</p>\n      ",
                      "shape_name": "ReleaseDate"
                    },
                    "EndUserLicenseAgreement": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The URL of the end user license agreement.</simpara>\n      ",
                      "documentation": "\n         <p>The URL of the end user license agreement.</p>\n      ",
                      "shape_name": "EndUserLicenseAgreement"
                    },
                    "GenericKeywords": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The generic keywords associated with the skill that can be used to find a skill.</simpara>\n      ",
                      "documentation": "\n         <p>The generic keywords associated with the skill that can be used to find a skill.</p>\n      ",
                      "shape_name": "GenericKeywords",
                      "members": {
                        "type": "string",
                        "shape_name": "GenericKeyword",
                        "documentation": null
                      }
                    },
                    "BulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The details about what the skill supports organized as bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The details about what the skill supports organized as bullet points.</p>\n      ",
                      "shape_name": "BulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "NewInThisVersionBulletPoints": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The updates added in bullet points.</simpara>\n      ",
                      "documentation": "\n         <p>The updates added in bullet points.</p>\n      ",
                      "shape_name": "NewInThisVersionBulletPoints",
                      "members": {
                        "type": "string",
                        "shape_name": "BulletPoint",
                        "documentation": null
                      }
                    },
                    "SkillTypes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The types of skills.</para>\n      ",
                      "documentation": "\n         <p>The types of skills.</p>\n      ",
                      "shape_name": "SkillTypes",
                      "members": {
                        "type": "string",
                        "shape_name": "SkillStoreType",
                        "documentation": null
                      }
                    },
                    "Reviews": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>The list of reviews for the skill, including Key and Value pair.</simpara>\n      ",
                      "documentation": "\n         <p>The list of reviews for the skill, including Key and Value pair.</p>\n      ",
                      "shape_name": "Reviews",
                      "keys": {
                        "type": "string",
                        "shape_name": "ReviewKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "ReviewValue",
                        "documentation": null
                      }
                    },
                    "DeveloperInfo": {
                      "type": "structure",
                      "members": {
                        "DeveloperName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the developer.</p>\n      ",
                          "shape_name": "DeveloperName"
                        },
                        "PrivacyPolicy": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the privacy policy.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the privacy policy.</p>\n      ",
                          "shape_name": "PrivacyPolicy"
                        },
                        "Email": {
                          "type": "string",
                          "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                          "zonbookDocumentation": "\n         <simpara>The email of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The email of the developer.</p>\n      ",
                          "shape_name": "Email",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "Url": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The website of the developer.</simpara>\n      ",
                          "documentation": "\n         <p>The website of the developer.</p>\n      ",
                          "shape_name": "Url"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The details about the developer that published the skill.</simpara>\n      ",
                      "documentation": "\n         <p>The details about the developer that published the skill.</p>\n      ",
                      "shape_name": "DeveloperInfo"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Granular information about the skill.</simpara>\n      ",
                  "documentation": "\n         <p>Granular information about the skill.</p>\n      ",
                  "shape_name": "SkillDetails"
                },
                "SupportsLinking": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "AccountLinked": {
                  "type": "boolean",
                  "shape_name": "boolean",
                  "documentation": null
                },
                "RoomAccountLinked": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "Scope": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "Scope",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 100
                },
                "Stage": {
                  "type": "string",
                  "enum": [
                    "LIVE",
                    "DEVELOPMENT"
                  ],
                  "shape_name": "Stage",
                  "documentation": null
                },
                "AcceptStatus": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "PENDING"
                  ],
                  "shape_name": "AcceptStatus",
                  "documentation": null
                },
                "IsPrivilegedSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "IsPrivateSkill": {
                  "type": "boolean",
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "HasPermissionScopes": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "ChildDirected": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "UsesPersonalInfo": {
                  "type": "boolean",
                  "internalonly": true,
                  "shape_name": "Boolean",
                  "documentation": null
                },
                "MaturityRating": {
                  "type": "string",
                  "internalonly": true,
                  "shape_name": "MaturityRating",
                  "documentation": null
                }
              },
              "shape_name": "Skill",
              "documentation": null
            }
          }
        },
        "shape_name": "UpdateAdminEnrollmentPrefsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateAdminEnrollmentPrefsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ClientRequestToken": {
              "type": "string",
              "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
              "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
              "shape_name": "ClientRequestToken",
              "min_length": 10,
              "max_length": 150
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The resource in the request is already in use.</p>\n      ",
          "shape_name": "ResourceInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "AssociateCustomerWithUser": {
      "name": "AssociateCustomerWithUser",
      "input": {
        "type": "structure",
        "members": {
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "EnrollmentToken": {
            "type": "string",
            "required": true,
            "shape_name": "EnrollmentToken",
            "documentation": null,
            "min_length": 0,
            "max_length": 2048
          },
          "EnrollmentId": {
            "type": "string",
            "required": true,
            "shape_name": "EnrollmentId",
            "documentation": null,
            "min_length": 0,
            "max_length": 128
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "required": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "AssociateCustomerWithUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateCustomerWithUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The attempt to update a user is invalid due to the user's current status.</simpara>\n      ",
          "documentation": "\n         <p>The attempt to update a user is invalid due to the user's current status.</p>\n      ",
          "shape_name": "InvalidUserStatusException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "DisassociateCustomerFromUser": {
      "name": "DisassociateCustomerFromUser",
      "input": {
        "type": "structure",
        "members": {
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "AwsAccountOrganizationId": {
            "type": "string",
            "required": true,
            "shape_name": "AwsAccountOrganizationId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "EnrollmentId": {
            "type": "string",
            "required": true,
            "shape_name": "EnrollmentId",
            "documentation": null,
            "min_length": 0,
            "max_length": 128
          },
          "UserId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9@_+.-]*",
            "required": true,
            "shape_name": "user_UserId",
            "documentation": null,
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DisassociateCustomerFromUserRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateCustomerFromUserResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The attempt to update a user is invalid due to the user's current status.</simpara>\n      ",
          "documentation": "\n         <p>The attempt to update a user is invalid due to the user's current status.</p>\n      ",
          "shape_name": "InvalidUserStatusException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": null
    },
    "ListUsersForCustomer": {
      "name": "ListUsersForCustomer",
      "input": {
        "type": "structure",
        "members": {
          "CustomerId": {
            "type": "string",
            "pattern": "^[0-9A-Z]*$",
            "required": true,
            "shape_name": "CustomerId",
            "documentation": null,
            "min_length": 10,
            "max_length": 64
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListUsersForCustomerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "UserList": {
            "type": "list",
            "shape_name": "EnrolledUserList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "FirstName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "shape_name": "user_FirstName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 30
                },
                "LastName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "shape_name": "user_LastName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 30
                },
                "UserId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9@_+.-]*",
                  "shape_name": "user_UserId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "OrganizationEmail": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "shape_name": "Email",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "EnrollmentId": {
                  "type": "string",
                  "shape_name": "EnrollmentId",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 128
                },
                "Organization": {
                  "type": "structure",
                  "members": {
                    "OrganizationName": {
                      "type": "string",
                      "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                      "shape_name": "OrganizationName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 100
                    },
                    "AwsAccountOrganizationId": {
                      "type": "string",
                      "shape_name": "AwsAccountOrganizationId",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 100
                    }
                  },
                  "shape_name": "EnrolledOrganization",
                  "documentation": null
                }
              },
              "shape_name": "EnrolledUser",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListUsersForCustomerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "ClientRequestToken": {
              "type": "string",
              "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
              "documentation": "\n        User specified token that is used to support idempotency during Create Resource\n    ",
              "shape_name": "ClientRequestToken",
              "min_length": 10,
              "max_length": 150
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The resource in the request is already in use.</p>\n      ",
          "shape_name": "ResourceInUseException"
        }
      ],
      "documentation": null
    },
    "SearchUsers": {
      "name": "SearchUsers",
      "input": {
        "type": "structure",
        "members": {
          "OrganizationId": {
            "type": "string",
            "pattern": "[0-9a-f]{32}",
            "internalonly": true,
            "shape_name": "OrganizationId",
            "documentation": null
          },
          "OrganizationArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "internalonly": true,
            "shape_name": "Arn",
            "documentation": null
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>.\n         Required.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. Required.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved. Required.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use for listing a specific set of users. Required. Supported filter\n         keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</simpara>\n      ",
            "documentation": "\n         <p>The filters to use for listing a specific set of users. Required. Supported filter\n         keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the filtered set of users. Required. Supported sort\n         keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the filtered set of users. Required. Supported sort\n         keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          }
        },
        "shape_name": "SearchUsersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Users": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The users that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The users that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "UserDataList",
            "members": {
              "type": "structure",
              "members": {
                "UserId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9@_+.-]*",
                  "internalonly": true,
                  "shape_name": "user_UserId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "UserArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of a user.</p>\n      ",
                  "shape_name": "Arn"
                },
                "FirstName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "zonbookDocumentation": "\n         <simpara>The first name of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The first name of a user.</p>\n      ",
                  "shape_name": "user_FirstName",
                  "min_length": 0,
                  "max_length": 30
                },
                "LastName": {
                  "type": "string",
                  "pattern": "([A-Za-z\\-' 0-9._]|\\p{IsLetter})*",
                  "zonbookDocumentation": "\n         <simpara>The last name of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The last name of a user.</p>\n      ",
                  "shape_name": "user_LastName",
                  "min_length": 0,
                  "max_length": 30
                },
                "Email": {
                  "type": "string",
                  "pattern": "([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})",
                  "zonbookDocumentation": "\n         <simpara>The email of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The email of a user.</p>\n      ",
                  "shape_name": "Email",
                  "min_length": 1,
                  "max_length": 128
                },
                "EnrollmentStatus": {
                  "type": "string",
                  "enum": [
                    "INITIALIZED",
                    "PENDING",
                    "REGISTERED",
                    "DISASSOCIATING",
                    "DEREGISTERING"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The enrollment status of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The enrollment status of a user.</p>\n      ",
                  "shape_name": "EnrollmentStatus"
                },
                "EnrollmentId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The enrollment ARN of a user.</simpara>\n      ",
                  "documentation": "\n         <p>The enrollment ARN of a user.</p>\n      ",
                  "shape_name": "EnrollmentId",
                  "min_length": 0,
                  "max_length": 128
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information related to a user.</simpara>\n      ",
              "documentation": "\n         <p>Information related to a user.</p>\n      ",
              "shape_name": "UserData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of users returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of users returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchUsersResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches users and lists the ones that meet a set of filter and sort\n         criteria.</p>\n      "
    },
    "ListCustomerIdsForOrganization": {
      "name": "ListCustomerIdsForOrganization",
      "input": {
        "type": "structure",
        "members": {
          "AwsAccountOrganizationId": {
            "type": "string",
            "internalonly": true,
            "shape_name": "AwsAccountOrganizationId",
            "documentation": null,
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListCustomerIdsForOrganizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CustomerIdList": {
            "type": "list",
            "shape_name": "CustomerIdList",
            "documentation": null,
            "members": {
              "type": "string",
              "pattern": "^[0-9A-Z]*$",
              "shape_name": "CustomerId",
              "documentation": null,
              "min_length": 10,
              "max_length": 64
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListCustomerIdsForOrganizationResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    },
    "TagResource": {
      "name": "TagResource",
      "input": {
        "type": "structure",
        "members": {
          "Arn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the resource to which to add metadata tags. Required. </simpara>\n      ",
            "documentation": "\n         <p>The ARN of the resource to which to add metadata tags. Required. </p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The tags to be added to the specified resource. Do not provide system tags. Required.\n      </simpara>\n      ",
            "documentation": "\n         <p>The tags to be added to the specified resource. Do not provide system tags. Required.\n      </p>\n      ",
            "required": true,
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The key of a tag. Tag keys are case-sensitive. </simpara>\n      ",
                  "documentation": "\n         <p>The key of a tag. Tag keys are case-sensitive. </p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 128
                },
                "Value": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The value of a tag. Tag values are case-sensitive and can be null.</simpara>\n      ",
                  "documentation": "\n         <p>The value of a tag. Tag values are case-sensitive and can be null.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 0,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <simpara>A key-value pair that can be associated with a resource. </simpara>\n      ",
              "documentation": "\n         <p>A key-value pair that can be associated with a resource. </p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "TagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "TagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Adds metadata tags to a specified resource.</p>\n      "
    },
    "UntagResource": {
      "name": "UntagResource",
      "input": {
        "type": "structure",
        "members": {
          "Arn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the resource from which to remove metadata tags. Required. </simpara>\n      ",
            "documentation": "\n         <p>The ARN of the resource from which to remove metadata tags. Required. </p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "TagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The tags to be removed from the specified resource. Do not provide system tags.\n         Required. </simpara>\n      ",
            "documentation": "\n         <p>The tags to be removed from the specified resource. Do not provide system tags.\n         Required. </p>\n      ",
            "required": true,
            "shape_name": "TagKeyList",
            "members": {
              "type": "string",
              "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
              "shape_name": "TagKey",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          }
        },
        "shape_name": "UntagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UntagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Removes metadata tags from a specified resource.</p>\n      "
    },
    "ListTags": {
      "name": "ListTags",
      "input": {
        "type": "structure",
        "members": {
          "Arn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the specified resource for which to list tags.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the specified resource for which to list tags.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>. </simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of\n         results from this action. If this parameter is specified, the response includes only\n         results beyond the token, up to the value specified by <code>MaxResults</code>. </p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than\n         the specified <code>MaxResults</code> value, a token is included in the response so that\n         the remaining results can be retrieved.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListTagsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The tags requested for the specified resource.</simpara>\n      ",
            "documentation": "\n         <p>The tags requested for the specified resource.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The key of a tag. Tag keys are case-sensitive. </simpara>\n      ",
                  "documentation": "\n         <p>The key of a tag. Tag keys are case-sensitive. </p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 128
                },
                "Value": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The value of a tag. Tag values are case-sensitive and can be null.</simpara>\n      ",
                  "documentation": "\n         <p>The value of a tag. Tag values are case-sensitive and can be null.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 0,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <simpara>A key-value pair that can be associated with a resource. </simpara>\n      ",
              "documentation": "\n         <p>A key-value pair that can be associated with a resource. </p>\n      ",
              "shape_name": "Tag"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListTagsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Lists all tags for the specified resource.</p>\n      "
    },
    "CreateContact": {
      "name": "CreateContact",
      "input": {
        "type": "structure",
        "members": {
          "DisplayName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name of the contact to display on the console.</simpara>\n      ",
            "documentation": "\n         <p>The name of the contact to display on the console.</p>\n      ",
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "FirstName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The first name of the contact that is used to call the contact on the device.</simpara>\n      ",
            "documentation": "\n         <p>The first name of the contact that is used to call the contact on the device.</p>\n      ",
            "required": true,
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "LastName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The last name of the contact that is used to call the contact on the device.</simpara>\n      ",
            "documentation": "\n         <p>The last name of the contact that is used to call the contact on the device.</p>\n      ",
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "PhoneNumber": {
            "type": "string",
            "pattern": "^\\+\\d{8,}$",
            "zonbookDocumentation": "\n         <simpara>The phone number of the contact in E.164 format.</simpara>\n      ",
            "documentation": "\n         <p>The phone number of the contact in E.164 format.</p>\n      ",
            "required": true,
            "shape_name": "E164PhoneNumber"
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>A unique, user-specified identifier for this request that ensures idempotency.</p>\n      ",
            "zonbookDocumentation": "\n         <simpara>A unique, user-specified identifier for this request that ensures idempotency.</simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateContactRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created address book.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created address book.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateContactResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a contact with the specified details.</p>\n      "
    },
    "GetContact": {
      "name": "GetContact",
      "input": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the contact for which to request details.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the contact for which to request details.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetContactRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Contact": {
            "type": "structure",
            "members": {
              "ContactArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the contact.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the contact.</p>\n      ",
                "shape_name": "Arn"
              },
              "DisplayName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of the contact to display on the console.</simpara>\n      ",
                "documentation": "\n         <p>The name of the contact to display on the console.</p>\n      ",
                "shape_name": "ContactName",
                "min_length": 1,
                "max_length": 100
              },
              "FirstName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The first name of the contact, used to call the contact on the device.</simpara>\n      ",
                "documentation": "\n         <p>The first name of the contact, used to call the contact on the device.</p>\n      ",
                "shape_name": "ContactName",
                "min_length": 1,
                "max_length": 100
              },
              "LastName": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The last name of the contact, used to call the contact on the device.</simpara>\n      ",
                "documentation": "\n         <p>The last name of the contact, used to call the contact on the device.</p>\n      ",
                "shape_name": "ContactName",
                "min_length": 1,
                "max_length": 100
              },
              "PhoneNumber": {
                "type": "string",
                "pattern": "^\\+\\d{8,}$",
                "zonbookDocumentation": "\n         <simpara>The phone number of the contact.</simpara>\n      ",
                "documentation": "\n         <p>The phone number of the contact.</p>\n      ",
                "shape_name": "E164PhoneNumber"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the requested contact.</simpara>\n      ",
            "documentation": "\n         <p>The details of the requested contact.</p>\n      ",
            "shape_name": "Contact"
          }
        },
        "shape_name": "GetContactResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets the contact details by the contact ARN.</p>\n      "
    },
    "UpdateContact": {
      "name": "UpdateContact",
      "input": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the contact to update.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the contact to update.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "DisplayName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated display name of the contact.</simpara>\n      ",
            "documentation": "\n         <p>The updated display name of the contact.</p>\n      ",
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "FirstName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated first name of the contact.</simpara>\n      ",
            "documentation": "\n         <p>The updated first name of the contact.</p>\n      ",
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "LastName": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated last name of the contact.</simpara>\n      ",
            "documentation": "\n         <p>The updated last name of the contact.</p>\n      ",
            "shape_name": "ContactName",
            "min_length": 1,
            "max_length": 100
          },
          "PhoneNumber": {
            "type": "string",
            "pattern": "^\\+\\d{8,}$",
            "zonbookDocumentation": "\n         <simpara>The updated phone number of the contact.</simpara>\n      ",
            "documentation": "\n         <p>The updated phone number of the contact.</p>\n      ",
            "shape_name": "E164PhoneNumber"
          }
        },
        "shape_name": "UpdateContactRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateContactResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Updates the contact details by the contact ARN.</p>\n      "
    },
    "DeleteContact": {
      "name": "DeleteContact",
      "input": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the contact to delete.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the contact to delete.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteContactRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteContactResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes a contact by the contact ARN.</p>\n      "
    },
    "SearchContacts": {
      "name": "SearchContacts",
      "input": {
        "type": "structure",
        "members": {
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.</simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of address books. The supported filter keys are DisplayName, FirstName, LastName, and AddressBookArns.</p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of contacts. The supported sort keys are DisplayName, FirstName, and LastName.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "SearchContactsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Contacts": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The contacts that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The contacts that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "ContactDataList",
            "members": {
              "type": "structure",
              "members": {
                "ContactArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the contact.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the contact.</p>\n      ",
                  "shape_name": "Arn"
                },
                "DisplayName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the contact to display on the console.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the contact to display on the console.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "FirstName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The first name of the contact, used to call the contact on the device.</simpara>\n      ",
                  "documentation": "\n         <p>The first name of the contact, used to call the contact on the device.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "LastName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The last name of the contact, used to call the contact on the device.</simpara>\n      ",
                  "documentation": "\n         <p>The last name of the contact, used to call the contact on the device.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "PhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+\\d{8,}$",
                  "zonbookDocumentation": "\n         <simpara>The phone number of the contact.</simpara>\n      ",
                  "documentation": "\n         <p>The phone number of the contact.</p>\n      ",
                  "shape_name": "E164PhoneNumber"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information\n         related to a contact.</simpara>\n      ",
              "documentation": "\n         <p>Information\n         related to a contact.</p>\n      ",
              "shape_name": "ContactData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of contacts returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of contacts returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchContactsResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches contacts and lists the ones that meet a set of filter and sort criteria.</p>\n      "
    },
    "CreateAddressBook": {
      "name": "CreateAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The name of the address book.</simpara>\n      ",
            "documentation": "\n         <p>The name of the address book.</p>\n      ",
            "required": true,
            "shape_name": "AddressBookName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The description of the address book.</simpara>\n      ",
            "documentation": "\n         <p>The description of the address book.</p>\n      ",
            "shape_name": "AddressBookDescription",
            "min_length": 1,
            "max_length": 200
          },
          "ClientRequestToken": {
            "type": "string",
            "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
            "documentation": "\n         <p>A unique, user-specified identifier for the request that ensures idempotency.</p>\n      ",
            "zonbookDocumentation": "\n         <simpara>A unique, user-specified identifier for the request that ensures idempotency.</simpara>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 10,
            "max_length": 150
          }
        },
        "shape_name": "CreateAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the newly created address book.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the newly created address book.</p>\n      ",
            "shape_name": "Arn"
          }
        },
        "shape_name": "CreateAddressBookResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource being created already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource being created already exists.</p>\n      ",
          "shape_name": "AlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates an address book with the specified details.</p>\n      "
    },
    "GetAddressBook": {
      "name": "GetAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the address book for which to request details.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the address book for which to request details.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "GetAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AddressBook": {
            "type": "structure",
            "members": {
              "AddressBookArn": {
                "type": "string",
                "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                "zonbookDocumentation": "\n         <simpara>The ARN of the address book.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the address book.</p>\n      ",
                "shape_name": "Arn"
              },
              "Name": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The name of the address book.</simpara>\n      ",
                "documentation": "\n         <p>The name of the address book.</p>\n      ",
                "shape_name": "AddressBookName",
                "min_length": 1,
                "max_length": 100
              },
              "Description": {
                "type": "string",
                "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                "zonbookDocumentation": "\n         <simpara>The description of the address book.</simpara>\n      ",
                "documentation": "\n         <p>The description of the address book.</p>\n      ",
                "shape_name": "AddressBookDescription",
                "min_length": 1,
                "max_length": 200
              }
            },
            "zonbookDocumentation": "\n         <simpara>The details of the requested address book.</simpara>\n      ",
            "documentation": "\n         <p>The details of the requested address book.</p>\n      ",
            "shape_name": "AddressBook"
          }
        },
        "shape_name": "GetAddressBookResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets address the book details by the address book ARN.</p>\n      "
    },
    "UpdateAddressBook": {
      "name": "UpdateAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the room to update.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the room to update.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated name of the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated name of the room.</p>\n      ",
            "shape_name": "AddressBookName",
            "min_length": 1,
            "max_length": 100
          },
          "Description": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "zonbookDocumentation": "\n         <simpara>The updated description of the room.</simpara>\n      ",
            "documentation": "\n         <p>The updated description of the room.</p>\n      ",
            "shape_name": "AddressBookDescription",
            "min_length": 1,
            "max_length": 200
          }
        },
        "shape_name": "UpdateAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateAddressBookResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The name sent in the request is already in use.</simpara>\n      ",
          "documentation": "\n         <p>The name sent in the request is already in use.</p>\n      ",
          "shape_name": "NameInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Updates address book details by the address book ARN.</p>\n      "
    },
    "DeleteAddressBook": {
      "name": "DeleteAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the address book to delete.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the address book to delete.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "DeleteAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteAddressBookResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "documentation": "\n        Concurrent modification of resources. HTTP Status Code: 400.\n    ",
          "shape_name": "ConcurrentModificationException"
        }
      ],
      "documentation": "\n         <p>Deletes an address book by the address book ARN.</p>\n      "
    },
    "SearchAddressBooks": {
      "name": "SearchAddressBooks",
      "input": {
        "type": "structure",
        "members": {
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The filters to use to list a specified set of address books. The supported filter key is AddressBookName.</simpara>\n      ",
            "documentation": "\n         <p>The filters to use to list a specified set of address books. The supported filter key is AddressBookName.</p>\n      ",
            "shape_name": "FilterList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The key of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The key of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The values of a filter.</simpara>\n      ",
                  "documentation": "\n         <p>The values of a filter.</p>\n      ",
                  "required": true,
                  "shape_name": "FilterValueList",
                  "max_length": 5,
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 500
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</simpara>\n      ",
              "documentation": "\n         <p>A filter name and value pair that is used to return a more specific list of results.\n         Filters can be used to match a set of resources by various criteria.</p>\n      ",
              "shape_name": "Filter"
            }
          },
          "SortCriteria": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.</simpara>\n      ",
            "documentation": "\n         <p>The sort order to use in listing the specified set of address books. The supported sort key is AddressBookName.</p>\n      ",
            "shape_name": "SortList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The sort key of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort key of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortKey",
                  "min_length": 1,
                  "max_length": 500
                },
                "Value": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The sort value of a sort object.</simpara>\n      ",
                  "documentation": "\n         <p>The sort value of a sort object.</p>\n      ",
                  "required": true,
                  "shape_name": "SortValue"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An object representing a sort criteria. </simpara>\n      ",
              "documentation": "\n         <p>An object representing a sort criteria. </p>\n      ",
              "shape_name": "Sort"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.</simpara>\n      ",
            "documentation": "\n         <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response only includes results beyond the token, up to the value specified by MaxResults.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "SearchAddressBooksRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "AddressBooks": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The address books that meet the specified set of filter criteria, in sort order.</simpara>\n      ",
            "documentation": "\n         <p>The address books that meet the specified set of filter criteria, in sort order.</p>\n      ",
            "shape_name": "AddressBookDataList",
            "members": {
              "type": "structure",
              "members": {
                "AddressBookArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the address book.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the address book.</p>\n      ",
                  "shape_name": "Arn"
                },
                "Name": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the address book.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the address book.</p>\n      ",
                  "shape_name": "AddressBookName",
                  "min_length": 1,
                  "max_length": 100
                },
                "Description": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The description of the address book.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the address book.</p>\n      ",
                  "shape_name": "AddressBookDescription",
                  "min_length": 1,
                  "max_length": 200
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information\n         related to an address book.</simpara>\n      ",
              "documentation": "\n         <p>Information\n         related to an address book.</p>\n      ",
              "shape_name": "AddressBookData"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned to indicate that there is more data available.</simpara>\n      ",
            "documentation": "\n         <p>The token returned to indicate that there is more data available.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 1000
          },
          "TotalCount": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The total number of address books returned.</simpara>\n      ",
            "documentation": "\n         <p>The total number of address books returned.</p>\n      ",
            "shape_name": "TotalCount"
          }
        },
        "shape_name": "SearchAddressBooksResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Searches address books and lists the ones that meet a set of filter and sort criteria.</p>\n      "
    },
    "AssociateContactWithAddressBook": {
      "name": "AssociateContactWithAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the contact to associate with an address book.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the contact to associate with an address book.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the address book with which to associate the contact.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the address book with which to associate the contact.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "AssociateContactWithAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AssociateContactWithAddressBookResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are performing an action that would put you beyond your account's limits.</simpara>\n      ",
          "documentation": "\n         <p>You are performing an action that would put you beyond your account's limits.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Associates a contact with a given address book.</p>\n      "
    },
    "DisassociateContactFromAddressBook": {
      "name": "DisassociateContactFromAddressBook",
      "input": {
        "type": "structure",
        "members": {
          "ContactArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the contact to disassociate from an address book.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the contact to disassociate from an address book.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          },
          "AddressBookArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "zonbookDocumentation": "\n         <simpara>The ARN of the address from which to disassociate the contact.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the address from which to disassociate the contact.</p>\n      ",
            "required": true,
            "shape_name": "Arn"
          }
        },
        "shape_name": "DisassociateContactFromAddressBookRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DisassociateContactFromAddressBookResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Disassociates a contact from a given address book.</p>\n      "
    },
    "ListContactsSyncedForDevice": {
      "name": "ListContactsSyncedForDevice",
      "input": {
        "type": "structure",
        "members": {
          "DeviceArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "ListContactsSyncedForDeviceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Contacts": {
            "type": "list",
            "shape_name": "ContactList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ContactArn": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the contact.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the contact.</p>\n      ",
                  "shape_name": "Arn"
                },
                "DisplayName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The name of the contact to display on the console.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the contact to display on the console.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "FirstName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The first name of the contact, used to call the contact on the device.</simpara>\n      ",
                  "documentation": "\n         <p>The first name of the contact, used to call the contact on the device.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "LastName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "zonbookDocumentation": "\n         <simpara>The last name of the contact, used to call the contact on the device.</simpara>\n      ",
                  "documentation": "\n         <p>The last name of the contact, used to call the contact on the device.</p>\n      ",
                  "shape_name": "ContactName",
                  "min_length": 1,
                  "max_length": 100
                },
                "PhoneNumber": {
                  "type": "string",
                  "pattern": "^\\+\\d{8,}$",
                  "zonbookDocumentation": "\n         <simpara>The phone number of the contact.</simpara>\n      ",
                  "documentation": "\n         <p>The phone number of the contact.</p>\n      ",
                  "shape_name": "E164PhoneNumber"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A contact with attributes.</simpara>\n      ",
              "documentation": "\n         <p>A contact with attributes.</p>\n      ",
              "shape_name": "Contact"
            }
          }
        },
        "shape_name": "ListContactsSyncedForDeviceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "CreateBusinessReport": {
      "name": "CreateBusinessReport",
      "input": {
        "type": "structure",
        "members": {
          "CustomerS3BucketName": {
            "type": "string",
            "pattern": "[a-z0-9-\\.]{3,63}",
            "internalonly": true,
            "shape_name": "CustomerS3BucketName",
            "documentation": null
          }
        },
        "shape_name": "CreateBusinessReportRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ReportId": {
            "type": "string",
            "pattern": "[0-9a-f-]{36}",
            "internalonly": true,
            "shape_name": "ReportId",
            "documentation": null
          }
        },
        "shape_name": "CreateBusinessReportResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ConcurrentBusinessReportExecutionException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "DescribeBusinessReport": {
      "name": "DescribeBusinessReport",
      "input": {
        "type": "structure",
        "members": {
          "ReportId": {
            "type": "string",
            "pattern": "[0-9a-f-]{36}",
            "internalonly": true,
            "shape_name": "ReportId",
            "documentation": null
          }
        },
        "shape_name": "DescribeBusinessReportRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "SUCCEEDED",
              "FAILED"
            ],
            "shape_name": "BusinessReportStatus",
            "documentation": null
          },
          "InputDetails": {
            "type": "structure",
            "members": {
              "CustomerS3BucketName": {
                "type": "string",
                "pattern": "[a-z0-9-\\.]{3,63}",
                "shape_name": "CustomerS3BucketName",
                "documentation": null
              },
              "S3Location": {
                "type": "structure",
                "members": {
                  "PathPrefix": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                    "shape_name": "S3PathPrefix",
                    "documentation": null,
                    "min_length": 0,
                    "max_length": 500
                  },
                  "BucketName": {
                    "type": "string",
                    "pattern": "[a-z0-9-\\.]{3,63}",
                    "shape_name": "CustomerS3BucketName",
                    "documentation": null
                  }
                },
                "shape_name": "S3Location",
                "documentation": null
              },
              "RequestTime": {
                "type": "timestamp",
                "shape_name": "Timestamp",
                "documentation": null
              }
            },
            "shape_name": "InputDetails",
            "documentation": null
          },
          "OutputDetails": {
            "type": "structure",
            "members": {
              "OutputStatusCode": {
                "type": "integer",
                "shape_name": "BusinessReportOutputStatusCode",
                "documentation": null
              },
              "DeliveredTime": {
                "type": "timestamp",
                "shape_name": "Timestamp",
                "documentation": null
              },
              "OutputS3FileKey": {
                "type": "string",
                "shape_name": "OutputS3FileKey",
                "documentation": null,
                "min_length": 0,
                "max_length": 1024
              }
            },
            "shape_name": "OutputDetails",
            "documentation": null
          }
        },
        "shape_name": "DescribeBusinessReportResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not found.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not found.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": null
    },
    "CreateBusinessReportSchedule": {
      "name": "CreateBusinessReportSchedule",
      "input": {
        "type": "structure",
        "members": {
          "Name": {
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "shape_name": "BusinessReportScheduleName",
            "documentation": null,
            "min_length": 0,
            "max_length": 64
          },
          "S3Location": {
            "type": "structure",
            "members": {
              "PathPrefix": {
                "type": "string",
                "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                "shape_name": "S3PathPrefix",
                "documentation": null,
                "min_length": 0,
                "max_length": 500
              },
              "BucketName": {
                "type": "string",
                "pattern": "[a-z0-9-\\.]{3,63}",
                "shape_name": "CustomerS3BucketName",
                "documentation": null
              }
            },
            "shape_name": "S3Location",
            "documentation": null
          },
          "Interval": {
            "type": "string",
            "enum": [
              "ON_DEMAND",
              "ONE_DAY",
              "SEVEN_DAYS"
            ],
            "shape_name": "BusinessReportInterval",
            "documentation": null
          },
          "StartDate": {
            "type": "timestamp",
            "shape_name": "Timestamp",
            "documentation": null
          },
          "Format": {
            "type": "string",
            "enum": [
              "CSV",
              "ZIP"
            ],
            "shape_name": "BusinessReportFormat",
            "documentation": null
          }
        },
        "shape_name": "CreateBusinessReportScheduleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ScheduleArn": {
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "shape_name": "Arn",
            "documentation": null
          }
        },
        "shape_name": "CreateBusinessReportScheduleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "shape_name": "ConcurrentBusinessReportExecutionException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "ListBusinessReportSchedules": {
      "name": "ListBusinessReportSchedules",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          },
          "MaxResults": {
            "type": "integer",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 1,
            "max_length": 50
          }
        },
        "shape_name": "ListBusinessReportSchedulesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "BusinessReportSchedules": {
            "type": "list",
            "shape_name": "BusinessReportScheduleList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "ScheduleId": {
                  "type": "string",
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "shape_name": "Arn",
                  "documentation": null
                },
                "ScheduleName": {
                  "type": "string",
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "shape_name": "BusinessReportScheduleName",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 64
                },
                "Interval": {
                  "type": "string",
                  "enum": [
                    "ON_DEMAND",
                    "ONE_DAY",
                    "SEVEN_DAYS"
                  ],
                  "shape_name": "BusinessReportInterval",
                  "documentation": null
                },
                "S3Location": {
                  "type": "structure",
                  "members": {
                    "PathPrefix": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                      "shape_name": "S3PathPrefix",
                      "documentation": null,
                      "min_length": 0,
                      "max_length": 500
                    },
                    "BucketName": {
                      "type": "string",
                      "pattern": "[a-z0-9-\\.]{3,63}",
                      "shape_name": "CustomerS3BucketName",
                      "documentation": null
                    }
                  },
                  "shape_name": "S3Location",
                  "documentation": null
                },
                "StartDate": {
                  "type": "timestamp",
                  "shape_name": "Timestamp",
                  "documentation": null
                },
                "Format": {
                  "type": "string",
                  "enum": [
                    "CSV",
                    "ZIP"
                  ],
                  "shape_name": "BusinessReportFormat",
                  "documentation": null
                },
                "LastBusinessReport": {
                  "type": "structure",
                  "members": {
                    "ReportId": {
                      "type": "string",
                      "pattern": "[0-9a-f-]{36}",
                      "shape_name": "ReportId",
                      "documentation": null
                    },
                    "Status": {
                      "type": "string",
                      "enum": [
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED"
                      ],
                      "shape_name": "BusinessReportStatus",
                      "documentation": null
                    },
                    "InputDetails": {
                      "type": "structure",
                      "members": {
                        "CustomerS3BucketName": {
                          "type": "string",
                          "pattern": "[a-z0-9-\\.]{3,63}",
                          "shape_name": "CustomerS3BucketName",
                          "documentation": null
                        },
                        "S3Location": {
                          "type": "structure",
                          "members": {
                            "PathPrefix": {
                              "type": "string",
                              "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
                              "shape_name": "S3PathPrefix",
                              "documentation": null,
                              "min_length": 0,
                              "max_length": 500
                            },
                            "BucketName": {
                              "type": "string",
                              "pattern": "[a-z0-9-\\.]{3,63}",
                              "shape_name": "CustomerS3BucketName",
                              "documentation": null
                            }
                          },
                          "shape_name": "S3Location",
                          "documentation": null
                        },
                        "RequestTime": {
                          "type": "timestamp",
                          "shape_name": "Timestamp",
                          "documentation": null
                        }
                      },
                      "shape_name": "InputDetails",
                      "documentation": null
                    },
                    "OutputDetails": {
                      "type": "structure",
                      "members": {
                        "OutputStatusCode": {
                          "type": "integer",
                          "shape_name": "BusinessReportOutputStatusCode",
                          "documentation": null
                        },
                        "DeliveredTime": {
                          "type": "timestamp",
                          "shape_name": "Timestamp",
                          "documentation": null
                        },
                        "OutputS3FileKey": {
                          "type": "string",
                          "shape_name": "OutputS3FileKey",
                          "documentation": null,
                          "min_length": 0,
                          "max_length": 1024
                        }
                      },
                      "shape_name": "OutputDetails",
                      "documentation": null
                    }
                  },
                  "shape_name": "BusinessReport",
                  "documentation": null
                }
              },
              "shape_name": "BusinessReportSchedule",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "NextToken",
            "documentation": null,
            "min_length": 1,
            "max_length": 1000
          }
        },
        "shape_name": "ListBusinessReportSchedulesResponse",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": null
    }
  }
}
