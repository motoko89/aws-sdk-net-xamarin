{
  "version": "1.0",
  "type": "json",
  "json_version": 1.1,
  "signature_version": "v4",
  "service_full_name": "Amazon Lightsail",
  "service_id": "Lightsail",
  "uid": "lightsail-2016-11-28",
  "endpoint_prefix": "lightsail",
  "api_version": "2016-11-28",
  "target_prefix": "Lightsail_20161128",
  "documentation": "\n         <p>Amazon Lightsail is the easiest way to get started with AWS for developers who just need\n      virtual private servers. Lightsail includes everything you need to launch your project quickly\n      - a virtual machine, SSD-based storage, data transfer, DNS management, and a static IP - for a\n      low, predictable price. You manage those Lightsail servers through the Lightsail\n      console or by using the API or command-line interface (CLI).</p>\n         <p>For more information about Lightsail concepts and tasks, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/all\">Lightsail Dev Guide</a>.</p>\n    \n         <p>To use the Lightsail API or the CLI, you will need to use AWS Identity and Access\n      Management (IAM) to generate access keys. For details about how to set this up, see the <a href=\"http://lightsail.aws.amazon.com/ls/docs/how-to/article/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli\">Lightsail Dev Guide</a>.</p>\n    \n      ",
  "operations": {
    "CreateInstances": {
      "name": "CreateInstances",
      "input": {
        "type": "structure",
        "members": {
          "instanceNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The names to use for your new Lightsail instances. Separate multiple values using\n      quotation marks and commas, for example:\n      <code>[\"MyFirstInstance\",\"MySecondInstance\"]</code>\n         </simpara>\n      ",
            "documentation": "\n         <p>The names to use for your new Lightsail instances. Separate multiple values using\n      quotation marks and commas, for example:\n      <code>[\"MyFirstInstance\",\"MySecondInstance\"]</code>\n         </p>\n      ",
            "required": true,
            "shape_name": "StringList",
            "members": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "availabilityZone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone in which to create your instance. Use the following format:\n      <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones\n      by using the <ulink url=\"http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html\">get\n        regions</ulink> operation. Be sure to add the <code>include Availability Zones</code>\n      parameter to your request.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone in which to create your instance. Use the following format:\n      <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones\n      by using the <a href=\"http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html\">get\n        regions</a> operation. Be sure to add the <code>include Availability Zones</code>\n      parameter to your request.</p>\n      ",
            "required": true,
            "shape_name": "string"
          },
          "customImageName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>(Deprecated) The name for your custom image.</simpara>\n         <note>\n            <simpara>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>(Deprecated) The name for your custom image.</p>\n         <note>\n            <p>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.</p>\n         </note>\n      ",
            "deprecated": true,
            "shape_name": "ResourceName"
          },
          "blueprintId": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or\n        <code>app_lamp_7_0</code>). Use the get blueprints operation to return a list of available\n      images (or <emphasis>blueprints</emphasis>).</simpara>\n      ",
            "documentation": "\n         <p>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or\n        <code>app_lamp_7_0</code>). Use the get blueprints operation to return a list of available\n      images (or <i>blueprints</i>).</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          },
          "bundleId": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The bundle of specification information for your virtual private server (or\n        <emphasis>instance</emphasis>), including the pricing plan (e.g.,\n      <code>micro_1_0</code>).</simpara>\n      ",
            "documentation": "\n         <p>The bundle of specification information for your virtual private server (or\n        <i>instance</i>), including the pricing plan (e.g.,\n      <code>micro_1_0</code>).</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          },
          "userData": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A launch script you can create that configures a server with additional user data. For\n      example, you might want to run <code>apt-get -y update</code>.</simpara>\n         <note>\n            <simpara>Depending on the machine image you choose, the command to get software on your\n        instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use\n          <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the\n          <ulink url=\"https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image\">Dev Guide</ulink>.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>A launch script you can create that configures a server with additional user data. For\n      example, you might want to run <code>apt-get -y update</code>.</p>\n         <note>\n            <p>Depending on the machine image you choose, the command to get software on your\n        instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use\n          <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the\n          <a href=\"https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image\">Dev Guide</a>.</p>\n         </note>\n      ",
            "shape_name": "string"
          },
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your key pair.</simpara>\n      ",
            "documentation": "\n         <p>The name of your key pair.</p>\n      ",
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateInstancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your create\n      instances request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your create\n      instances request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateInstancesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates one or more Amazon Lightsail virtual private servers, or\n        <i>instances</i>. Create instances using active blueprints. Inactive\n      blueprints are listed to support customers with existing instances but are not necessarily\n      available for launch of new instances. Blueprints are marked inactive when they become\n      outdated due to operating system updates or new application releases. Use the get blueprints\n      operation to return a list of available blueprints.</p>\n      "
    },
    "DeleteInstance": {
      "name": "DeleteInstance",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance to delete.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your delete\n      instance request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your delete\n      instance request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a specific Amazon Lightsail virtual private server, or\n        <i>instance</i>.</p>\n      "
    },
    "OpenInstancePublicPorts": {
      "name": "OpenInstancePublicPorts",
      "input": {
        "type": "structure",
        "members": {
          "portInfo": {
            "type": "structure",
            "members": {
              "fromPort": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                "documentation": "\n         <p>The first port in the range.</p>\n      ",
                "shape_name": "Port",
                "min_length": 0,
                "max_length": 65535
              },
              "toPort": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                "documentation": "\n         <p>The last port in the range.</p>\n      ",
                "shape_name": "Port",
                "min_length": 0,
                "max_length": 65535
              },
              "protocol": {
                "type": "string",
                "enum": [
                  "tcp",
                  "all",
                  "udp"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol. </simpara>\n      ",
                "documentation": "\n         <p>The protocol. </p>\n      ",
                "shape_name": "NetworkProtocol"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the port mappings.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the port mappings.</p>\n      ",
            "required": true,
            "shape_name": "PortInfo"
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance for which you want to open the public ports.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance for which you want to open the public ports.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "OpenInstancePublicPortsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "OpenInstancePublicPortsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Adds public ports to an Amazon Lightsail instance.</p>\n      "
    },
    "CloseInstancePublicPorts": {
      "name": "CloseInstancePublicPorts",
      "input": {
        "type": "structure",
        "members": {
          "portInfo": {
            "type": "structure",
            "members": {
              "fromPort": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                "documentation": "\n         <p>The first port in the range.</p>\n      ",
                "shape_name": "Port",
                "min_length": 0,
                "max_length": 65535
              },
              "toPort": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                "documentation": "\n         <p>The last port in the range.</p>\n      ",
                "shape_name": "Port",
                "min_length": 0,
                "max_length": 65535
              },
              "protocol": {
                "type": "string",
                "enum": [
                  "tcp",
                  "all",
                  "udp"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol. </simpara>\n      ",
                "documentation": "\n         <p>The protocol. </p>\n      ",
                "shape_name": "NetworkProtocol"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Information about the public port you are trying to close.</simpara>\n      ",
            "documentation": "\n         <p>Information about the public port you are trying to close.</p>\n      ",
            "required": true,
            "shape_name": "PortInfo"
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance on which you're attempting to close the public\n      ports.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance on which you're attempting to close the public\n      ports.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "CloseInstancePublicPortsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs that contains information about the operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs that contains information about the operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "CloseInstancePublicPortsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Closes the public ports on a specific Amazon Lightsail instance.</p>\n      "
    },
    "PutInstancePublicPorts": {
      "name": "PutInstancePublicPorts",
      "input": {
        "type": "structure",
        "members": {
          "portInfos": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies information about the public port(s).</simpara>\n      ",
            "documentation": "\n         <p>Specifies information about the public port(s).</p>\n      ",
            "required": true,
            "shape_name": "PortInfoList",
            "members": {
              "type": "structure",
              "members": {
                "fromPort": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                  "documentation": "\n         <p>The first port in the range.</p>\n      ",
                  "shape_name": "Port",
                  "min_length": 0,
                  "max_length": 65535
                },
                "toPort": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                  "documentation": "\n         <p>The last port in the range.</p>\n      ",
                  "shape_name": "Port",
                  "min_length": 0,
                  "max_length": 65535
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "tcp",
                    "all",
                    "udp"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The protocol. </simpara>\n      ",
                  "documentation": "\n         <p>The protocol. </p>\n      ",
                  "shape_name": "NetworkProtocol"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes information about the ports on your virtual private server (or\n        <emphasis>instance</emphasis>).</simpara>\n      ",
              "documentation": "\n         <p>Describes information about the ports on your virtual private server (or\n        <i>instance</i>).</p>\n      ",
              "shape_name": "PortInfo"
            }
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The Lightsail instance name of the public port(s) you are setting.</simpara>\n      ",
            "documentation": "\n         <p>The Lightsail instance name of the public port(s) you are setting.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "PutInstancePublicPortsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Describes metadata about the operation you just executed.</simpara>\n      ",
            "documentation": "\n         <p>Describes metadata about the operation you just executed.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "PutInstancePublicPortsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Sets the specified open ports for an Amazon Lightsail instance, and closes all ports for every protocol not included in the current request.</p>\n      "
    },
    "GetInstancePortStates": {
      "name": "GetInstancePortStates",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetInstancePortStatesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "portStates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about the port states resulting from your request.</simpara>\n      ",
            "documentation": "\n         <p>Information about the port states resulting from your request.</p>\n      ",
            "shape_name": "InstancePortStateList",
            "members": {
              "type": "structure",
              "members": {
                "fromPort": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                  "documentation": "\n         <p>The first port in the range.</p>\n      ",
                  "shape_name": "Port",
                  "min_length": 0,
                  "max_length": 65535
                },
                "toPort": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                  "documentation": "\n         <p>The last port in the range.</p>\n      ",
                  "shape_name": "Port",
                  "min_length": 0,
                  "max_length": 65535
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "tcp",
                    "all",
                    "udp"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The protocol being used. Can be one of the following.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require reliable data stream service, use UDP instead.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>all</code> - All transport layer protocol types. For more general information, see <ulink url=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</ulink> on Wikipedia.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The protocol being used. Can be one of the following.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require reliable data stream service, use UDP instead.</p>\n            </li>\n            <li>\n               <p>\n                  <code>all</code> - All transport layer protocol types. For more general information, see <a href=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</a> on Wikipedia.</p>\n            </li>\n            <li>\n               <p>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "NetworkProtocol"
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "open",
                    "closed"
                  ],
                  "zonbookDocumentation": "\n         <simpara>Specifies whether the instance port is <code>open</code> or <code>closed</code>.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies whether the instance port is <code>open</code> or <code>closed</code>.</p>\n      ",
                  "shape_name": "PortState"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the port state.</simpara>\n      ",
              "documentation": "\n         <p>Describes the port state.</p>\n      ",
              "shape_name": "InstancePortState"
            }
          }
        },
        "shape_name": "GetInstancePortStatesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the port states for a specific virtual private server, or <i>instance</i>.</p>\n      "
    },
    "RebootInstance": {
      "name": "RebootInstance",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance to reboot.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance to reboot.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "RebootInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operations.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "RebootInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Restarts a specific instance. When your Amazon Lightsail instance is finished rebooting,\n      Lightsail assigns a new public IP address. To use the same IP address after\n      restarting, create a static IP address and attach it to the instance.</p>\n      "
    },
    "StartInstance": {
      "name": "StartInstance",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance (a virtual private server) to start.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance (a virtual private server) to start.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "StartInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "StartInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Starts a specific Amazon Lightsail instance from a stopped state. To restart an\n      instance, use the reboot instance operation.</p>\n      "
    },
    "StopInstance": {
      "name": "StopInstance",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance (a virtual private server) to stop.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance (a virtual private server) to stop.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When set to <code>True</code>, forces a Lightsail instance that is stuck in a <code>stopping</code> state to stop.</simpara>\n         <important>\n            <simpara>Only use the <code>force</code> parameter if your instance is stuck in the <code>stopping</code> state. In any other state, your instance \n        should stop normally without adding this parameter to your API request.</simpara>\n         </important>\n      ",
            "documentation": "\n         <p>When set to <code>True</code>, forces a Lightsail instance that is stuck in a <code>stopping</code> state to stop.</p>\n         <important>\n            <p>Only use the <code>force</code> parameter if your instance is stuck in the <code>stopping</code> state. In any other state, your instance \n        should stop normally without adding this parameter to your API request.</p>\n         </important>\n      ",
            "shape_name": "boolean"
          }
        },
        "shape_name": "StopInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "StopInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Stops a specific Amazon Lightsail instance that is currently running.</p>\n      "
    },
    "GetInstanceAccessDetails": {
      "name": "GetInstanceAccessDetails",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance to access.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance to access.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "protocol": {
            "type": "string",
            "enum": [
              "ssh",
              "rdp"
            ],
            "zonbookDocumentation": "\n         <simpara>The protocol to use to connect to your instance. Defaults to <code>ssh</code>.</simpara>\n      ",
            "documentation": "\n         <p>The protocol to use to connect to your instance. Defaults to <code>ssh</code>.</p>\n      ",
            "shape_name": "InstanceAccessProtocol"
          }
        },
        "shape_name": "GetInstanceAccessDetailsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "accessDetails": {
            "type": "structure",
            "members": {
              "certKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>For SSH access, the public key to use when accessing your instance For OpenSSH clients (e.g., command line SSH), you should \n      save this value to <code>tempkey-cert.pub</code>.</simpara>\n      ",
                "documentation": "\n         <p>For SSH access, the public key to use when accessing your instance For OpenSSH clients (e.g., command line SSH), you should \n      save this value to <code>tempkey-cert.pub</code>.</p>\n      ",
                "shape_name": "string"
              },
              "expiresAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>For SSH access, the date on which the temporary keys expire.</simpara>\n      ",
                "documentation": "\n         <p>For SSH access, the date on which the temporary keys expire.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "ipAddress": {
                "type": "string",
                "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                "zonbookDocumentation": "\n         <simpara>The public IP address of the Amazon Lightsail instance.</simpara>\n      ",
                "documentation": "\n         <p>The public IP address of the Amazon Lightsail instance.</p>\n      ",
                "shape_name": "IpAddress"
              },
              "password": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>For RDP access, the password for your Amazon Lightsail instance. Password will be an empty string if the password \n      for your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</simpara>\n         <note>\n            <simpara>If you create an instance using any key pair other than the default (<code>LightsailDefaultKeyPair</code>), <code>password</code> will always be an empty string.</simpara>\n            <simpara>If you change the Administrator password on the instance, Lightsail will continue to return the original password value. When accessing the instance using RDP, \n        you need to manually enter the Administrator password after changing it from the default.</simpara>\n         </note>\n      ",
                "documentation": "\n         <p>For RDP access, the password for your Amazon Lightsail instance. Password will be an empty string if the password \n      for your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</p>\n         <note>\n            <p>If you create an instance using any key pair other than the default (<code>LightsailDefaultKeyPair</code>), <code>password</code> will always be an empty string.</p>\n            <p>If you change the Administrator password on the instance, Lightsail will continue to return the original password value. When accessing the instance using RDP, \n        you need to manually enter the Administrator password after changing it from the default.</p>\n         </note>\n      ",
                "shape_name": "string"
              },
              "passwordData": {
                "type": "structure",
                "members": {
                  "ciphertext": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The encrypted password. Ciphertext will be an empty string if access to your new instance is not ready yet. \n      When you create an instance, it can take up to 15 minutes for the instance to be ready.</simpara>\n         <note>\n            <simpara>If you use the default key pair (<code>LightsailDefaultKeyPair</code>), the decrypted password will be available in the password field.</simpara>\n            <simpara>If you are using a custom key pair, you need to use your own means of decryption.</simpara>\n            <simpara>If you change the Administrator password on the instance, Lightsail will continue to return the original ciphertext value. When accessing the instance using RDP, \n        you need to manually enter the Administrator password after changing it from the default.</simpara>\n         </note>\n      ",
                    "documentation": "\n         <p>The encrypted password. Ciphertext will be an empty string if access to your new instance is not ready yet. \n      When you create an instance, it can take up to 15 minutes for the instance to be ready.</p>\n         <note>\n            <p>If you use the default key pair (<code>LightsailDefaultKeyPair</code>), the decrypted password will be available in the password field.</p>\n            <p>If you are using a custom key pair, you need to use your own means of decryption.</p>\n            <p>If you change the Administrator password on the instance, Lightsail will continue to return the original ciphertext value. When accessing the instance using RDP, \n        you need to manually enter the Administrator password after changing it from the default.</p>\n         </note>\n      ",
                    "shape_name": "string"
                  },
                  "keyPairName": {
                    "type": "string",
                    "pattern": "\\w[\\w\\-]*\\w",
                    "zonbookDocumentation": "\n         <simpara>The name of the key pair that you used when creating your instance. If no key pair name was specified when creating the instance, \n        Lightsail uses the default key pair (<code>LightsailDefaultKeyPair</code>).</simpara>\n         <simpara>If you are using a custom key pair, you need to use your own means of decrypting your password using the <code>ciphertext</code>. \n      Lightsail creates the ciphertext by encrypting your password with the public key part of this key pair.</simpara>\n      ",
                    "documentation": "\n         <p>The name of the key pair that you used when creating your instance. If no key pair name was specified when creating the instance, \n        Lightsail uses the default key pair (<code>LightsailDefaultKeyPair</code>).</p>\n         <p>If you are using a custom key pair, you need to use your own means of decrypting your password using the <code>ciphertext</code>. \n      Lightsail creates the ciphertext by encrypting your password with the public key part of this key pair.</p>\n      ",
                    "shape_name": "ResourceName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>For a Windows Server-based instance, an object with the data you can use to retrieve your password. This is only needed if <code>password</code> is empty and the instance \n      is not new (and therefore the password is not ready yet). When you create an instance, it can take up to 15 minutes for the instance to be ready.</simpara>\n      ",
                "documentation": "\n         <p>For a Windows Server-based instance, an object with the data you can use to retrieve your password. This is only needed if <code>password</code> is empty and the instance \n      is not new (and therefore the password is not ready yet). When you create an instance, it can take up to 15 minutes for the instance to be ready.</p>\n      ",
                "shape_name": "PasswordData"
              },
              "privateKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>For SSH access, the temporary private key. For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey</code>).</simpara>\n      ",
                "documentation": "\n         <p>For SSH access, the temporary private key. For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey</code>).</p>\n      ",
                "shape_name": "string"
              },
              "protocol": {
                "type": "string",
                "enum": [
                  "ssh",
                  "rdp"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol for these Amazon Lightsail instance access details.</simpara>\n      ",
                "documentation": "\n         <p>The protocol for these Amazon Lightsail instance access details.</p>\n      ",
                "shape_name": "InstanceAccessProtocol"
              },
              "instanceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of this Amazon Lightsail instance.</simpara>\n      ",
                "documentation": "\n         <p>The name of this Amazon Lightsail instance.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "username": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The user name to use when logging in to the Amazon Lightsail instance.</simpara>\n      ",
                "documentation": "\n         <p>The user name to use when logging in to the Amazon Lightsail instance.</p>\n      ",
                "shape_name": "string"
              },
              "hostKeys": {
                "type": "list",
                "internalonly": true,
                "shape_name": "HostKeysList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "algorithm": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "publicKey": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "witnessedAt": {
                      "type": "timestamp",
                      "shape_name": "IsoDate",
                      "documentation": null
                    },
                    "fingerprintSHA1": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "fingerprintSHA256": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "notValidBefore": {
                      "type": "timestamp",
                      "shape_name": "IsoDate",
                      "documentation": null
                    },
                    "notValidAfter": {
                      "type": "timestamp",
                      "shape_name": "IsoDate",
                      "documentation": null
                    }
                  },
                  "shape_name": "HostKeyAttributes",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about a get instance access request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about a get instance access request.</p>\n      ",
            "shape_name": "InstanceAccessDetails"
          }
        },
        "shape_name": "GetInstanceAccessDetailsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns temporary SSH keys you can use to connect to a specific virtual private server,\n      or <i>instance</i>.</p>\n      "
    },
    "ResetHostKeys": {
      "name": "ResetHostKeys",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          }
        },
        "shape_name": "ResetHostKeysRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "ResetHostKeysResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetInstanceState": {
      "name": "GetInstanceState",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance to get state information about.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance to get state information about.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetInstanceStateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "state": {
            "type": "structure",
            "members": {
              "code": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The status code for the instance.</simpara>\n      ",
                "documentation": "\n         <p>The status code for the instance.</p>\n      ",
                "shape_name": "integer"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</simpara>\n      ",
                "documentation": "\n         <p>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The state of the instance.</simpara>\n      ",
            "documentation": "\n         <p>The state of the instance.</p>\n      ",
            "shape_name": "InstanceState"
          }
        },
        "shape_name": "GetInstanceStateResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the state of a specific instance. Works on one instance at a time.</p>\n      "
    },
    "CreateInstancesFromSnapshot": {
      "name": "CreateInstancesFromSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "instanceNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The names for your new instances.</simpara>\n      ",
            "documentation": "\n         <p>The names for your new instances.</p>\n      ",
            "required": true,
            "shape_name": "StringList",
            "members": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "attachedDiskMapping": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>An object containing information about one or more disk mappings.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about one or more disk mappings.</p>\n      ",
            "shape_name": "AttachedDiskMap",
            "keys": {
              "type": "string",
              "pattern": "\\w[\\w\\-]*\\w",
              "shape_name": "ResourceName",
              "documentation": null
            },
            "members": {
              "type": "list",
              "shape_name": "DiskMapList",
              "documentation": null,
              "members": {
                "type": "structure",
                "members": {
                  "originalDiskPath": {
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "zonbookDocumentation": "\n         <simpara>The original disk path exposed to the instance (for example, <code>/dev/sdh</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The original disk path exposed to the instance (for example, <code>/dev/sdh</code>).</p>\n      ",
                    "shape_name": "NonEmptyString"
                  },
                  "newDiskName": {
                    "type": "string",
                    "pattern": "\\w[\\w\\-]*\\w",
                    "zonbookDocumentation": "\n         <simpara>The new disk name (e.g., <code>my-new-disk</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The new disk name (e.g., <code>my-new-disk</code>).</p>\n      ",
                    "shape_name": "ResourceName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Describes a block storage disk mapping.</simpara>\n      ",
                "documentation": "\n         <p>Describes a block storage disk mapping.</p>\n      ",
                "shape_name": "DiskMap"
              }
            }
          },
          "availabilityZone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone where you want to create your instances. Use the following\n      formatting: <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones\n      by using the <ulink url=\"http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html\">get\n        regions</ulink> operation. Be sure to add the <code>include Availability Zones</code>\n      parameter to your request.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone where you want to create your instances. Use the following\n      formatting: <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones\n      by using the <a href=\"http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html\">get\n        regions</a> operation. Be sure to add the <code>include Availability Zones</code>\n      parameter to your request.</p>\n      ",
            "required": true,
            "shape_name": "string"
          },
          "instanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance snapshot on which you are basing your new instances. Use the\n      get instance snapshots operation to return information about your existing\n      snapshots.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance snapshot on which you are basing your new instances. Use the\n      get instance snapshots operation to return information about your existing\n      snapshots.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "bundleId": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The bundle of specification information for your virtual private server (or\n        <emphasis>instance</emphasis>), including the pricing plan (e.g.,\n      <code>micro_1_0</code>).</simpara>\n      ",
            "documentation": "\n         <p>The bundle of specification information for your virtual private server (or\n        <i>instance</i>), including the pricing plan (e.g.,\n      <code>micro_1_0</code>).</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          },
          "userData": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>You can create a launch script that configures a server with additional user data. For\n      example, <code>apt-get -y update</code>.</simpara>\n         <note>\n            <simpara>Depending on the machine image you choose, the command to get software on your\n        instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use\n          <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the\n          <ulink url=\"https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image\">Dev Guide</ulink>.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>You can create a launch script that configures a server with additional user data. For\n      example, <code>apt-get -y update</code>.</p>\n         <note>\n            <p>Depending on the machine image you choose, the command to get software on your\n        instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use\n          <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the\n          <a href=\"https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image\">Dev Guide</a>.</p>\n         </note>\n      ",
            "shape_name": "string"
          },
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name for your key pair.</simpara>\n      ",
            "documentation": "\n         <p>The name for your key pair.</p>\n      ",
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateInstancesFromSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your create\n      instances from snapshot request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your create\n      instances from snapshot request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateInstancesFromSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Uses a specific snapshot as a blueprint for creating one or more new instances that are\n      based on that identical configuration.</p>\n      "
    },
    "GetInstances": {
      "name": "GetInstances",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get instances request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get instances request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetInstancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instances": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your instances.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your instances.</p>\n      ",
            "shape_name": "InstanceList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the instance was created (e.g.,\n      <code>1479734909.17</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the instance was created (e.g.,\n      <code>1479734909.17</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where the instance is located.</simpara>\n      ",
                  "documentation": "\n         <p>The region name and Availability Zone where the instance is located.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of resource (usually <code>Instance</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The type of resource (usually <code>Instance</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "blueprintId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "blueprintName": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "bundleId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The bundle for the instance (e.g., <code>micro_1_0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The bundle for the instance (e.g., <code>micro_1_0</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "isStaticIp": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this instance has a static IP assigned to it.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether this instance has a static IP assigned to it.</p>\n      ",
                  "shape_name": "boolean"
                },
                "privateIpAddress": {
                  "type": "string",
                  "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                  "zonbookDocumentation": "\n         <simpara>The private IP address of the instance.</simpara>\n      ",
                  "documentation": "\n         <p>The private IP address of the instance.</p>\n      ",
                  "shape_name": "IpAddress"
                },
                "publicIpAddress": {
                  "type": "string",
                  "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                  "zonbookDocumentation": "\n         <simpara>The public IP address of the instance.</simpara>\n      ",
                  "documentation": "\n         <p>The public IP address of the instance.</p>\n      ",
                  "shape_name": "IpAddress"
                },
                "ipv6Address": {
                  "type": "string",
                  "pattern": "([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}",
                  "zonbookDocumentation": "\n         <simpara>The IPv6 address of the instance.</simpara>\n      ",
                  "documentation": "\n         <p>The IPv6 address of the instance.</p>\n      ",
                  "shape_name": "IpV6Address"
                },
                "hardware": {
                  "type": "structure",
                  "members": {
                    "cpuCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The number of vCPUs the instance has.</simpara>\n      ",
                      "documentation": "\n         <p>The number of vCPUs the instance has.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "disks": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The disks attached to the instance.</simpara>\n      ",
                      "documentation": "\n         <p>The disks attached to the instance.</p>\n      ",
                      "shape_name": "DiskList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "\\w[\\w\\-]*\\w",
                            "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                            "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                            "shape_name": "ResourceName"
                          },
                          "arn": {
                            "type": "string",
                            "pattern": ".*\\S.*",
                            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                            "shape_name": "NonEmptyString"
                          },
                          "supportCode": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                            "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                            "shape_name": "string"
                          },
                          "createdAt": {
                            "type": "timestamp",
                            "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                            "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                            "shape_name": "IsoDate"
                          },
                          "location": {
                            "type": "structure",
                            "members": {
                              "availabilityZone": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                                "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                                "shape_name": "string"
                              },
                              "regionName": {
                                "type": "string",
                                "enum": [
                                  "us-east-1",
                                  "us-east-2",
                                  "us-west-1",
                                  "us-west-2",
                                  "eu-west-1",
                                  "eu-west-2",
                                  "eu-west-3",
                                  "eu-central-1",
                                  "ca-central-1",
                                  "ap-south-1",
                                  "ap-southeast-1",
                                  "ap-southeast-2",
                                  "ap-northeast-1",
                                  "ap-northeast-2"
                                ],
                                "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                                "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                                "shape_name": "RegionName"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                            "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                            "shape_name": "ResourceLocation"
                          },
                          "resourceType": {
                            "type": "string",
                            "enum": [
                              "Instance",
                              "StaticIp",
                              "KeyPair",
                              "InstanceSnapshot",
                              "Domain",
                              "PeeredVpc",
                              "LoadBalancer",
                              "LoadBalancerTlsCertificate",
                              "Disk",
                              "DiskSnapshot",
                              "RelationalDatabase",
                              "RelationalDatabaseSnapshot"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                            "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                            "shape_name": "ResourceType"
                          },
                          "tags": {
                            "type": "list",
                            "internalonly": true,
                            "shape_name": "TagList",
                            "documentation": null,
                            "members": {
                              "type": "structure",
                              "members": {
                                "key": {
                                  "type": "string",
                                  "shape_name": "TagKey",
                                  "documentation": null
                                },
                                "value": {
                                  "type": "string",
                                  "shape_name": "TagValue",
                                  "documentation": null
                                }
                              },
                              "shape_name": "Tag",
                              "documentation": null
                            }
                          },
                          "sizeInGb": {
                            "type": "integer",
                            "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                            "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                            "shape_name": "integer"
                          },
                          "isSystemDisk": {
                            "type": "boolean",
                            "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                            "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                            "shape_name": "boolean"
                          },
                          "iops": {
                            "type": "integer",
                            "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                            "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                            "shape_name": "integer"
                          },
                          "path": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                            "documentation": "\n         <p>The disk path.</p>\n      ",
                            "shape_name": "string"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "error",
                              "available",
                              "in-use",
                              "unknown"
                            ],
                            "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                            "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                            "shape_name": "DiskState"
                          },
                          "attachedTo": {
                            "type": "string",
                            "pattern": "\\w[\\w\\-]*\\w",
                            "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                            "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                            "shape_name": "ResourceName"
                          },
                          "isAttached": {
                            "type": "boolean",
                            "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                            "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                            "shape_name": "boolean"
                          },
                          "attachmentState": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                            "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                            "deprecated": true,
                            "shape_name": "string"
                          },
                          "gbInUse": {
                            "type": "integer",
                            "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                            "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                            "deprecated": true,
                            "shape_name": "integer"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Describes a system disk or an block storage disk.</simpara>\n      ",
                        "documentation": "\n         <p>Describes a system disk or an block storage disk.</p>\n      ",
                        "shape_name": "Disk"
                      }
                    },
                    "ramSizeInGb": {
                      "type": "float",
                      "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB on the instance (e.g., <code>1.0</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The amount of RAM in GB on the instance (e.g., <code>1.0</code>).</p>\n      ",
                      "shape_name": "float"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The size of the vCPU and the amount of RAM for the instance.</simpara>\n      ",
                  "documentation": "\n         <p>The size of the vCPU and the amount of RAM for the instance.</p>\n      ",
                  "shape_name": "InstanceHardware"
                },
                "networking": {
                  "type": "structure",
                  "members": {
                    "monthlyTransfer": {
                      "type": "structure",
                      "members": {
                        "gbPerMonthAllocated": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>The amount allocated per month (in GB).</simpara>\n      ",
                          "documentation": "\n         <p>The amount allocated per month (in GB).</p>\n      ",
                          "shape_name": "integer"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The amount of data in GB allocated for monthly data transfers.</simpara>\n      ",
                      "documentation": "\n         <p>The amount of data in GB allocated for monthly data transfers.</p>\n      ",
                      "shape_name": "MonthlyTransfer"
                    },
                    "ports": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the ports on the instance.</simpara>\n      ",
                      "documentation": "\n         <p>An array of key-value pairs containing information about the ports on the instance.</p>\n      ",
                      "shape_name": "InstancePortInfoList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "fromPort": {
                            "type": "integer",
                            "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                            "documentation": "\n         <p>The first port in the range.</p>\n      ",
                            "shape_name": "Port",
                            "min_length": 0,
                            "max_length": 65535
                          },
                          "toPort": {
                            "type": "integer",
                            "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                            "documentation": "\n         <p>The last port in the range.</p>\n      ",
                            "shape_name": "Port",
                            "min_length": 0,
                            "max_length": 65535
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "tcp",
                              "all",
                              "udp"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The protocol being used. Can be one of the following.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of \n      streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require \n      reliable data stream service, use UDP instead.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>all</code> - All transport layer protocol types. For more general information, see \n      <ulink url=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</ulink> on Wikipedia.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to \n      other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. \n      Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes \n      reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                            "documentation": "\n         <p>The protocol being used. Can be one of the following.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of \n      streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require \n      reliable data stream service, use UDP instead.</p>\n            </li>\n            <li>\n               <p>\n                  <code>all</code> - All transport layer protocol types. For more general information, see \n      <a href=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</a> on Wikipedia.</p>\n            </li>\n            <li>\n               <p>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to \n      other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. \n      Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes \n      reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "NetworkProtocol"
                          },
                          "accessFrom": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).</simpara>\n      ",
                            "documentation": "\n         <p>The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).</p>\n      ",
                            "shape_name": "string"
                          },
                          "accessType": {
                            "type": "string",
                            "enum": [
                              "Public",
                              "Private"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The type of access (<code>Public</code> or <code>Private</code>).</simpara>\n      ",
                            "documentation": "\n         <p>The type of access (<code>Public</code> or <code>Private</code>).</p>\n      ",
                            "shape_name": "PortAccessType"
                          },
                          "commonName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The common name.</simpara>\n      ",
                            "documentation": "\n         <p>The common name.</p>\n      ",
                            "shape_name": "string"
                          },
                          "accessDirection": {
                            "type": "string",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The access direction (<code>inbound</code> or <code>outbound</code>).</simpara>\n      ",
                            "documentation": "\n         <p>The access direction (<code>inbound</code> or <code>outbound</code>).</p>\n      ",
                            "shape_name": "AccessDirection"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Describes information about the instance ports.</simpara>\n      ",
                        "documentation": "\n         <p>Describes information about the instance ports.</p>\n      ",
                        "shape_name": "InstancePortInfo"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Information about the public ports and monthly data transfer rates for the instance.</simpara>\n      ",
                  "documentation": "\n         <p>Information about the public ports and monthly data transfer rates for the instance.</p>\n      ",
                  "shape_name": "InstanceNetworking"
                },
                "state": {
                  "type": "structure",
                  "members": {
                    "code": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The status code for the instance.</simpara>\n      ",
                      "documentation": "\n         <p>The status code for the instance.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</p>\n      ",
                      "shape_name": "string"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The status code and the state (e.g., <code>running</code>) for the instance.</simpara>\n      ",
                  "documentation": "\n         <p>The status code and the state (e.g., <code>running</code>) for the instance.</p>\n      ",
                  "shape_name": "InstanceState"
                },
                "username": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The user name for connecting to the instance (e.g., <code>ec2-user</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The user name for connecting to the instance (e.g., <code>ec2-user</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "sshKeyName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes an instance (a virtual private server).</simpara>\n      ",
              "documentation": "\n         <p>Describes an instance (a virtual private server).</p>\n      ",
              "shape_name": "Instance"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get instances request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get instances request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetInstancesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.</p>\n      "
    },
    "GetInstance": {
      "name": "GetInstance",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instance": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the instance was created (e.g.,\n      <code>1479734909.17</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the instance was created (e.g.,\n      <code>1479734909.17</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where the instance is located.</simpara>\n      ",
                "documentation": "\n         <p>The region name and Availability Zone where the instance is located.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of resource (usually <code>Instance</code>).</simpara>\n      ",
                "documentation": "\n         <p>The type of resource (usually <code>Instance</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "blueprintId": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).</simpara>\n      ",
                "documentation": "\n         <p>The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "blueprintName": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</simpara>\n      ",
                "documentation": "\n         <p>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "bundleId": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The bundle for the instance (e.g., <code>micro_1_0</code>).</simpara>\n      ",
                "documentation": "\n         <p>The bundle for the instance (e.g., <code>micro_1_0</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "isStaticIp": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this instance has a static IP assigned to it.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether this instance has a static IP assigned to it.</p>\n      ",
                "shape_name": "boolean"
              },
              "privateIpAddress": {
                "type": "string",
                "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                "zonbookDocumentation": "\n         <simpara>The private IP address of the instance.</simpara>\n      ",
                "documentation": "\n         <p>The private IP address of the instance.</p>\n      ",
                "shape_name": "IpAddress"
              },
              "publicIpAddress": {
                "type": "string",
                "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                "zonbookDocumentation": "\n         <simpara>The public IP address of the instance.</simpara>\n      ",
                "documentation": "\n         <p>The public IP address of the instance.</p>\n      ",
                "shape_name": "IpAddress"
              },
              "ipv6Address": {
                "type": "string",
                "pattern": "([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}",
                "zonbookDocumentation": "\n         <simpara>The IPv6 address of the instance.</simpara>\n      ",
                "documentation": "\n         <p>The IPv6 address of the instance.</p>\n      ",
                "shape_name": "IpV6Address"
              },
              "hardware": {
                "type": "structure",
                "members": {
                  "cpuCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The number of vCPUs the instance has.</simpara>\n      ",
                    "documentation": "\n         <p>The number of vCPUs the instance has.</p>\n      ",
                    "shape_name": "integer"
                  },
                  "disks": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <simpara>The disks attached to the instance.</simpara>\n      ",
                    "documentation": "\n         <p>The disks attached to the instance.</p>\n      ",
                    "shape_name": "DiskList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "\\w[\\w\\-]*\\w",
                          "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                          "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                          "shape_name": "ResourceName"
                        },
                        "arn": {
                          "type": "string",
                          "pattern": ".*\\S.*",
                          "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                          "shape_name": "NonEmptyString"
                        },
                        "supportCode": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                          "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                          "shape_name": "string"
                        },
                        "createdAt": {
                          "type": "timestamp",
                          "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                          "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                          "shape_name": "IsoDate"
                        },
                        "location": {
                          "type": "structure",
                          "members": {
                            "availabilityZone": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                              "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                              "shape_name": "string"
                            },
                            "regionName": {
                              "type": "string",
                              "enum": [
                                "us-east-1",
                                "us-east-2",
                                "us-west-1",
                                "us-west-2",
                                "eu-west-1",
                                "eu-west-2",
                                "eu-west-3",
                                "eu-central-1",
                                "ca-central-1",
                                "ap-south-1",
                                "ap-southeast-1",
                                "ap-southeast-2",
                                "ap-northeast-1",
                                "ap-northeast-2"
                              ],
                              "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                              "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                              "shape_name": "RegionName"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                          "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                          "shape_name": "ResourceLocation"
                        },
                        "resourceType": {
                          "type": "string",
                          "enum": [
                            "Instance",
                            "StaticIp",
                            "KeyPair",
                            "InstanceSnapshot",
                            "Domain",
                            "PeeredVpc",
                            "LoadBalancer",
                            "LoadBalancerTlsCertificate",
                            "Disk",
                            "DiskSnapshot",
                            "RelationalDatabase",
                            "RelationalDatabaseSnapshot"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                          "shape_name": "ResourceType"
                        },
                        "tags": {
                          "type": "list",
                          "internalonly": true,
                          "shape_name": "TagList",
                          "documentation": null,
                          "members": {
                            "type": "structure",
                            "members": {
                              "key": {
                                "type": "string",
                                "shape_name": "TagKey",
                                "documentation": null
                              },
                              "value": {
                                "type": "string",
                                "shape_name": "TagValue",
                                "documentation": null
                              }
                            },
                            "shape_name": "Tag",
                            "documentation": null
                          }
                        },
                        "sizeInGb": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                          "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                          "shape_name": "integer"
                        },
                        "isSystemDisk": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                          "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                          "shape_name": "boolean"
                        },
                        "iops": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                          "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                          "shape_name": "integer"
                        },
                        "path": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                          "documentation": "\n         <p>The disk path.</p>\n      ",
                          "shape_name": "string"
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "error",
                            "available",
                            "in-use",
                            "unknown"
                          ],
                          "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                          "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                          "shape_name": "DiskState"
                        },
                        "attachedTo": {
                          "type": "string",
                          "pattern": "\\w[\\w\\-]*\\w",
                          "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                          "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                          "shape_name": "ResourceName"
                        },
                        "isAttached": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                          "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                          "shape_name": "boolean"
                        },
                        "attachmentState": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                          "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                          "deprecated": true,
                          "shape_name": "string"
                        },
                        "gbInUse": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                          "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                          "deprecated": true,
                          "shape_name": "integer"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Describes a system disk or an block storage disk.</simpara>\n      ",
                      "documentation": "\n         <p>Describes a system disk or an block storage disk.</p>\n      ",
                      "shape_name": "Disk"
                    }
                  },
                  "ramSizeInGb": {
                    "type": "float",
                    "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB on the instance (e.g., <code>1.0</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The amount of RAM in GB on the instance (e.g., <code>1.0</code>).</p>\n      ",
                    "shape_name": "float"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The size of the vCPU and the amount of RAM for the instance.</simpara>\n      ",
                "documentation": "\n         <p>The size of the vCPU and the amount of RAM for the instance.</p>\n      ",
                "shape_name": "InstanceHardware"
              },
              "networking": {
                "type": "structure",
                "members": {
                  "monthlyTransfer": {
                    "type": "structure",
                    "members": {
                      "gbPerMonthAllocated": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The amount allocated per month (in GB).</simpara>\n      ",
                        "documentation": "\n         <p>The amount allocated per month (in GB).</p>\n      ",
                        "shape_name": "integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of data in GB allocated for monthly data transfers.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of data in GB allocated for monthly data transfers.</p>\n      ",
                    "shape_name": "MonthlyTransfer"
                  },
                  "ports": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the ports on the instance.</simpara>\n      ",
                    "documentation": "\n         <p>An array of key-value pairs containing information about the ports on the instance.</p>\n      ",
                    "shape_name": "InstancePortInfoList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "fromPort": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>The first port in the range.</simpara>\n      ",
                          "documentation": "\n         <p>The first port in the range.</p>\n      ",
                          "shape_name": "Port",
                          "min_length": 0,
                          "max_length": 65535
                        },
                        "toPort": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>The last port in the range.</simpara>\n      ",
                          "documentation": "\n         <p>The last port in the range.</p>\n      ",
                          "shape_name": "Port",
                          "min_length": 0,
                          "max_length": 65535
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "tcp",
                            "all",
                            "udp"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The protocol being used. Can be one of the following.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of \n      streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require \n      reliable data stream service, use UDP instead.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>all</code> - All transport layer protocol types. For more general information, see \n      <ulink url=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</ulink> on Wikipedia.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to \n      other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. \n      Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes \n      reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The protocol being used. Can be one of the following.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of \n      streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn't require \n      reliable data stream service, use UDP instead.</p>\n            </li>\n            <li>\n               <p>\n                  <code>all</code> - All transport layer protocol types. For more general information, see \n      <a href=\"https://en.wikipedia.org/wiki/Transport_layer\">Transport layer</a> on Wikipedia.</p>\n            </li>\n            <li>\n               <p>\n                  <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to \n      other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. \n      Applications that don't require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes \n      reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "NetworkProtocol"
                        },
                        "accessFrom": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).</p>\n      ",
                          "shape_name": "string"
                        },
                        "accessType": {
                          "type": "string",
                          "enum": [
                            "Public",
                            "Private"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The type of access (<code>Public</code> or <code>Private</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The type of access (<code>Public</code> or <code>Private</code>).</p>\n      ",
                          "shape_name": "PortAccessType"
                        },
                        "commonName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The common name.</simpara>\n      ",
                          "documentation": "\n         <p>The common name.</p>\n      ",
                          "shape_name": "string"
                        },
                        "accessDirection": {
                          "type": "string",
                          "enum": [
                            "inbound",
                            "outbound"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The access direction (<code>inbound</code> or <code>outbound</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The access direction (<code>inbound</code> or <code>outbound</code>).</p>\n      ",
                          "shape_name": "AccessDirection"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Describes information about the instance ports.</simpara>\n      ",
                      "documentation": "\n         <p>Describes information about the instance ports.</p>\n      ",
                      "shape_name": "InstancePortInfo"
                    }
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Information about the public ports and monthly data transfer rates for the instance.</simpara>\n      ",
                "documentation": "\n         <p>Information about the public ports and monthly data transfer rates for the instance.</p>\n      ",
                "shape_name": "InstanceNetworking"
              },
              "state": {
                "type": "structure",
                "members": {
                  "code": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The status code for the instance.</simpara>\n      ",
                    "documentation": "\n         <p>The status code for the instance.</p>\n      ",
                    "shape_name": "integer"
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The state of the instance (e.g., <code>running</code> or\n      <code>pending</code>).</p>\n      ",
                    "shape_name": "string"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The status code and the state (e.g., <code>running</code>) for the instance.</simpara>\n      ",
                "documentation": "\n         <p>The status code and the state (e.g., <code>running</code>) for the instance.</p>\n      ",
                "shape_name": "InstanceState"
              },
              "username": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The user name for connecting to the instance (e.g., <code>ec2-user</code>).</simpara>\n      ",
                "documentation": "\n         <p>The user name for connecting to the instance (e.g., <code>ec2-user</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "sshKeyName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).</simpara>\n      ",
                "documentation": "\n         <p>The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).</p>\n      ",
                "shape_name": "ResourceName"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the specified instance.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the specified instance.</p>\n      ",
            "shape_name": "Instance"
          }
        },
        "shape_name": "GetInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific Amazon Lightsail instance, which is a virtual private server.</p>\n      "
    },
    "AllocateStaticIp": {
      "name": "AllocateStaticIp",
      "input": {
        "type": "structure",
        "members": {
          "staticIpName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the static IP address.</simpara>\n\n      ",
            "documentation": "\n         <p>The name of the static IP address.</p>\n\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "AllocateStaticIpRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the static IP address you\n      allocated.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the static IP address you\n      allocated.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "AllocateStaticIpResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Allocates a static IP address.</p>\n      "
    },
    "ReleaseStaticIp": {
      "name": "ReleaseStaticIp",
      "input": {
        "type": "structure",
        "members": {
          "staticIpName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the static IP to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the static IP to delete.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "ReleaseStaticIpRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "ReleaseStaticIpResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a specific static IP from your account.</p>\n      "
    },
    "AttachStaticIp": {
      "name": "AttachStaticIp",
      "input": {
        "type": "structure",
        "members": {
          "staticIpName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the static IP.</simpara>\n      ",
            "documentation": "\n         <p>The name of the static IP.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The instance name to which you want to attach the static IP address.</simpara>\n      ",
            "documentation": "\n         <p>The instance name to which you want to attach the static IP address.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "AttachStaticIpRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your API operations.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "AttachStaticIpResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Attaches a static IP address to a specific Amazon Lightsail instance.</p>\n      "
    },
    "DetachStaticIp": {
      "name": "DetachStaticIp",
      "input": {
        "type": "structure",
        "members": {
          "staticIpName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the static IP to detach from the instance.</simpara>\n      ",
            "documentation": "\n         <p>The name of the static IP to detach from the instance.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DetachStaticIpRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your detach\n      static IP request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your detach\n      static IP request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DetachStaticIpResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Detaches a static IP from the Amazon Lightsail instance to which it is\n      attached.</p>\n      "
    },
    "GetStaticIps": {
      "name": "GetStaticIps",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get static IPs request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get static IPs request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetStaticIpsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "staticIps": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your get static IPs request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your get static IPs request.</p>\n      ",
            "shape_name": "StaticIpList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the static IP (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the static IP (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the static IP was created (e.g.,\n      <code>1479735304.222</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the static IP was created (e.g.,\n      <code>1479735304.222</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone where the static IP was created.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone where the static IP was created.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type (usually <code>StaticIp</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The resource type (usually <code>StaticIp</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "ipAddress": {
                  "type": "string",
                  "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                  "zonbookDocumentation": "\n         <simpara>The static IP address.</simpara>\n      ",
                  "documentation": "\n         <p>The static IP address.</p>\n      ",
                  "shape_name": "IpAddress"
                },
                "attachedTo": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "isAttached": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the static IP is attached.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the static IP is attached.</p>\n      ",
                  "shape_name": "boolean"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the static IP.</simpara>\n      ",
              "documentation": "\n         <p>Describes the static IP.</p>\n      ",
              "shape_name": "StaticIp"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get static IPs request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get static IPs request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetStaticIpsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all static IPs in the user's account.</p>\n      "
    },
    "GetStaticIp": {
      "name": "GetStaticIp",
      "input": {
        "type": "structure",
        "members": {
          "staticIpName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the static IP in Lightsail.</simpara>\n      ",
            "documentation": "\n         <p>The name of the static IP in Lightsail.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetStaticIpRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "staticIp": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the static IP (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the static IP (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the static IP was created (e.g.,\n      <code>1479735304.222</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the static IP was created (e.g.,\n      <code>1479735304.222</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone where the static IP was created.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone where the static IP was created.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type (usually <code>StaticIp</code>).</simpara>\n      ",
                "documentation": "\n         <p>The resource type (usually <code>StaticIp</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "ipAddress": {
                "type": "string",
                "pattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}",
                "zonbookDocumentation": "\n         <simpara>The static IP address.</simpara>\n      ",
                "documentation": "\n         <p>The static IP address.</p>\n      ",
                "shape_name": "IpAddress"
              },
              "attachedTo": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "ResourceName"
              },
              "isAttached": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the static IP is attached.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the static IP is attached.</p>\n      ",
                "shape_name": "boolean"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the requested static IP.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the requested static IP.</p>\n      ",
            "shape_name": "StaticIp"
          }
        },
        "shape_name": "GetStaticIpResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific static IP.</p>\n      "
    },
    "GetLoadBalancer": {
      "name": "GetLoadBalancer",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetLoadBalancerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "loadBalancer": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the load balancer (e.g., <code>my-load-balancer</code>).</simpara>\n      ",
                "documentation": "\n         <p>The name of the load balancer (e.g., <code>my-load-balancer</code>).</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the load balancer.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the load balancer.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date when your load balancer was created.</simpara>\n      ",
                "documentation": "\n         <p>The date when your load balancer was created.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.</simpara>\n      ",
                "documentation": "\n         <p>The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type (e.g., <code>LoadBalancer</code>.</simpara>\n      ",
                "documentation": "\n         <p>The resource type (e.g., <code>LoadBalancer</code>.</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "dnsName": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The DNS name of your Lightsail load balancer.</simpara>\n      ",
                "documentation": "\n         <p>The DNS name of your Lightsail load balancer.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "provisioning",
                  "active_impaired",
                  "failed",
                  "unknown"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of your load balancer. Valid values are below.</simpara>\n      ",
                "documentation": "\n         <p>The status of your load balancer. Valid values are below.</p>\n      ",
                "shape_name": "LoadBalancerState"
              },
              "protocol": {
                "type": "string",
                "enum": [
                  "HTTP_HTTPS",
                  "HTTP"
                ],
                "zonbookDocumentation": "\n         <simpara>The protocol you have enabled for your load balancer. Valid values are below.</simpara>\n         <simpara>You can't just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</simpara>\n      ",
                "documentation": "\n         <p>The protocol you have enabled for your load balancer. Valid values are below.</p>\n         <p>You can't just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</p>\n      ",
                "shape_name": "LoadBalancerProtocol"
              },
              "publicPorts": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.</simpara>\n      ",
                "documentation": "\n         <p>An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.</p>\n      ",
                "shape_name": "PortList",
                "members": {
                  "type": "integer",
                  "shape_name": "Port",
                  "documentation": null,
                  "min_length": 0,
                  "max_length": 65535
                }
              },
              "healthCheckPath": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.</simpara>\n      ",
                "documentation": "\n         <p>The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "instancePort": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it's port 80. For HTTPS traffic, it's port 443.</simpara>\n      ",
                "documentation": "\n         <p>The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it's port 80. For HTTPS traffic, it's port 443.</p>\n      ",
                "shape_name": "integer"
              },
              "instanceHealthSummary": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>An array of InstanceHealthSummary objects describing the health of the load balancer.</simpara>\n      ",
                "documentation": "\n         <p>An array of InstanceHealthSummary objects describing the health of the load balancer.</p>\n      ",
                "shape_name": "InstanceHealthSummaryList",
                "members": {
                  "type": "structure",
                  "members": {
                    "instanceName": {
                      "type": "string",
                      "pattern": "\\w[\\w\\-]*\\w",
                      "zonbookDocumentation": "\n         <simpara>The name of the Lightsail instance for which you are requesting health check data.</simpara>\n      ",
                      "documentation": "\n         <p>The name of the Lightsail instance for which you are requesting health check data.</p>\n      ",
                      "shape_name": "ResourceName"
                    },
                    "instanceHealth": {
                      "type": "string",
                      "enum": [
                        "initial",
                        "healthy",
                        "unhealthy",
                        "unused",
                        "draining",
                        "unavailable"
                      ],
                      "zonbookDocumentation": "\n         <simpara>Describes the overall instance health. Valid values are below.</simpara>\n      ",
                      "documentation": "\n         <p>Describes the overall instance health. Valid values are below.</p>\n      ",
                      "shape_name": "InstanceHealthState"
                    },
                    "instanceHealthReason": {
                      "type": "string",
                      "enum": [
                        "Lb.RegistrationInProgress",
                        "Lb.InitialHealthChecking",
                        "Lb.InternalError",
                        "Instance.ResponseCodeMismatch",
                        "Instance.Timeout",
                        "Instance.FailedHealthChecks",
                        "Instance.NotRegistered",
                        "Instance.NotInUse",
                        "Instance.DeregistrationInProgress",
                        "Instance.InvalidState",
                        "Instance.IpUnusable"
                      ],
                      "zonbookDocumentation": "\n         <simpara>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</simpara>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>initial</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.RegistrationInProgress</code>\n                  </emphasis> - The target instance is in the process of being registered with the load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.InitialHealthChecking</code>\n                  </emphasis> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>unhealthy</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.ResponseCodeMismatch</code>\n                  </emphasis> - The health checks did not return an expected HTTP code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.Timeout</code>\n                  </emphasis> - The health check requests timed out.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.FailedHealthChecks</code>\n                  </emphasis> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</para>\n            </listitem>        \n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.InternalError</code>\n                  </emphasis> - The health checks failed due to an internal error.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>unused</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.NotRegistered</code>\n                  </emphasis> - The target instance is not registered with the target group.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.NotInUse</code>\n                  </emphasis> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.IpUnusable</code>\n                  </emphasis> - The target IP address is reserved for use by a Lightsail load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.InvalidState</code>\n                  </emphasis> - The target is in the stopped or terminated state.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>draining</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.DeregistrationInProgress</code>\n                  </emphasis> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</p>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>initial</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.RegistrationInProgress</code>\n                  </b> - The target instance is in the process of being registered with the load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.InitialHealthChecking</code>\n                  </b> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>unhealthy</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.ResponseCodeMismatch</code>\n                  </b> - The health checks did not return an expected HTTP code.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.Timeout</code>\n                  </b> - The health check requests timed out.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.FailedHealthChecks</code>\n                  </b> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.InternalError</code>\n                  </b> - The health checks failed due to an internal error.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>unused</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.NotRegistered</code>\n                  </b> - The target instance is not registered with the target group.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.NotInUse</code>\n                  </b> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.IpUnusable</code>\n                  </b> - The target IP address is reserved for use by a Lightsail load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.InvalidState</code>\n                  </b> - The target is in the stopped or terminated state.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>draining</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.DeregistrationInProgress</code>\n                  </b> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "InstanceHealthReason"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes information about the health of the instance.</simpara>\n      ",
                  "documentation": "\n         <p>Describes information about the health of the instance.</p>\n      ",
                  "shape_name": "InstanceHealthSummary"
                }
              },
              "tlsCertificateSummaries": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.</simpara>\n      ",
                "documentation": "\n         <p>An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.</p>\n      ",
                "shape_name": "LoadBalancerTlsCertificateSummaryList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "\\w[\\w\\-]*\\w",
                      "zonbookDocumentation": "\n         <simpara>The name of the SSL/TLS certificate.</simpara>\n      ",
                      "documentation": "\n         <p>The name of the SSL/TLS certificate.</p>\n      ",
                      "shape_name": "ResourceName"
                    },
                    "isAttached": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <simpara>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</simpara>\n      ",
                      "documentation": "\n         <p>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</p>\n      ",
                      "shape_name": "boolean"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Provides a summary of SSL/TLS certificate metadata.</simpara>\n      ",
                  "documentation": "\n         <p>Provides a summary of SSL/TLS certificate metadata.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateSummary"
                }
              },
              "configurationOptions": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>A string to string map of the configuration options for your load balancer. Valid values are listed below.</simpara>\n      ",
                "documentation": "\n         <p>A string to string map of the configuration options for your load balancer. Valid values are listed below.</p>\n      ",
                "shape_name": "LoadBalancerConfigurationOptions",
                "keys": {
                  "type": "string",
                  "enum": [
                    "HealthCheckPath",
                    "SessionStickinessEnabled",
                    "SessionStickiness_LB_CookieDurationSeconds"
                  ],
                  "shape_name": "LoadBalancerAttributeName",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An object containing information about your load balancer.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about your load balancer.</p>\n      ",
            "shape_name": "LoadBalancer"
          }
        },
        "shape_name": "GetLoadBalancerResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about the specified Lightsail load balancer.</p>\n      "
    },
    "GetLoadBalancers": {
      "name": "GetLoadBalancers",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for paginating the results from your GetLoadBalancers request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for paginating the results from your GetLoadBalancers request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetLoadBalancersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "loadBalancers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of LoadBalancer objects describing your load balancers.</simpara>\n      ",
            "documentation": "\n         <p>An array of LoadBalancer objects describing your load balancers.</p>\n      ",
            "shape_name": "LoadBalancerList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the load balancer (e.g., <code>my-load-balancer</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name of the load balancer (e.g., <code>my-load-balancer</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the load balancer.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the load balancer.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date when your load balancer was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date when your load balancer was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type (e.g., <code>LoadBalancer</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The resource type (e.g., <code>LoadBalancer</code>.</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "dnsName": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The DNS name of your Lightsail load balancer.</simpara>\n      ",
                  "documentation": "\n         <p>The DNS name of your Lightsail load balancer.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "provisioning",
                    "active_impaired",
                    "failed",
                    "unknown"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of your load balancer. Valid values are below.</simpara>\n      ",
                  "documentation": "\n         <p>The status of your load balancer. Valid values are below.</p>\n      ",
                  "shape_name": "LoadBalancerState"
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP_HTTPS",
                    "HTTP"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The protocol you have enabled for your load balancer. Valid values are below.</simpara>\n         <simpara>You can't just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The protocol you have enabled for your load balancer. Valid values are below.</p>\n         <p>You can't just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</p>\n      ",
                  "shape_name": "LoadBalancerProtocol"
                },
                "publicPorts": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.</simpara>\n      ",
                  "documentation": "\n         <p>An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.</p>\n      ",
                  "shape_name": "PortList",
                  "members": {
                    "type": "integer",
                    "shape_name": "Port",
                    "documentation": null,
                    "min_length": 0,
                    "max_length": 65535
                  }
                },
                "healthCheckPath": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.</simpara>\n      ",
                  "documentation": "\n         <p>The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "instancePort": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it's port 80. For HTTPS traffic, it's port 443.</simpara>\n      ",
                  "documentation": "\n         <p>The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it's port 80. For HTTPS traffic, it's port 443.</p>\n      ",
                  "shape_name": "integer"
                },
                "instanceHealthSummary": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of InstanceHealthSummary objects describing the health of the load balancer.</simpara>\n      ",
                  "documentation": "\n         <p>An array of InstanceHealthSummary objects describing the health of the load balancer.</p>\n      ",
                  "shape_name": "InstanceHealthSummaryList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "instanceName": {
                        "type": "string",
                        "pattern": "\\w[\\w\\-]*\\w",
                        "zonbookDocumentation": "\n         <simpara>The name of the Lightsail instance for which you are requesting health check data.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Lightsail instance for which you are requesting health check data.</p>\n      ",
                        "shape_name": "ResourceName"
                      },
                      "instanceHealth": {
                        "type": "string",
                        "enum": [
                          "initial",
                          "healthy",
                          "unhealthy",
                          "unused",
                          "draining",
                          "unavailable"
                        ],
                        "zonbookDocumentation": "\n         <simpara>Describes the overall instance health. Valid values are below.</simpara>\n      ",
                        "documentation": "\n         <p>Describes the overall instance health. Valid values are below.</p>\n      ",
                        "shape_name": "InstanceHealthState"
                      },
                      "instanceHealthReason": {
                        "type": "string",
                        "enum": [
                          "Lb.RegistrationInProgress",
                          "Lb.InitialHealthChecking",
                          "Lb.InternalError",
                          "Instance.ResponseCodeMismatch",
                          "Instance.Timeout",
                          "Instance.FailedHealthChecks",
                          "Instance.NotRegistered",
                          "Instance.NotInUse",
                          "Instance.DeregistrationInProgress",
                          "Instance.InvalidState",
                          "Instance.IpUnusable"
                        ],
                        "zonbookDocumentation": "\n         <simpara>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</simpara>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>initial</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.RegistrationInProgress</code>\n                  </emphasis> - The target instance is in the process of being registered with the load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.InitialHealthChecking</code>\n                  </emphasis> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>unhealthy</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.ResponseCodeMismatch</code>\n                  </emphasis> - The health checks did not return an expected HTTP code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.Timeout</code>\n                  </emphasis> - The health check requests timed out.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.FailedHealthChecks</code>\n                  </emphasis> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</para>\n            </listitem>        \n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Lb.InternalError</code>\n                  </emphasis> - The health checks failed due to an internal error.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>unused</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.NotRegistered</code>\n                  </emphasis> - The target instance is not registered with the target group.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.NotInUse</code>\n                  </emphasis> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.IpUnusable</code>\n                  </emphasis> - The target IP address is reserved for use by a Lightsail load balancer.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.InvalidState</code>\n                  </emphasis> - The target is in the stopped or terminated state.</para>\n            </listitem>\n         </itemizedlist>\n\n         <simpara>If <emphasis role=\"bold\">\n               <code>instanceHealth</code>\n            </emphasis> is <code>draining</code>, the <emphasis role=\"bold\">\n               <code>instanceHealthReason</code>\n            </emphasis> value can be one of the following:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <emphasis role=\"bold\">\n                     <code>Instance.DeregistrationInProgress</code>\n                  </emphasis> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</p>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>initial</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.RegistrationInProgress</code>\n                  </b> - The target instance is in the process of being registered with the load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.InitialHealthChecking</code>\n                  </b> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>unhealthy</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.ResponseCodeMismatch</code>\n                  </b> - The health checks did not return an expected HTTP code.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.Timeout</code>\n                  </b> - The health check requests timed out.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.FailedHealthChecks</code>\n                  </b> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Lb.InternalError</code>\n                  </b> - The health checks failed due to an internal error.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>unused</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.NotRegistered</code>\n                  </b> - The target instance is not registered with the target group.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.NotInUse</code>\n                  </b> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.IpUnusable</code>\n                  </b> - The target IP address is reserved for use by a Lightsail load balancer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.InvalidState</code>\n                  </b> - The target is in the stopped or terminated state.</p>\n            </li>\n         </ul>\n\n         <p>If <b>\n               <code>instanceHealth</code>\n            </b> is <code>draining</code>, the <b>\n               <code>instanceHealthReason</code>\n            </b> value can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance.DeregistrationInProgress</code>\n                  </b> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "InstanceHealthReason"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes information about the health of the instance.</simpara>\n      ",
                    "documentation": "\n         <p>Describes information about the health of the instance.</p>\n      ",
                    "shape_name": "InstanceHealthSummary"
                  }
                },
                "tlsCertificateSummaries": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.</simpara>\n      ",
                  "documentation": "\n         <p>An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateSummaryList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "name": {
                        "type": "string",
                        "pattern": "\\w[\\w\\-]*\\w",
                        "zonbookDocumentation": "\n         <simpara>The name of the SSL/TLS certificate.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the SSL/TLS certificate.</p>\n      ",
                        "shape_name": "ResourceName"
                      },
                      "isAttached": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</simpara>\n      ",
                        "documentation": "\n         <p>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</p>\n      ",
                        "shape_name": "boolean"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Provides a summary of SSL/TLS certificate metadata.</simpara>\n      ",
                    "documentation": "\n         <p>Provides a summary of SSL/TLS certificate metadata.</p>\n      ",
                    "shape_name": "LoadBalancerTlsCertificateSummary"
                  }
                },
                "configurationOptions": {
                  "type": "map",
                  "zonbookDocumentation": "\n         <simpara>A string to string map of the configuration options for your load balancer. Valid values are listed below.</simpara>\n      ",
                  "documentation": "\n         <p>A string to string map of the configuration options for your load balancer. Valid values are listed below.</p>\n      ",
                  "shape_name": "LoadBalancerConfigurationOptions",
                  "keys": {
                    "type": "string",
                    "enum": [
                      "HealthCheckPath",
                      "SessionStickinessEnabled",
                      "SessionStickiness_LB_CookieDurationSeconds"
                    ],
                    "shape_name": "LoadBalancerAttributeName",
                    "documentation": null
                  },
                  "members": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the Lightsail load balancer.</simpara>\n      ",
              "documentation": "\n         <p>Describes the Lightsail load balancer.</p>\n      ",
              "shape_name": "LoadBalancer"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your GetLoadBalancers request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your GetLoadBalancers request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetLoadBalancersResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all load balancers in an account.</p>\n         <p>If you are describing a long list of load balancers, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>\n      "
    },
    "CreateLoadBalancer": {
      "name": "CreateLoadBalancer",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The name of your load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instancePort": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The instance port where you're creating your load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The instance port where you're creating your load balancer.</p>\n      ",
            "required": true,
            "shape_name": "Port",
            "min_length": 0,
            "max_length": 65535
          },
          "healthCheckPath": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., <code>\"/\"</code>).</simpara>\n         <simpara>You may want to specify a custom health check path other than the root of your application if your home page loads slowly or has a lot of media or scripting on it.</simpara>\n      ",
            "documentation": "\n         <p>The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., <code>\"/\"</code>).</p>\n         <p>You may want to specify a custom health check path other than the root of your application if your home page loads slowly or has a lot of media or scripting on it.</p>\n      ",
            "shape_name": "string"
          },
          "certificateName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the SSL/TLS certificate.</simpara>\n         <simpara>If you specify <code>certificateName</code>, then <code>certificateDomainName</code> is required (and vice-versa).</simpara>\n      ",
            "documentation": "\n         <p>The name of the SSL/TLS certificate.</p>\n         <p>If you specify <code>certificateName</code>, then <code>certificateDomainName</code> is required (and vice-versa).</p>\n      ",
            "shape_name": "ResourceName"
          },
          "certificateDomainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The domain name with which your certificate is associated (e.g., <code>example.com</code>).</simpara>\n         <simpara>If you specify <code>certificateDomainName</code>, then <code>certificateName</code> is required (and vice-versa).</simpara>\n      ",
            "documentation": "\n         <p>The domain name with which your certificate is associated (e.g., <code>example.com</code>).</p>\n         <p>If you specify <code>certificateDomainName</code>, then <code>certificateName</code> is required (and vice-versa).</p>\n      ",
            "shape_name": "DomainName"
          },
          "certificateAlternativeNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The optional alternative domains and subdomains to use with your SSL/TLS certificate (e.g., <code>www.example.com</code>, <code>example.com</code>, <code>m.example.com</code>, <code>blog.example.com</code>).</simpara>\n      ",
            "documentation": "\n         <p>The optional alternative domains and subdomains to use with your SSL/TLS certificate (e.g., <code>www.example.com</code>, <code>example.com</code>, <code>m.example.com</code>, <code>blog.example.com</code>).</p>\n      ",
            "shape_name": "DomainNameList",
            "members": {
              "type": "string",
              "shape_name": "DomainName",
              "documentation": null
            }
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateLoadBalancerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object containing information about the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateLoadBalancerResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing\">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p>\n         <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p>\n      "
    },
    "DeleteLoadBalancer": {
      "name": "DeleteLoadBalancer",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteLoadBalancerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteLoadBalancerResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.</p>\n      "
    },
    "AttachInstancesToLoadBalancer": {
      "name": "AttachInstancesToLoadBalancer",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instanceNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of strings representing the instance name(s) you want to attach to your load balancer.</simpara>\n         <simpara>An instance must be <code>running</code> before you can attach it to your load balancer.</simpara>\n         <simpara>There are no additional limits on the number of instances you can attach to your load balancer, aside from the limit of Lightsail instances you can create in your account (20).</simpara>\n      ",
            "documentation": "\n         <p>An array of strings representing the instance name(s) you want to attach to your load balancer.</p>\n         <p>An instance must be <code>running</code> before you can attach it to your load balancer.</p>\n         <p>There are no additional limits on the number of instances you can attach to your load balancer, aside from the limit of Lightsail instances you can create in your account (20).</p>\n      ",
            "required": true,
            "shape_name": "ResourceNameList",
            "members": {
              "type": "string",
              "pattern": "\\w[\\w\\-]*\\w",
              "shape_name": "ResourceName",
              "documentation": null
            }
          }
        },
        "shape_name": "AttachInstancesToLoadBalancerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object representing the API operations.</simpara>\n      \n      ",
            "documentation": "\n         <p>An object representing the API operations.</p>\n      \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "AttachInstancesToLoadBalancerResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Attaches one or more Lightsail instances to a load balancer.</p>\n         <p>After some time, the instances are attached to the load balancer and the health check status is available.</p>\n      "
    },
    "DetachInstancesFromLoadBalancer": {
      "name": "DetachInstancesFromLoadBalancer",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the Lightsail load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The name of the Lightsail load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instanceNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of strings containing the names of the instances you want to detach from the load balancer.</simpara>\n      ",
            "documentation": "\n         <p>An array of strings containing the names of the instances you want to detach from the load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceNameList",
            "members": {
              "type": "string",
              "pattern": "\\w[\\w\\-]*\\w",
              "shape_name": "ResourceName",
              "documentation": null
            }
          }
        },
        "shape_name": "DetachInstancesFromLoadBalancerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DetachInstancesFromLoadBalancerResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Detaches the specified instances from a Lightsail load balancer.</p>\n         <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p>\n      "
    },
    "UpdateLoadBalancerAttribute": {
      "name": "UpdateLoadBalancerAttribute",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "attributeName": {
            "type": "string",
            "enum": [
              "HealthCheckPath",
              "SessionStickinessEnabled",
              "SessionStickiness_LB_CookieDurationSeconds"
            ],
            "zonbookDocumentation": "\n         <simpara>The name of the attribute you want to update. Valid values are below.</simpara>\n      ",
            "documentation": "\n         <p>The name of the attribute you want to update. Valid values are below.</p>\n      ",
            "required": true,
            "shape_name": "LoadBalancerAttributeName"
          },
          "attributeValue": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The value that you want to specify for the attribute name.</simpara>\n      ",
            "documentation": "\n         <p>The value that you want to specify for the attribute name.</p>\n      ",
            "required": true,
            "shape_name": "StringMax256",
            "min_length": 1,
            "max_length": 256
          }
        },
        "shape_name": "UpdateLoadBalancerAttributeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "UpdateLoadBalancerAttributeResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Updates the specified attribute for a load balancer. You can only update one attribute at a time.</p>\n      "
    },
    "GetLoadBalancerMetricData": {
      "name": "GetLoadBalancerMetricData",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "metricName": {
            "type": "string",
            "enum": [
              "ClientTLSNegotiationErrorCount",
              "HealthyHostCount",
              "UnhealthyHostCount",
              "HTTPCode_LB_4XX_Count",
              "HTTPCode_LB_5XX_Count",
              "HTTPCode_Instance_2XX_Count",
              "HTTPCode_Instance_3XX_Count",
              "HTTPCode_Instance_4XX_Count",
              "HTTPCode_Instance_5XX_Count",
              "InstanceResponseTime",
              "RejectedConnectionCount",
              "RequestCount"
            ],
            "zonbookDocumentation": "\n         <simpara>The metric about which you want to return information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>ClientTLSNegotiationErrorCount</code>\n                  </emphasis> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HealthyHostCount</code>\n                  </emphasis> - The number of target instances that are considered healthy.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>UnhealthyHostCount</code>\n                  </emphasis> - The number of target instances that are considered unhealthy.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_LB_4XX_Count</code>\n                  </emphasis> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_LB_5XX_Count</code>\n                  </emphasis> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_2XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_3XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_4XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_5XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>InstanceResponseTime</code>\n                  </emphasis> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Average</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>RejectedConnectionCount</code>\n                  </emphasis> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>RequestCount</code>\n                  </emphasis> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The metric about which you want to return information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>ClientTLSNegotiationErrorCount</code>\n                  </b> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HealthyHostCount</code>\n                  </b> - The number of target instances that are considered healthy.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>UnhealthyHostCount</code>\n                  </b> - The number of target instances that are considered unhealthy.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_LB_4XX_Count</code>\n                  </b> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_LB_5XX_Count</code>\n                  </b> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_2XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_3XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_4XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_5XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>InstanceResponseTime</code>\n                  </b> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>RejectedConnectionCount</code>\n                  </b> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>RequestCount</code>\n                  </b> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "LoadBalancerMetricName"
          },
          "period": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The granularity, in seconds, of the returned data points.</simpara>\n      ",
            "documentation": "\n         <p>The granularity, in seconds, of the returned data points.</p>\n      ",
            "required": true,
            "shape_name": "MetricPeriod",
            "min_length": 60,
            "max_length": 86400
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start time of the period.</simpara>\n      ",
            "documentation": "\n         <p>The start time of the period.</p>\n      ",
            "required": true,
            "shape_name": "timestamp"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end time of the period.</simpara>\n      ",
            "documentation": "\n         <p>The end time of the period.</p>\n      ",
            "required": true,
            "shape_name": "timestamp"
          },
          "unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n         <simpara>The unit for the time period request. Valid values are listed below.</simpara>\n      ",
            "documentation": "\n         <p>The unit for the time period request. Valid values are listed below.</p>\n      ",
            "required": true,
            "shape_name": "MetricUnit"
          },
          "statistics": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of statistics that you want to request metrics for. Valid values are listed below.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>SampleCount</code>\n                  </emphasis> - The count (number) of data points used for the statistical calculation.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Average</code>\n                  </emphasis> - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum. This comparison helps you to know when to increase or decrease your resources as needed.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Sum</code>\n                  </emphasis> - All values submitted for the matching metric added together. This statistic can be useful for determining the total volume of a metric.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Minimum</code>\n                  </emphasis> - The lowest value observed during the specified period. You can use this value to determine low volumes of activity for your application.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Maximum</code>\n                  </emphasis> - The highest value observed during the specified period. You can use this value to determine high volumes of activity for your application.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>An array of statistics that you want to request metrics for. Valid values are listed below.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>SampleCount</code>\n                  </b> - The count (number) of data points used for the statistical calculation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Average</code>\n                  </b> - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum. This comparison helps you to know when to increase or decrease your resources as needed.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Sum</code>\n                  </b> - All values submitted for the matching metric added together. This statistic can be useful for determining the total volume of a metric.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Minimum</code>\n                  </b> - The lowest value observed during the specified period. You can use this value to determine low volumes of activity for your application.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Maximum</code>\n                  </b> - The highest value observed during the specified period. You can use this value to determine high volumes of activity for your application.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "MetricStatisticList",
            "members": {
              "type": "string",
              "enum": [
                "Minimum",
                "Maximum",
                "Sum",
                "Average",
                "SampleCount"
              ],
              "shape_name": "MetricStatistic",
              "documentation": null
            }
          }
        },
        "shape_name": "GetLoadBalancerMetricDataRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "metricName": {
            "type": "string",
            "enum": [
              "ClientTLSNegotiationErrorCount",
              "HealthyHostCount",
              "UnhealthyHostCount",
              "HTTPCode_LB_4XX_Count",
              "HTTPCode_LB_5XX_Count",
              "HTTPCode_Instance_2XX_Count",
              "HTTPCode_Instance_3XX_Count",
              "HTTPCode_Instance_4XX_Count",
              "HTTPCode_Instance_5XX_Count",
              "InstanceResponseTime",
              "RejectedConnectionCount",
              "RequestCount"
            ],
            "zonbookDocumentation": "\n         <simpara>The metric about which you are receiving information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>ClientTLSNegotiationErrorCount</code>\n                  </emphasis> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HealthyHostCount</code>\n                  </emphasis> - The number of target instances that are considered healthy.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>UnhealthyHostCount</code>\n                  </emphasis> - The number of target instances that are considered unhealthy.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_LB_4XX_Count</code>\n                  </emphasis> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_LB_5XX_Count</code>\n                  </emphasis> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_2XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_3XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_4XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>HTTPCode_Instance_5XX_Count</code>\n                  </emphasis> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>InstanceResponseTime</code>\n                  </emphasis> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Average</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>RejectedConnectionCount</code>\n                  </emphasis> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>RequestCount</code>\n                  </emphasis> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</simpara>\n               <simpara>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The metric about which you are receiving information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>ClientTLSNegotiationErrorCount</code>\n                  </b> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HealthyHostCount</code>\n                  </b> - The number of target instances that are considered healthy.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>UnhealthyHostCount</code>\n                  </b> - The number of target instances that are considered unhealthy.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_LB_4XX_Count</code>\n                  </b> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_LB_5XX_Count</code>\n                  </b> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_2XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_3XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_4XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>HTTPCode_Instance_5XX_Count</code>\n                  </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>InstanceResponseTime</code>\n                  </b> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>RejectedConnectionCount</code>\n                  </b> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>RequestCount</code>\n                  </b> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p>\n               <p>\n                  <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "LoadBalancerMetricName"
          },
          "metricData": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of metric datapoint objects.</simpara>\n      ",
            "documentation": "\n         <p>An array of metric datapoint objects.</p>\n      ",
            "shape_name": "MetricDatapointList",
            "members": {
              "type": "structure",
              "members": {
                "average": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The average.</simpara>\n      ",
                  "documentation": "\n         <p>The average.</p>\n      ",
                  "shape_name": "double"
                },
                "maximum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The maximum.</simpara>\n      ",
                  "documentation": "\n         <p>The maximum.</p>\n      ",
                  "shape_name": "double"
                },
                "minimum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The minimum.</simpara>\n      ",
                  "documentation": "\n         <p>The minimum.</p>\n      ",
                  "shape_name": "double"
                },
                "sampleCount": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sample count.</simpara>\n      ",
                  "documentation": "\n         <p>The sample count.</p>\n      ",
                  "shape_name": "double"
                },
                "sum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sum.</simpara>\n      ",
                  "documentation": "\n         <p>The sum.</p>\n      ",
                  "shape_name": "double"
                },
                "timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp (e.g., <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp (e.g., <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "timestamp"
                },
                "unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The unit. </simpara>\n      ",
                  "documentation": "\n         <p>The unit. </p>\n      ",
                  "shape_name": "MetricUnit"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the metric data point.</simpara>\n      ",
              "documentation": "\n         <p>Describes the metric data point.</p>\n      ",
              "shape_name": "MetricDatapoint"
            }
          }
        },
        "shape_name": "GetLoadBalancerMetricDataResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about health metrics for your Lightsail load balancer.</p>\n      "
    },
    "CreateLoadBalancerTlsCertificate": {
      "name": "CreateLoadBalancerTlsCertificate",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The load balancer name where you want to create the SSL/TLS certificate.</simpara>\n      ",
            "documentation": "\n         <p>The load balancer name where you want to create the SSL/TLS certificate.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "certificateName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The SSL/TLS certificate name.</simpara>\n         <simpara>You can have up to 10 certificates in your account at one time. Each Lightsail load balancer can have up to 2 certificates associated with it at one time. There is also an overall limit to the number of certificates that can be issue in a 365-day period. For more information, see <ulink url=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\">Limits</ulink>.</simpara>\n      ",
            "documentation": "\n         <p>The SSL/TLS certificate name.</p>\n         <p>You can have up to 10 certificates in your account at one time. Each Lightsail load balancer can have up to 2 certificates associated with it at one time. There is also an overall limit to the number of certificates that can be issue in a 365-day period. For more information, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\">Limits</a>.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "certificateDomainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.</simpara>\n      ",
            "documentation": "\n         <p>The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          },
          "certificateAlternativeNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of strings listing alternative domains and subdomains for your SSL/TLS certificate. Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).</simpara>\n      ",
            "documentation": "\n         <p>An array of strings listing alternative domains and subdomains for your SSL/TLS certificate. Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).</p>\n      ",
            "shape_name": "DomainNameList",
            "members": {
              "type": "string",
              "shape_name": "DomainName",
              "documentation": null
            }
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateLoadBalancerTlsCertificateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object containing information about the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateLoadBalancerTlsCertificateResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a Lightsail load balancer TLS certificate.</p>\n         <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>\n      "
    },
    "DeleteLoadBalancerTlsCertificate": {
      "name": "DeleteLoadBalancerTlsCertificate",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The load balancer name.</simpara>\n      ",
            "documentation": "\n         <p>The load balancer name.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "certificateName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The SSL/TLS certificate name.</simpara>\n      ",
            "documentation": "\n         <p>The SSL/TLS certificate name.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When <code>true</code>, forces the deletion of an SSL/TLS certificate.</simpara>\n         <simpara>There can be two certificates associated with a Lightsail load balancer: the primary and the backup. The <code>force</code> parameter \n        is required when the primary SSL/TLS certificate is in use by an instance attached to the load balancer.</simpara>\n      ",
            "documentation": "\n         <p>When <code>true</code>, forces the deletion of an SSL/TLS certificate.</p>\n         <p>There can be two certificates associated with a Lightsail load balancer: the primary and the backup. The <code>force</code> parameter \n        is required when the primary SSL/TLS certificate is in use by an instance attached to the load balancer.</p>\n      ",
            "shape_name": "boolean"
          }
        },
        "shape_name": "DeleteLoadBalancerTlsCertificateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteLoadBalancerTlsCertificateResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes an SSL/TLS certificate associated with a Lightsail load balancer.</p>\n      "
    },
    "AttachLoadBalancerTlsCertificate": {
      "name": "AttachLoadBalancerTlsCertificate",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer to which you want to associate the SSL/TLS certificate.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer to which you want to associate the SSL/TLS certificate.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "certificateName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your SSL/TLS certificate.</simpara>\n      ",
            "documentation": "\n         <p>The name of your SSL/TLS certificate.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "AttachLoadBalancerTlsCertificateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object representing the API operations.</simpara>\n         <simpara>These SSL/TLS certificates are only usable by Lightsail load balancers. You can't get the certificate and use it for another purpose.</simpara>\n      ",
            "documentation": "\n         <p>An object representing the API operations.</p>\n         <p>These SSL/TLS certificates are only usable by Lightsail load balancers. You can't get the certificate and use it for another purpose.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "AttachLoadBalancerTlsCertificateResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>\n         <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> operation with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p>\n      "
    },
    "GetLoadBalancerTlsCertificates": {
      "name": "GetLoadBalancerTlsCertificates",
      "input": {
        "type": "structure",
        "members": {
          "loadBalancerName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the load balancer you associated with your SSL/TLS certificate.</simpara>\n      ",
            "documentation": "\n         <p>The name of the load balancer you associated with your SSL/TLS certificate.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetLoadBalancerTlsCertificatesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tlsCertificates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of LoadBalancerTlsCertificate objects describing your SSL/TLS certificates.</simpara>\n      ",
            "documentation": "\n         <p>An array of LoadBalancerTlsCertificate objects describing your SSL/TLS certificates.</p>\n      ",
            "shape_name": "LoadBalancerTlsCertificateList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the SSL/TLS certificate (e.g., <code>my-certificate</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name of the SSL/TLS certificate (e.g., <code>my-certificate</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the SSL/TLS certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the SSL/TLS certificate.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer or SSL/TLS certificate. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about your Lightsail load balancer or SSL/TLS certificate. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time when you created your SSL/TLS certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The time when you created your SSL/TLS certificate.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where you created your certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Region and Availability Zone where you created your certificate.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type (e.g., <code>LoadBalancerTlsCertificate</code>).</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Instance</code>\n                  </emphasis> - A Lightsail instance (a virtual private server)</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>StaticIp</code>\n                  </emphasis> - A static IP address</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>KeyPair</code>\n                  </emphasis> - The key pair used to connect to a Lightsail instance</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>InstanceSnapshot</code>\n                  </emphasis> - A Lightsail instance snapshot</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Domain</code>\n                  </emphasis> - A DNS zone</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>PeeredVpc</code>\n                  </emphasis> - A peered VPC</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>LoadBalancer</code>\n                  </emphasis> - A Lightsail load balancer</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>LoadBalancerTlsCertificate</code>\n                  </emphasis> - An SSL/TLS certificate associated with a Lightsail load balancer</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>Disk</code>\n                  </emphasis> - A Lightsail block storage disk</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">\n                     <code>DiskSnapshot</code>\n                  </emphasis> - A block storage disk snapshot</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The resource type (e.g., <code>LoadBalancerTlsCertificate</code>).</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>Instance</code>\n                  </b> - A Lightsail instance (a virtual private server)</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>StaticIp</code>\n                  </b> - A static IP address</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>KeyPair</code>\n                  </b> - The key pair used to connect to a Lightsail instance</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>InstanceSnapshot</code>\n                  </b> - A Lightsail instance snapshot</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Domain</code>\n                  </b> - A DNS zone</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>PeeredVpc</code>\n                  </b> - A peered VPC</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>LoadBalancer</code>\n                  </b> - A Lightsail load balancer</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>LoadBalancerTlsCertificate</code>\n                  </b> - An SSL/TLS certificate associated with a Lightsail load balancer</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>Disk</code>\n                  </b> - A Lightsail block storage disk</p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>DiskSnapshot</code>\n                  </b> - A block storage disk snapshot</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "loadBalancerName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The load balancer name where your SSL/TLS certificate is attached.</simpara>\n      ",
                  "documentation": "\n         <p>The load balancer name where your SSL/TLS certificate is attached.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "isAttached": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</simpara>\n      ",
                  "documentation": "\n         <p>When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.</p>\n      ",
                  "shape_name": "boolean"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING_VALIDATION",
                    "ISSUED",
                    "INACTIVE",
                    "EXPIRED",
                    "VALIDATION_TIMED_OUT",
                    "REVOKED",
                    "FAILED",
                    "UNKNOWN"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the SSL/TLS certificate. Valid values are below.</simpara>\n      ",
                  "documentation": "\n         <p>The status of the SSL/TLS certificate. Valid values are below.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateStatus"
                },
                "domainName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The domain name for your SSL/TLS certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The domain name for your SSL/TLS certificate.</p>\n      ",
                  "shape_name": "DomainName"
                },
                "domainValidationRecords": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of LoadBalancerTlsCertificateDomainValidationRecord objects describing the records.</simpara>\n      ",
                  "documentation": "\n         <p>An array of LoadBalancerTlsCertificateDomainValidationRecord objects describing the records.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateDomainValidationRecordList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "name": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>A fully qualified domain name in the certificate. For example, <code>example.com</code>.</simpara>\n      ",
                        "documentation": "\n         <p>A fully qualified domain name in the certificate. For example, <code>example.com</code>.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "type": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The type of validation record. For example, <code>CNAME</code> for domain validation.</simpara>\n      ",
                        "documentation": "\n         <p>The type of validation record. For example, <code>CNAME</code> for domain validation.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "value": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The value for that type.</simpara>\n      ",
                        "documentation": "\n         <p>The value for that type.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "validationStatus": {
                        "type": "string",
                        "enum": [
                          "PENDING_VALIDATION",
                          "FAILED",
                          "SUCCESS"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The validation status. Valid values are listed below.</simpara>\n      ",
                        "documentation": "\n         <p>The validation status. Valid values are listed below.</p>\n      ",
                        "shape_name": "LoadBalancerTlsCertificateDomainStatus"
                      },
                      "domainName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The domain name against which your SSL/TLS certificate was validated.</simpara>\n      ",
                        "documentation": "\n         <p>The domain name against which your SSL/TLS certificate was validated.</p>\n      ",
                        "shape_name": "DomainName"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes the validation record of each domain name in the SSL/TLS certificate.</simpara>\n      ",
                    "documentation": "\n         <p>Describes the validation record of each domain name in the SSL/TLS certificate.</p>\n      ",
                    "shape_name": "LoadBalancerTlsCertificateDomainValidationRecord"
                  }
                },
                "failureReason": {
                  "type": "string",
                  "enum": [
                    "NO_AVAILABLE_CONTACTS",
                    "ADDITIONAL_VERIFICATION_REQUIRED",
                    "DOMAIN_NOT_ALLOWED",
                    "INVALID_PUBLIC_DOMAIN",
                    "OTHER"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The reason for the SSL/TLS certificate validation failure.</simpara>\n      ",
                  "documentation": "\n         <p>The reason for the SSL/TLS certificate validation failure.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateFailureReason"
                },
                "issuedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time when the SSL/TLS certificate was issued.</simpara>\n      ",
                  "documentation": "\n         <p>The time when the SSL/TLS certificate was issued.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "issuer": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The issuer of the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The issuer of the certificate.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "keyAlgorithm": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The algorithm that was used to generate the key pair (the public and private key).</simpara>\n      ",
                  "documentation": "\n         <p>The algorithm that was used to generate the key pair (the public and private key).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "notAfter": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the SSL/TLS certificate expires.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the SSL/TLS certificate expires.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "notBefore": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the SSL/TLS certificate is first valid.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the SSL/TLS certificate is first valid.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "renewalSummary": {
                  "type": "structure",
                  "members": {
                    "renewalStatus": {
                      "type": "string",
                      "enum": [
                        "PENDING_AUTO_RENEWAL",
                        "PENDING_VALIDATION",
                        "SUCCESS",
                        "FAILED"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The status of Lightsail's managed renewal of the certificate. Valid values are listed below.</simpara>\n      ",
                      "documentation": "\n         <p>The status of Lightsail's managed renewal of the certificate. Valid values are listed below.</p>\n      ",
                      "shape_name": "LoadBalancerTlsCertificateRenewalStatus"
                    },
                    "domainValidationOptions": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>Contains information about the validation of each domain name in the certificate, as it pertains to Lightsail's managed renewal. This is different from the initial validation that occurs as a result of the RequestCertificate request.</simpara>\n      ",
                      "documentation": "\n         <p>Contains information about the validation of each domain name in the certificate, as it pertains to Lightsail's managed renewal. This is different from the initial validation that occurs as a result of the RequestCertificate request.</p>\n      ",
                      "shape_name": "LoadBalancerTlsCertificateDomainValidationOptionList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "domainName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The fully qualified domain name in the certificate request.</simpara>\n      ",
                            "documentation": "\n         <p>The fully qualified domain name in the certificate request.</p>\n      ",
                            "shape_name": "DomainName"
                          },
                          "validationStatus": {
                            "type": "string",
                            "enum": [
                              "PENDING_VALIDATION",
                              "FAILED",
                              "SUCCESS"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The status of the domain validation. Valid values are listed below.</simpara>\n      ",
                            "documentation": "\n         <p>The status of the domain validation. Valid values are listed below.</p>\n      ",
                            "shape_name": "LoadBalancerTlsCertificateDomainStatus"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.</simpara>\n      ",
                        "documentation": "\n         <p>Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.</p>\n      ",
                        "shape_name": "LoadBalancerTlsCertificateDomainValidationOption"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>An object containing information about the status of Lightsail's managed renewal for the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>An object containing information about the status of Lightsail's managed renewal for the certificate.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateRenewalSummary"
                },
                "revocationReason": {
                  "type": "string",
                  "enum": [
                    "UNSPECIFIED",
                    "KEY_COMPROMISE",
                    "CA_COMPROMISE",
                    "AFFILIATION_CHANGED",
                    "SUPERCEDED",
                    "CESSATION_OF_OPERATION",
                    "CERTIFICATE_HOLD",
                    "REMOVE_FROM_CRL",
                    "PRIVILEGE_WITHDRAWN",
                    "A_A_COMPROMISE"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The reason the certificate was revoked. Valid values are below.</simpara>\n      ",
                  "documentation": "\n         <p>The reason the certificate was revoked. Valid values are below.</p>\n      ",
                  "shape_name": "LoadBalancerTlsCertificateRevocationReason"
                },
                "revokedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the SSL/TLS certificate was revoked.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the SSL/TLS certificate was revoked.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "serial": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The serial number of the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The serial number of the certificate.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "signatureAlgorithm": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The algorithm that was used to sign the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The algorithm that was used to sign the certificate.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "subject": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The name of the entity that is associated with the public key contained in the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the entity that is associated with the public key contained in the certificate.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "subjectAlternativeNames": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>One or more domains or subdomains included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CNAME) of the certificate and additional domain names that can be used to connect to the website, such as <code>example.com</code>, <code>www.example.com</code>, or <code>m.example.com</code>.</simpara>\n      ",
                  "documentation": "\n         <p>One or more domains or subdomains included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CNAME) of the certificate and additional domain names that can be used to connect to the website, such as <code>example.com</code>, <code>www.example.com</code>, or <code>m.example.com</code>.</p>\n      ",
                  "shape_name": "StringList",
                  "members": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a load balancer SSL/TLS certificate.</simpara>\n         <simpara>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</simpara>\n      ",
              "documentation": "\n         <p>Describes a load balancer SSL/TLS certificate.</p>\n         <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>\n      ",
              "shape_name": "LoadBalancerTlsCertificate"
            }
          }
        },
        "shape_name": "GetLoadBalancerTlsCertificatesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p>\n         <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>\n         <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>\n      "
    },
    "CreateDisk": {
      "name": "CreateDisk",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique Lightsail disk name (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique Lightsail disk name (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "availabilityZone": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</simpara>\n         <simpara>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</p>\n         <p>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          },
          "sizeInGb": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The size of the disk in GB (e.g., <code>32</code>).</simpara>\n      ",
            "documentation": "\n         <p>The size of the disk in GB (e.g., <code>32</code>).</p>\n      ",
            "required": true,
            "shape_name": "integer"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateDiskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateDiskResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a block storage disk that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail\">Regions and Availability Zones in Lightsail</a>.</p>\n      "
    },
    "DeleteDisk": {
      "name": "DeleteDisk",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique name of the disk you want to delete (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique name of the disk you want to delete (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteDiskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteDiskResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p>\n         <note>\n            <p>The disk may remain in the <code>deleting</code> state for several minutes.</p>\n         </note>\n      "
    },
    "GetDisks": {
      "name": "GetDisks",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your GetDisks request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your GetDisks request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDisksRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "disks": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of objects containing information about all block storage disks.</simpara>\n      ",
            "documentation": "\n         <p>An array of objects containing information about all block storage disks.</p>\n      ",
            "shape_name": "DiskList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                  "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "sizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                  "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                  "shape_name": "integer"
                },
                "isSystemDisk": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                  "shape_name": "boolean"
                },
                "iops": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                  "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                  "shape_name": "integer"
                },
                "path": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                  "documentation": "\n         <p>The disk path.</p>\n      ",
                  "shape_name": "string"
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "error",
                    "available",
                    "in-use",
                    "unknown"
                  ],
                  "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                  "shape_name": "DiskState"
                },
                "attachedTo": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                  "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "isAttached": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                  "shape_name": "boolean"
                },
                "attachmentState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                  "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                  "deprecated": true,
                  "shape_name": "string"
                },
                "gbInUse": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                  "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                  "deprecated": true,
                  "shape_name": "integer"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a system disk or an block storage disk.</simpara>\n      ",
              "documentation": "\n         <p>Describes a system disk or an block storage disk.</p>\n      ",
              "shape_name": "Disk"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your GetDisks request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your GetDisks request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDisksResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all block storage disks in your AWS account and region.</p>\n         <p>If you are describing a long list of disks, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>\n      "
    },
    "GetDisk": {
      "name": "GetDisk",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the disk (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The name of the disk (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetDiskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "disk": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "sizeInGb": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                "shape_name": "integer"
              },
              "isSystemDisk": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                "shape_name": "boolean"
              },
              "iops": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                "shape_name": "integer"
              },
              "path": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                "documentation": "\n         <p>The disk path.</p>\n      ",
                "shape_name": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "error",
                  "available",
                  "in-use",
                  "unknown"
                ],
                "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                "shape_name": "DiskState"
              },
              "attachedTo": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "isAttached": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                "shape_name": "boolean"
              },
              "attachmentState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                "deprecated": true,
                "shape_name": "string"
              },
              "gbInUse": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                "deprecated": true,
                "shape_name": "integer"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An object containing information about the disk.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about the disk.</p>\n      ",
            "shape_name": "Disk"
          }
        },
        "shape_name": "GetDiskResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific block storage disk.</p>\n      "
    },
    "AttachDisk": {
      "name": "AttachDisk",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique Lightsail disk name (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique Lightsail disk name (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the Lightsail instance where you want to utilize the storage disk.</simpara>\n      ",
            "documentation": "\n         <p>The name of the Lightsail instance where you want to utilize the storage disk.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "diskPath": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).</simpara>\n      ",
            "documentation": "\n         <p>The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          }
        },
        "shape_name": "AttachDiskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "AttachDiskResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.</p>\n      "
    },
    "DetachDisk": {
      "name": "DetachDisk",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique name of the disk you want to detach from your instance (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique name of the disk you want to detach from your instance (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DetachDiskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DetachDiskResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your \n        operating system before stopping the instance and detaching the disk.</p>\n      "
    },
    "CreateDiskFromSnapshot": {
      "name": "CreateDiskFromSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique Lightsail disk name (e.g., <code>my-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique Lightsail disk name (e.g., <code>my-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "diskSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the disk snapshot (e.g., <code>my-snapshot</code>) from which to create the new storage disk.</simpara>\n      ",
            "documentation": "\n         <p>The name of the disk snapshot (e.g., <code>my-snapshot</code>) from which to create the new storage disk.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "availabilityZone": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</simpara>\n         <simpara>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</p>\n         <p>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          },
          "sizeInGb": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The size of the disk in GB (e.g., <code>32</code>).</simpara>\n      ",
            "documentation": "\n         <p>The size of the disk in GB (e.g., <code>32</code>).</p>\n      ",
            "required": true,
            "shape_name": "integer"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateDiskFromSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateDiskFromSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a block storage disk from a disk snapshot that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail\">Regions and Availability Zones in Lightsail</a>.</p>\n      "
    },
    "CreateDiskSnapshot": {
      "name": "CreateDiskSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "diskName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The unique name of the source disk (e.g., <code>my-source-disk</code>).</simpara>\n      ",
            "documentation": "\n         <p>The unique name of the source disk (e.g., <code>my-source-disk</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "diskSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the destination disk snapshot (e.g., <code>my-disk-snapshot</code>) based on the source disk.</simpara>\n      ",
            "documentation": "\n         <p>The name of the destination disk snapshot (e.g., <code>my-disk-snapshot</code>) based on the source disk.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateDiskSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateDiskSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p>\n         <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p>\n      "
    },
    "DeleteDiskSnapshot": {
      "name": "DeleteDiskSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "diskSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the disk snapshot you want to delete (e.g., <code>my-disk-snapshot</code>).</simpara>\n      ",
            "documentation": "\n         <p>The name of the disk snapshot you want to delete (e.g., <code>my-disk-snapshot</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteDiskSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the API operations.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the API operations.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteDiskSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified disk snapshot.</p>\n\n         <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p>\n      "
    },
    "GetDiskSnapshots": {
      "name": "GetDiskSnapshots",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your GetDiskSnapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your GetDiskSnapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDiskSnapshotsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "diskSnapshots": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of objects containing information about all block storage disk snapshots.</simpara>\n      ",
            "documentation": "\n         <p>An array of objects containing information about all block storage disk snapshots.</p>\n      ",
            "shape_name": "DiskSnapshotList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk snapshot.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date when the disk snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date when the disk snapshot was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Region and Availability Zone where the disk snapshot was created.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>DiskSnapshot</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Lightsail resource type (e.g., <code>DiskSnapshot</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "sizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                  "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                  "shape_name": "integer"
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "completed",
                    "error",
                    "unknown"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the disk snapshot operation.</simpara>\n      ",
                  "documentation": "\n         <p>The status of the disk snapshot operation.</p>\n      ",
                  "shape_name": "DiskSnapshotState"
                },
                "progress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The progress of the disk snapshot operation.</simpara>\n      ",
                  "documentation": "\n         <p>The progress of the disk snapshot operation.</p>\n      ",
                  "shape_name": "string"
                },
                "fromDiskName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The unique name of the source disk from which you are creating the disk snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The unique name of the source disk from which you are creating the disk snapshot.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "fromDiskArn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the source disk from which you are creating the disk snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the source disk from which you are creating the disk snapshot.</p>\n      ",
                  "shape_name": "NonEmptyString"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a block storage disk snapshot.</simpara>\n      ",
              "documentation": "\n         <p>Describes a block storage disk snapshot.</p>\n      ",
              "shape_name": "DiskSnapshot"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your GetDiskSnapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your GetDiskSnapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDiskSnapshotsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all block storage disk snapshots in your AWS account and region.</p>\n         <p>If you are describing a long list of disk snapshots, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>\n      "
    },
    "GetDiskSnapshot": {
      "name": "GetDiskSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "diskSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</simpara>\n      ",
            "documentation": "\n         <p>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetDiskSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "diskSnapshot": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</simpara>\n      ",
                "documentation": "\n         <p>The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk snapshot.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date when the disk snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The date when the disk snapshot was created.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The AWS Region and Availability Zone where the disk snapshot was created.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>DiskSnapshot</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Lightsail resource type (e.g., <code>DiskSnapshot</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "sizeInGb": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                "shape_name": "integer"
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "completed",
                  "error",
                  "unknown"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the disk snapshot operation.</simpara>\n      ",
                "documentation": "\n         <p>The status of the disk snapshot operation.</p>\n      ",
                "shape_name": "DiskSnapshotState"
              },
              "progress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The progress of the disk snapshot operation.</simpara>\n      ",
                "documentation": "\n         <p>The progress of the disk snapshot operation.</p>\n      ",
                "shape_name": "string"
              },
              "fromDiskName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The unique name of the source disk from which you are creating the disk snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The unique name of the source disk from which you are creating the disk snapshot.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "fromDiskArn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the source disk from which you are creating the disk snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the source disk from which you are creating the disk snapshot.</p>\n      ",
                "shape_name": "NonEmptyString"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An object containing information about the disk snapshot.</simpara>\n      ",
            "documentation": "\n         <p>An object containing information about the disk snapshot.</p>\n      ",
            "shape_name": "DiskSnapshot"
          }
        },
        "shape_name": "GetDiskSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific block storage disk snapshot.</p>\n      "
    },
    "CreateInstanceSnapshot": {
      "name": "CreateInstanceSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "instanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name for your new snapshot.</simpara>\n      ",
            "documentation": "\n         <p>The name for your new snapshot.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The Lightsail instance on which to base your snapshot.</simpara>\n      ",
            "documentation": "\n         <p>The Lightsail instance on which to base your snapshot.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateInstanceSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your create\n      instances snapshot request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your create\n      instances snapshot request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateInstanceSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a snapshot of a specific virtual private server, or\n        <i>instance</i>. You can use a snapshot to create a new instance that is based\n      on that snapshot.</p>\n      "
    },
    "CopyInstanceSnapshot": {
      "name": "CopyInstanceSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "sourceInstanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          },
          "destinationInstanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "shape_name": "ResourceName",
            "documentation": null
          },
          "sourceRegion": {
            "type": "string",
            "enum": [
              "us-east-1",
              "us-east-2",
              "us-west-1",
              "us-west-2",
              "eu-west-1",
              "eu-west-2",
              "eu-west-3",
              "eu-central-1",
              "ca-central-1",
              "ap-south-1",
              "ap-southeast-1",
              "ap-southeast-2",
              "ap-northeast-1",
              "ap-northeast-2"
            ],
            "required": true,
            "shape_name": "RegionName",
            "documentation": null
          }
        },
        "shape_name": "CopyInstanceSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CopyInstanceSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "DeleteInstanceSnapshot": {
      "name": "DeleteInstanceSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "instanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the snapshot to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the snapshot to delete.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteInstanceSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your delete\n      instance snapshot request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your delete\n      instance snapshot request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteInstanceSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a specific snapshot of a virtual private server (or\n        <i>instance</i>).</p>\n      "
    },
    "GetInstanceSnapshots": {
      "name": "GetInstanceSnapshots",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get instance snapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get instance snapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetInstanceSnapshotsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceSnapshots": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get instance snapshots request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get instance snapshots request.</p>\n      ",
            "shape_name": "InstanceSnapshotList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the snapshot.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the snapshot (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the snapshot (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where you created the snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The region name and Availability Zone where you created the snapshot.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of resource (usually <code>InstanceSnapshot</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The type of resource (usually <code>InstanceSnapshot</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "error",
                    "available"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The state the snapshot is in.</simpara>\n      ",
                  "documentation": "\n         <p>The state the snapshot is in.</p>\n      ",
                  "shape_name": "InstanceSnapshotState"
                },
                "progress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The progress of the snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The progress of the snapshot.</p>\n      ",
                  "shape_name": "string"
                },
                "fromAttachedDisks": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of disk objects containing information about all block storage disks.</simpara>\n      ",
                  "documentation": "\n         <p>An array of disk objects containing information about all block storage disks.</p>\n      ",
                  "shape_name": "DiskList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "name": {
                        "type": "string",
                        "pattern": "\\w[\\w\\-]*\\w",
                        "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                        "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                        "shape_name": "ResourceName"
                      },
                      "arn": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "supportCode": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                        "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                        "shape_name": "string"
                      },
                      "createdAt": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                        "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                        "shape_name": "IsoDate"
                      },
                      "location": {
                        "type": "structure",
                        "members": {
                          "availabilityZone": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                            "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                            "shape_name": "string"
                          },
                          "regionName": {
                            "type": "string",
                            "enum": [
                              "us-east-1",
                              "us-east-2",
                              "us-west-1",
                              "us-west-2",
                              "eu-west-1",
                              "eu-west-2",
                              "eu-west-3",
                              "eu-central-1",
                              "ca-central-1",
                              "ap-south-1",
                              "ap-southeast-1",
                              "ap-southeast-2",
                              "ap-northeast-1",
                              "ap-northeast-2"
                            ],
                            "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                            "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                            "shape_name": "RegionName"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                        "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                        "shape_name": "ResourceLocation"
                      },
                      "resourceType": {
                        "type": "string",
                        "enum": [
                          "Instance",
                          "StaticIp",
                          "KeyPair",
                          "InstanceSnapshot",
                          "Domain",
                          "PeeredVpc",
                          "LoadBalancer",
                          "LoadBalancerTlsCertificate",
                          "Disk",
                          "DiskSnapshot",
                          "RelationalDatabase",
                          "RelationalDatabaseSnapshot"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                        "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                        "shape_name": "ResourceType"
                      },
                      "tags": {
                        "type": "list",
                        "internalonly": true,
                        "shape_name": "TagList",
                        "documentation": null,
                        "members": {
                          "type": "structure",
                          "members": {
                            "key": {
                              "type": "string",
                              "shape_name": "TagKey",
                              "documentation": null
                            },
                            "value": {
                              "type": "string",
                              "shape_name": "TagValue",
                              "documentation": null
                            }
                          },
                          "shape_name": "Tag",
                          "documentation": null
                        }
                      },
                      "sizeInGb": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                        "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                        "shape_name": "integer"
                      },
                      "isSystemDisk": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                        "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                        "shape_name": "boolean"
                      },
                      "iops": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                        "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                        "shape_name": "integer"
                      },
                      "path": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                        "documentation": "\n         <p>The disk path.</p>\n      ",
                        "shape_name": "string"
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "error",
                          "available",
                          "in-use",
                          "unknown"
                        ],
                        "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                        "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                        "shape_name": "DiskState"
                      },
                      "attachedTo": {
                        "type": "string",
                        "pattern": "\\w[\\w\\-]*\\w",
                        "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                        "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                        "shape_name": "ResourceName"
                      },
                      "isAttached": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                        "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                        "shape_name": "boolean"
                      },
                      "attachmentState": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                        "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                        "deprecated": true,
                        "shape_name": "string"
                      },
                      "gbInUse": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                        "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                        "deprecated": true,
                        "shape_name": "integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes a system disk or an block storage disk.</simpara>\n      ",
                    "documentation": "\n         <p>Describes a system disk or an block storage disk.</p>\n      ",
                    "shape_name": "Disk"
                  }
                },
                "fromInstanceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The instance from which the snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The instance from which the snapshot was created.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "fromInstanceArn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., \n        <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., \n        <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "fromBlueprintId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The blueprint ID from which you created the snapshot (e.g., \n      <code>os_debian_8_3</code>). A blueprint is a virtual private server (or\n        <emphasis>instance</emphasis>) image used to create instances quickly.</simpara>\n      ",
                  "documentation": "\n         <p>The blueprint ID from which you created the snapshot (e.g., \n      <code>os_debian_8_3</code>). A blueprint is a virtual private server (or\n        <i>instance</i>) image used to create instances quickly.</p>\n      ",
                  "shape_name": "string"
                },
                "fromBundleId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "sizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size in GB of the SSD.</simpara>\n      ",
                  "documentation": "\n         <p>The size in GB of the SSD.</p>\n      ",
                  "shape_name": "integer"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the snapshot of the virtual private server, or <emphasis>instance</emphasis>.</simpara>\n      ",
              "documentation": "\n         <p>Describes the snapshot of the virtual private server, or <i>instance</i>.</p>\n      ",
              "shape_name": "InstanceSnapshot"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get instance snapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get instance snapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetInstanceSnapshotsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns all instance snapshots for the user's account.</p>\n      "
    },
    "GetInstanceSnapshot": {
      "name": "GetInstanceSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "instanceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the snapshot for which you are requesting information.</simpara>\n      ",
            "documentation": "\n         <p>The name of the snapshot for which you are requesting information.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetInstanceSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceSnapshot": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The name of the snapshot.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the snapshot (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the snapshot (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where you created the snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The region name and Availability Zone where you created the snapshot.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of resource (usually <code>InstanceSnapshot</code>).</simpara>\n      ",
                "documentation": "\n         <p>The type of resource (usually <code>InstanceSnapshot</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "error",
                  "available"
                ],
                "zonbookDocumentation": "\n         <simpara>The state the snapshot is in.</simpara>\n      ",
                "documentation": "\n         <p>The state the snapshot is in.</p>\n      ",
                "shape_name": "InstanceSnapshotState"
              },
              "progress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The progress of the snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The progress of the snapshot.</p>\n      ",
                "shape_name": "string"
              },
              "fromAttachedDisks": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>An array of disk objects containing information about all block storage disks.</simpara>\n      ",
                "documentation": "\n         <p>An array of disk objects containing information about all block storage disks.</p>\n      ",
                "shape_name": "DiskList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "\\w[\\w\\-]*\\w",
                      "zonbookDocumentation": "\n         <simpara>The unique name of the disk.</simpara>\n      ",
                      "documentation": "\n         <p>The unique name of the disk.</p>\n      ",
                      "shape_name": "ResourceName"
                    },
                    "arn": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the disk.</simpara>\n      ",
                      "documentation": "\n         <p>The Amazon Resource Name (ARN) of the disk.</p>\n      ",
                      "shape_name": "NonEmptyString"
                    },
                    "supportCode": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                      "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                      "shape_name": "string"
                    },
                    "createdAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <simpara>The date when the disk was created.</simpara>\n      ",
                      "documentation": "\n         <p>The date when the disk was created.</p>\n      ",
                      "shape_name": "IsoDate"
                    },
                    "location": {
                      "type": "structure",
                      "members": {
                        "availabilityZone": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                          "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                          "shape_name": "string"
                        },
                        "regionName": {
                          "type": "string",
                          "enum": [
                            "us-east-1",
                            "us-east-2",
                            "us-west-1",
                            "us-west-2",
                            "eu-west-1",
                            "eu-west-2",
                            "eu-west-3",
                            "eu-central-1",
                            "ca-central-1",
                            "ap-south-1",
                            "ap-southeast-1",
                            "ap-southeast-2",
                            "ap-northeast-1",
                            "ap-northeast-2"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                          "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                          "shape_name": "RegionName"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zone where the disk is located.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region and Availability Zone where the disk is located.</p>\n      ",
                      "shape_name": "ResourceLocation"
                    },
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "Instance",
                        "StaticIp",
                        "KeyPair",
                        "InstanceSnapshot",
                        "Domain",
                        "PeeredVpc",
                        "LoadBalancer",
                        "LoadBalancerTlsCertificate",
                        "Disk",
                        "DiskSnapshot",
                        "RelationalDatabase",
                        "RelationalDatabaseSnapshot"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The Lightsail resource type (e.g., <code>Disk</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The Lightsail resource type (e.g., <code>Disk</code>).</p>\n      ",
                      "shape_name": "ResourceType"
                    },
                    "tags": {
                      "type": "list",
                      "internalonly": true,
                      "shape_name": "TagList",
                      "documentation": null,
                      "members": {
                        "type": "structure",
                        "members": {
                          "key": {
                            "type": "string",
                            "shape_name": "TagKey",
                            "documentation": null
                          },
                          "value": {
                            "type": "string",
                            "shape_name": "TagValue",
                            "documentation": null
                          }
                        },
                        "shape_name": "Tag",
                        "documentation": null
                      }
                    },
                    "sizeInGb": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The size of the disk in GB.</simpara>\n      ",
                      "documentation": "\n         <p>The size of the disk in GB.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "isSystemDisk": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</simpara>\n      ",
                      "documentation": "\n         <p>A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).</p>\n      ",
                      "shape_name": "boolean"
                    },
                    "iops": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The input/output operations per second (IOPS) of the disk.</simpara>\n      ",
                      "documentation": "\n         <p>The input/output operations per second (IOPS) of the disk.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "path": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The disk path.</simpara>\n      ",
                      "documentation": "\n         <p>The disk path.</p>\n      ",
                      "shape_name": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "error",
                        "available",
                        "in-use",
                        "unknown"
                      ],
                      "zonbookDocumentation": "\n         <simpara>Describes the status of the disk.</simpara>\n      ",
                      "documentation": "\n         <p>Describes the status of the disk.</p>\n      ",
                      "shape_name": "DiskState"
                    },
                    "attachedTo": {
                      "type": "string",
                      "pattern": "\\w[\\w\\-]*\\w",
                      "zonbookDocumentation": "\n         <simpara>The resources to which the disk is attached.</simpara>\n      ",
                      "documentation": "\n         <p>The resources to which the disk is attached.</p>\n      ",
                      "shape_name": "ResourceName"
                    },
                    "isAttached": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the disk is attached.</simpara>\n      ",
                      "documentation": "\n         <p>A Boolean value indicating whether the disk is attached.</p>\n      ",
                      "shape_name": "boolean"
                    },
                    "attachmentState": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>(Deprecated) The attachment state of the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</simpara>\n         </note>\n      ",
                      "documentation": "\n         <p>(Deprecated) The attachment state of the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but \n      still included in the response. Use <code>isAttached</code> instead.</p>\n         </note>\n      ",
                      "deprecated": true,
                      "shape_name": "string"
                    },
                    "gbInUse": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>(Deprecated) The number of GB in use by the disk.</simpara>\n         <note>\n            <simpara>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n\n      ",
                      "documentation": "\n         <p>(Deprecated) The number of GB in use by the disk.</p>\n         <note>\n            <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n\n      ",
                      "deprecated": true,
                      "shape_name": "integer"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes a system disk or an block storage disk.</simpara>\n      ",
                  "documentation": "\n         <p>Describes a system disk or an block storage disk.</p>\n      ",
                  "shape_name": "Disk"
                }
              },
              "fromInstanceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The instance from which the snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The instance from which the snapshot was created.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "fromInstanceArn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., \n        <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., \n        <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "fromBlueprintId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The blueprint ID from which you created the snapshot (e.g., \n      <code>os_debian_8_3</code>). A blueprint is a virtual private server (or\n        <emphasis>instance</emphasis>) image used to create instances quickly.</simpara>\n      ",
                "documentation": "\n         <p>The blueprint ID from which you created the snapshot (e.g., \n      <code>os_debian_8_3</code>). A blueprint is a virtual private server (or\n        <i>instance</i>) image used to create instances quickly.</p>\n      ",
                "shape_name": "string"
              },
              "fromBundleId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).</simpara>\n      ",
                "documentation": "\n         <p>The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).</p>\n      ",
                "shape_name": "string"
              },
              "sizeInGb": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The size in GB of the SSD.</simpara>\n      ",
                "documentation": "\n         <p>The size in GB of the SSD.</p>\n      ",
                "shape_name": "integer"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get instance snapshot request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get instance snapshot request.</p>\n      ",
            "shape_name": "InstanceSnapshot"
          }
        },
        "shape_name": "GetInstanceSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific instance snapshot.</p>\n      "
    },
    "LockServiceLinkedRole": {
      "name": "LockServiceLinkedRole",
      "input": {
        "type": "structure",
        "members": {
          "RoleArn": {
            "type": "string",
            "required": true,
            "shape_name": "arnType",
            "documentation": null,
            "min_length": 20,
            "max_length": 2048
          },
          "Timeout": {
            "type": "long",
            "required": true,
            "shape_name": "longType",
            "documentation": null
          }
        },
        "shape_name": "LockServiceLinkedRoleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CanBeDeleted": {
            "type": "boolean",
            "required": true,
            "shape_name": "booleanType",
            "documentation": null
          },
          "ReasonOfFailure": {
            "type": "string",
            "shape_name": "stringType",
            "documentation": null
          },
          "RelatedResources": {
            "type": "list",
            "shape_name": "stringListType",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "stringType",
              "documentation": null
            }
          }
        },
        "shape_name": "LockServiceLinkedRoleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockServiceException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockClientException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "UnlockServiceLinkedRole": {
      "name": "UnlockServiceLinkedRole",
      "input": {
        "type": "structure",
        "members": {
          "RoleArn": {
            "type": "string",
            "required": true,
            "shape_name": "arnType",
            "documentation": null,
            "min_length": 20,
            "max_length": 2048
          },
          "DeletionStatus": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED"
            ],
            "shape_name": "deletionStatus",
            "documentation": null
          }
        },
        "shape_name": "UnlockServiceLinkedRoleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UnlockServiceLinkedRoleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockServiceException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockClientException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "ExportSnapshot": {
      "name": "ExportSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "sourceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          }
        },
        "shape_name": "ExportSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "ExportSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "CopySnapshot": {
      "name": "CopySnapshot",
      "input": {
        "type": "structure",
        "members": {
          "sourceSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          },
          "targetSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          },
          "sourceRegion": {
            "type": "string",
            "enum": [
              "us-east-1",
              "us-east-2",
              "us-west-1",
              "us-west-2",
              "eu-west-1",
              "eu-west-2",
              "eu-west-3",
              "eu-central-1",
              "ca-central-1",
              "ap-south-1",
              "ap-southeast-1",
              "ap-southeast-2",
              "ap-northeast-1",
              "ap-northeast-2"
            ],
            "required": true,
            "shape_name": "RegionName",
            "documentation": null
          }
        },
        "shape_name": "CopySnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CopySnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "ImportKeyPair": {
      "name": "ImportKeyPair",
      "input": {
        "type": "structure",
        "members": {
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the key pair for which you want to import the public key.</simpara>\n      ",
            "documentation": "\n         <p>The name of the key pair for which you want to import the public key.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "publicKeyBase64": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A base64-encoded public key of the <code>ssh-rsa</code> type.</simpara>\n      ",
            "documentation": "\n         <p>A base64-encoded public key of the <code>ssh-rsa</code> type.</p>\n      ",
            "required": true,
            "shape_name": "Base64"
          }
        },
        "shape_name": "ImportKeyPairRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "ImportKeyPairResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Imports a public SSH key from a specific key pair.</p>\n      "
    },
    "CreateKeyPair": {
      "name": "CreateKeyPair",
      "input": {
        "type": "structure",
        "members": {
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name for your new key pair.</simpara>\n      ",
            "documentation": "\n         <p>The name for your new key pair.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateKeyPairRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "keyPair": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The friendly name of the SSH key pair.</simpara>\n      ",
                "documentation": "\n         <p>The friendly name of the SSH key pair.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where the key pair was created.</simpara>\n      ",
                "documentation": "\n         <p>The region name and Availability Zone where the key pair was created.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type (usually <code>KeyPair</code>).</simpara>\n      ",
                "documentation": "\n         <p>The resource type (usually <code>KeyPair</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "fingerprint": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The RSA fingerprint of the key pair.</simpara>\n      ",
                "documentation": "\n         <p>The RSA fingerprint of the key pair.</p>\n      ",
                "shape_name": "Base64"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the new key pair you just\n      created.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the new key pair you just\n      created.</p>\n      ",
            "shape_name": "KeyPair"
          },
          "publicKeyBase64": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A base64-encoded public key of the <code>ssh-rsa</code> type.</simpara>\n      ",
            "documentation": "\n         <p>A base64-encoded public key of the <code>ssh-rsa</code> type.</p>\n      ",
            "shape_name": "Base64"
          },
          "privateKeyBase64": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A base64-encoded RSA private key.</simpara>\n      ",
            "documentation": "\n         <p>A base64-encoded RSA private key.</p>\n      ",
            "shape_name": "Base64"
          },
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your create key\n      pair request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your create key\n      pair request.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "CreateKeyPairResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates an SSH key pair.</p>\n      "
    },
    "DeleteKeyPair": {
      "name": "DeleteKeyPair",
      "input": {
        "type": "structure",
        "members": {
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the key pair to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the key pair to delete.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteKeyPairRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your delete key\n      pair request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your delete key\n      pair request.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "DeleteKeyPairResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a specific SSH key pair.</p>\n      "
    },
    "DownloadDefaultKeyPair": {
      "name": "DownloadDefaultKeyPair",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DownloadDefaultKeyPairRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "publicKeyBase64": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A base64-encoded public key of the <code>ssh-rsa</code> type.</simpara>\n      ",
            "documentation": "\n         <p>A base64-encoded public key of the <code>ssh-rsa</code> type.</p>\n      ",
            "shape_name": "Base64"
          },
          "privateKeyBase64": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A base64-encoded RSA private key.</simpara>\n      ",
            "documentation": "\n         <p>A base64-encoded RSA private key.</p>\n      ",
            "shape_name": "Base64"
          }
        },
        "shape_name": "DownloadDefaultKeyPairResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Downloads the default SSH key pair from the user's account.</p>\n      "
    },
    "GetKeyPairs": {
      "name": "GetKeyPairs",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get key pairs request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get key pairs request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetKeyPairsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "keyPairs": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the key pairs.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the key pairs.</p>\n      ",
            "shape_name": "KeyPairList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The friendly name of the SSH key pair.</simpara>\n      ",
                  "documentation": "\n         <p>The friendly name of the SSH key pair.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where the key pair was created.</simpara>\n      ",
                  "documentation": "\n         <p>The region name and Availability Zone where the key pair was created.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type (usually <code>KeyPair</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The resource type (usually <code>KeyPair</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "fingerprint": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The RSA fingerprint of the key pair.</simpara>\n      ",
                  "documentation": "\n         <p>The RSA fingerprint of the key pair.</p>\n      ",
                  "shape_name": "Base64"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the SSH key pair.</simpara>\n      ",
              "documentation": "\n         <p>Describes the SSH key pair.</p>\n      ",
              "shape_name": "KeyPair"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get key pairs request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get key pairs request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetKeyPairsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all key pairs in the user's account.</p>\n      "
    },
    "GetKeyPair": {
      "name": "GetKeyPair",
      "input": {
        "type": "structure",
        "members": {
          "keyPairName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the key pair for which you are requesting information.</simpara>\n      ",
            "documentation": "\n         <p>The name of the key pair for which you are requesting information.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetKeyPairRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "keyPair": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The friendly name of the SSH key pair.</simpara>\n      ",
                "documentation": "\n         <p>The friendly name of the SSH key pair.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the key pair (e.g.,\n        <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the key pair was created (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region name and Availability Zone where the key pair was created.</simpara>\n      ",
                "documentation": "\n         <p>The region name and Availability Zone where the key pair was created.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type (usually <code>KeyPair</code>).</simpara>\n      ",
                "documentation": "\n         <p>The resource type (usually <code>KeyPair</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "fingerprint": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The RSA fingerprint of the key pair.</simpara>\n      ",
                "documentation": "\n         <p>The RSA fingerprint of the key pair.</p>\n      ",
                "shape_name": "Base64"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the key pair.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the key pair.</p>\n      ",
            "shape_name": "KeyPair"
          }
        },
        "shape_name": "GetKeyPairResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific key pair.</p>\n      "
    },
    "CreateDomain": {
      "name": "CreateDomain",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The domain name to manage (e.g., <code>example.com</code>).</simpara>\n         <note>\n            <simpara>You cannot register a new domain name using Lightsail. You must register a domain\n        name using Amazon Route 53 or another domain name registrar. If you have already registered\n        your domain, you can enter its name in this parameter to manage the DNS records for that\n        domain.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>The domain name to manage (e.g., <code>example.com</code>).</p>\n         <note>\n            <p>You cannot register a new domain name using Lightsail. You must register a domain\n        name using Amazon Route 53 or another domain name registrar. If you have already registered\n        your domain, you can enter its name in this parameter to manage the DNS records for that\n        domain.</p>\n         </note>\n      ",
            "required": true,
            "shape_name": "DomainName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateDomainRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the domain resource you\n      created.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the domain resource you\n      created.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "CreateDomainResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a domain resource for the specified domain (e.g., example.com).</p>\n      "
    },
    "DeleteDomain": {
      "name": "DeleteDomain",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The specific domain name to delete.</simpara>\n      ",
            "documentation": "\n         <p>The specific domain name to delete.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          }
        },
        "shape_name": "DeleteDomainRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your delete\n      domain request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your delete\n      domain request.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "DeleteDomainResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified domain recordset and all of its domain records.</p>\n      "
    },
    "GetDomains": {
      "name": "GetDomains",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get domains request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get domains request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDomainsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "domains": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about each of the domain entries in the user's account.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about each of the domain entries in the user's account.</p>\n      ",
            "shape_name": "DomainList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the domain.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the domain recordset (e.g.,\n        <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the domain recordset (e.g.,\n        <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date when the domain recordset was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date when the domain recordset was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zones where the domain recordset was created.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Region and Availability Zones where the domain recordset was created.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "domainEntries": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the domain entries.</simpara>\n      ",
                  "documentation": "\n         <p>An array of key-value pairs containing information about the domain entries.</p>\n      ",
                  "shape_name": "DomainEntryList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The ID of the domain recordset entry.</simpara>\n      ",
                        "documentation": "\n         <p>The ID of the domain recordset entry.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "name": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the domain.</p>\n      ",
                        "shape_name": "DomainName"
                      },
                      "target": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</simpara>\n         <simpara>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</simpara>\n      ",
                        "documentation": "\n         <p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p>\n         <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>\n      ",
                        "shape_name": "string"
                      },
                      "isAlias": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</simpara>\n      ",
                        "documentation": "\n         <p>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</p>\n      ",
                        "shape_name": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</simpara>\n      ",
                        "documentation": "\n         <p>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</p>\n      ",
                        "shape_name": "DomainEntryType"
                      },
                      "options": {
                        "type": "map",
                        "zonbookDocumentation": "\n         <simpara>(Deprecated) The options for the domain entry.</simpara>\n         <note>\n            <simpara>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n      ",
                        "documentation": "\n         <p>(Deprecated) The options for the domain entry.</p>\n         <note>\n            <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n      ",
                        "deprecated": true,
                        "shape_name": "DomainEntryOptions",
                        "keys": {
                          "type": "string",
                          "shape_name": "DomainEntryOptionsKeys",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes a domain recordset entry.</simpara>\n      ",
                    "documentation": "\n         <p>Describes a domain recordset entry.</p>\n      ",
                    "shape_name": "DomainEntry"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a domain where you are storing recordsets in Lightsail.</simpara>\n      ",
              "documentation": "\n         <p>Describes a domain where you are storing recordsets in Lightsail.</p>\n      ",
              "shape_name": "Domain"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get active names request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get active names request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetDomainsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of all domains in the user's account.</p>\n      "
    },
    "GetDomain": {
      "name": "GetDomain",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The domain name for which your want to return information about.</simpara>\n      ",
            "documentation": "\n         <p>The domain name for which your want to return information about.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          }
        },
        "shape_name": "GetDomainRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "domain": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                "documentation": "\n         <p>The name of the domain.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the domain recordset (e.g.,\n        <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the domain recordset (e.g.,\n        <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code. Include this code in your email to support when you have questions\n      about an instance or another resource in Lightsail. This code enables our support team to\n      look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date when the domain recordset was created.</simpara>\n      ",
                "documentation": "\n         <p>The date when the domain recordset was created.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The AWS Region and Availability Zones where the domain recordset was created.</simpara>\n      ",
                "documentation": "\n         <p>The AWS Region and Availability Zones where the domain recordset was created.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "domainEntries": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the domain entries.</simpara>\n      ",
                "documentation": "\n         <p>An array of key-value pairs containing information about the domain entries.</p>\n      ",
                "shape_name": "DomainEntryList",
                "members": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "zonbookDocumentation": "\n         <simpara>The ID of the domain recordset entry.</simpara>\n      ",
                      "documentation": "\n         <p>The ID of the domain recordset entry.</p>\n      ",
                      "shape_name": "NonEmptyString"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                      "documentation": "\n         <p>The name of the domain.</p>\n      ",
                      "shape_name": "DomainName"
                    },
                    "target": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</simpara>\n         <simpara>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</simpara>\n      ",
                      "documentation": "\n         <p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p>\n         <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>\n      ",
                      "shape_name": "string"
                    },
                    "isAlias": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <simpara>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</simpara>\n      ",
                      "documentation": "\n         <p>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</p>\n      ",
                      "shape_name": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</p>\n      ",
                      "shape_name": "DomainEntryType"
                    },
                    "options": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>(Deprecated) The options for the domain entry.</simpara>\n         <note>\n            <simpara>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n      ",
                      "documentation": "\n         <p>(Deprecated) The options for the domain entry.</p>\n         <note>\n            <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n      ",
                      "deprecated": true,
                      "shape_name": "DomainEntryOptions",
                      "keys": {
                        "type": "string",
                        "shape_name": "DomainEntryOptionsKeys",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "string",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes a domain recordset entry.</simpara>\n      ",
                  "documentation": "\n         <p>Describes a domain recordset entry.</p>\n      ",
                  "shape_name": "DomainEntry"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your get domain request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your get domain request.</p>\n      ",
            "shape_name": "Domain"
          }
        },
        "shape_name": "GetDomainResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific domain recordset.</p>\n      "
    },
    "CreateDomainEntry": {
      "name": "CreateDomainEntry",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The domain name (e.g., <code>example.com</code>) for which you want to create the\n      domain entry.</simpara>\n      ",
            "documentation": "\n         <p>The domain name (e.g., <code>example.com</code>) for which you want to create the\n      domain entry.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          },
          "domainEntry": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the domain recordset entry.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the domain recordset entry.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                "documentation": "\n         <p>The name of the domain.</p>\n      ",
                "shape_name": "DomainName"
              },
              "target": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</simpara>\n         <simpara>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</simpara>\n      ",
                "documentation": "\n         <p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p>\n         <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>\n      ",
                "shape_name": "string"
              },
              "isAlias": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</simpara>\n      ",
                "documentation": "\n         <p>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</p>\n      ",
                "shape_name": "boolean"
              },
              "type": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</simpara>\n      ",
                "documentation": "\n         <p>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</p>\n      ",
                "shape_name": "DomainEntryType"
              },
              "options": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>(Deprecated) The options for the domain entry.</simpara>\n         <note>\n            <simpara>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n      ",
                "documentation": "\n         <p>(Deprecated) The options for the domain entry.</p>\n         <note>\n            <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n      ",
                "deprecated": true,
                "shape_name": "DomainEntryOptions",
                "keys": {
                  "type": "string",
                  "shape_name": "DomainEntryOptionsKeys",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the domain entry\n      request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the domain entry\n      request.</p>\n      ",
            "required": true,
            "shape_name": "DomainEntry"
          }
        },
        "shape_name": "CreateDomainEntryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "CreateDomainEntryResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates one of the following entry records associated with the domain: A record, CNAME\n      record, TXT record, or MX record.</p>\n      "
    },
    "UpdateDomainEntry": {
      "name": "UpdateDomainEntry",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the domain recordset to update.</simpara>\n      ",
            "documentation": "\n         <p>The name of the domain recordset to update.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          },
          "domainEntry": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the domain recordset entry.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the domain recordset entry.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                "documentation": "\n         <p>The name of the domain.</p>\n      ",
                "shape_name": "DomainName"
              },
              "target": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</simpara>\n         <simpara>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</simpara>\n      ",
                "documentation": "\n         <p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p>\n         <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>\n      ",
                "shape_name": "string"
              },
              "isAlias": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</simpara>\n      ",
                "documentation": "\n         <p>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</p>\n      ",
                "shape_name": "boolean"
              },
              "type": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</simpara>\n      ",
                "documentation": "\n         <p>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</p>\n      ",
                "shape_name": "DomainEntryType"
              },
              "options": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>(Deprecated) The options for the domain entry.</simpara>\n         <note>\n            <simpara>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n      ",
                "documentation": "\n         <p>(Deprecated) The options for the domain entry.</p>\n         <note>\n            <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n      ",
                "deprecated": true,
                "shape_name": "DomainEntryOptions",
                "keys": {
                  "type": "string",
                  "shape_name": "DomainEntryOptionsKeys",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the domain entry.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the domain entry.</p>\n      ",
            "required": true,
            "shape_name": "DomainEntry"
          }
        },
        "shape_name": "UpdateDomainEntryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "UpdateDomainEntryResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Updates a domain recordset after it is created.</p>\n      "
    },
    "DeleteDomainEntry": {
      "name": "DeleteDomainEntry",
      "input": {
        "type": "structure",
        "members": {
          "domainName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the domain entry to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the domain entry to delete.</p>\n      ",
            "required": true,
            "shape_name": "DomainName"
          },
          "domainEntry": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the domain recordset entry.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the domain recordset entry.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the domain.</simpara>\n      ",
                "documentation": "\n         <p>The name of the domain.</p>\n      ",
                "shape_name": "DomainName"
              },
              "target": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</simpara>\n         <simpara>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</simpara>\n      ",
                "documentation": "\n         <p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p>\n         <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>\n      ",
                "shape_name": "string"
              },
              "isAlias": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</simpara>\n      ",
                "documentation": "\n         <p>When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer</p>\n      ",
                "shape_name": "boolean"
              },
              "type": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</simpara>\n      ",
                "documentation": "\n         <p>The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).</p>\n      ",
                "shape_name": "DomainEntryType"
              },
              "options": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>(Deprecated) The options for the domain entry.</simpara>\n         <note>\n            <simpara>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</simpara>\n         </note>\n      ",
                "documentation": "\n         <p>(Deprecated) The options for the domain entry.</p>\n         <note>\n            <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p>\n         </note>\n      ",
                "deprecated": true,
                "shape_name": "DomainEntryOptions",
                "keys": {
                  "type": "string",
                  "shape_name": "DomainEntryOptionsKeys",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your domain entries.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your domain entries.</p>\n      ",
            "required": true,
            "shape_name": "DomainEntry"
          }
        },
        "shape_name": "DeleteDomainEntryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your delete\n      domain entry request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your delete\n      domain entry request.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "DeleteDomainEntryResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a specific domain entry.</p>\n      "
    },
    "CreateRelationalDatabase": {
      "name": "CreateRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name to use for your new database.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must contain from 2 to 255 alphanumeric characters, or hyphens.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>The first and last character must be a letter or number.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The name to use for your new database.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p>\n            </li>\n            <li>\n               <p>The first and last character must be a letter or number.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "availabilityZone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone in which to create your new database. Use the\n        <code>us-east-2a</code> case-sensitive format.</simpara>\n         <simpara>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to\n      add the <code>include relational database Availability Zones</code> parameter to your\n      request.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone in which to create your new database. Use the\n        <code>us-east-2a</code> case-sensitive format.</p>\n         <p>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to\n      add the <code>include relational database Availability Zones</code> parameter to your\n      request.</p>\n      ",
            "shape_name": "string"
          },
          "relationalDatabaseBlueprintId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The blueprint ID for your new database. A blueprint describes the major engine version of a\n      database.</simpara>\n         <simpara>You can get a list of database blueprints IDs by using the <code>get relational database\n      blueprints</code> operation.</simpara>\n      ",
            "documentation": "\n         <p>The blueprint ID for your new database. A blueprint describes the major engine version of a\n      database.</p>\n         <p>You can get a list of database blueprints IDs by using the <code>get relational database\n      blueprints</code> operation.</p>\n      ",
            "required": true,
            "shape_name": "string"
          },
          "relationalDatabaseBundleId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The bundle ID for your new database. A bundle describes the performance specifications\n      for your database.</simpara>\n         <simpara>You can get a list of database bundle IDs by using the <code>get relational database bundles</code>\n      operation.</simpara>\n      ",
            "documentation": "\n         <p>The bundle ID for your new database. A bundle describes the performance specifications\n      for your database.</p>\n         <p>You can get a list of database bundle IDs by using the <code>get relational database bundles</code>\n      operation.</p>\n      ",
            "required": true,
            "shape_name": "string"
          },
          "masterDatabaseName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the master database created when the Lightsail database resource is created.</simpara>\n    \n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must contain from 1 to 64 alphanumeric characters.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Cannot be a word reserved by the specified database engine</simpara>\n            </listitem>\n         </itemizedlist>\n    \n      ",
            "documentation": "\n         <p>The name of the master database created when the Lightsail database resource is created.</p>\n    \n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must contain from 1 to 64 alphanumeric characters.</p>\n            </li>\n            <li>\n               <p>Cannot be a word reserved by the specified database engine</p>\n            </li>\n         </ul>\n    \n      ",
            "required": true,
            "shape_name": "string"
          },
          "masterUsername": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The master user name for your new database.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Master user name is required.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must contain from 1 to 16 alphanumeric characters.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>The first character must be a letter.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Cannot be a reserved word for the database engine you choose.</simpara>\n               <simpara>For more information about reserved words in MySQL 5.6 or 5.7, see the Keywords and Reserved Words \n          articles for <ulink url=\"https://dev.mysql.com/doc/refman/5.6/en/keywords.html\">MySQL 5.6</ulink> or \n          <ulink url=\"https://dev.mysql.com/doc/refman/5.7/en/keywords.html\">MySQL 5.7</ulink> respectively.</simpara>\n            </listitem>\n         </itemizedlist>\n    \n    \n      ",
            "documentation": "\n         <p>The master user name for your new database.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Master user name is required.</p>\n            </li>\n            <li>\n               <p>Must contain from 1 to 16 alphanumeric characters.</p>\n            </li>\n            <li>\n               <p>The first character must be a letter.</p>\n            </li>\n            <li>\n               <p>Cannot be a reserved word for the database engine you choose.</p>\n               <p>For more information about reserved words in MySQL 5.6 or 5.7, see the Keywords and Reserved Words \n          articles for <a href=\"https://dev.mysql.com/doc/refman/5.6/en/keywords.html\">MySQL 5.6</a> or \n          <a href=\"https://dev.mysql.com/doc/refman/5.7/en/keywords.html\">MySQL 5.7</a> respectively.</p>\n            </li>\n         </ul>\n    \n    \n      ",
            "required": true,
            "shape_name": "string"
          },
          "masterUserPassword": {
            "type": "string",
            "sensitive": true,
            "zonbookDocumentation": "\n         <simpara>The password for the master user of your new database. The password can include any\n      printable ASCII character except \"/\", \"\"\", or \"@\".</simpara>\n         <simpara>Constraints: Must contain 8 to 41 characters.</simpara>\n    \n      ",
            "documentation": "\n         <p>The password for the master user of your new database. The password can include any\n      printable ASCII character except \"/\", \"\"\", or \"@\".</p>\n         <p>Constraints: Must contain 8 to 41 characters.</p>\n    \n      ",
            "shape_name": "SensitiveString"
          },
          "preferredBackupWindow": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The daily time range during which automated backups are created for your new database\n      if automated backups are enabled.</simpara>\n         <simpara>The default is a 30-minute window selected at random from an 8-hour block of time for \n      each AWS Region. For more information about the preferred backup window time blocks for each region,\n      see the <ulink url=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow\">Working With Backups</ulink>\n      guide in the Amazon Relational Database Service (Amazon RDS) documentation.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must be in the <code>hh24:mi-hh24:mi</code> format.</simpara>\n               <simpara>Example: <code>16:00-16:30</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must not conflict with the preferred maintenance window.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must be at least 30 minutes.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The daily time range during which automated backups are created for your new database\n      if automated backups are enabled.</p>\n         <p>The default is a 30-minute window selected at random from an 8-hour block of time for \n      each AWS Region. For more information about the preferred backup window time blocks for each region,\n      see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow\">Working With Backups</a>\n      guide in the Amazon Relational Database Service (Amazon RDS) documentation.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must be in the <code>hh24:mi-hh24:mi</code> format.</p>\n               <p>Example: <code>16:00-16:30</code>\n               </p>\n            </li>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Must not conflict with the preferred maintenance window.</p>\n            </li>\n            <li>\n               <p>Must be at least 30 minutes.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "string"
          },
          "preferredMaintenanceWindow": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The weekly time range during which system maintenance can occur on your new\n      database.</simpara>\n         <simpara>The default is a 30-minute window selected at random from an 8-hour block of time for\n      each AWS Region, occurring on a random day of the week.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must be at least 30 minutes.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Example: <code>Tue:17:00-Tue:17:30</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The weekly time range during which system maintenance can occur on your new\n      database.</p>\n         <p>The default is a 30-minute window selected at random from an 8-hour block of time for\n      each AWS Region, occurring on a random day of the week.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</p>\n            </li>\n            <li>\n               <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>\n            </li>\n            <li>\n               <p>Must be at least 30 minutes.</p>\n            </li>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Example: <code>Tue:17:00-Tue:17:30</code>\n               </p>\n            </li>\n         </ul>\n      ",
            "shape_name": "string"
          },
          "publiclyAccessible": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the accessibility options for your new database. A value\n    of <code>true</code> specifies a database that is available to resources outside\n    of your Lightsail account. A value of <code>false</code> specifies a database\n    that is available only to your Lightsail resources in the same region as your\n    database.</simpara>\n    \n      ",
            "documentation": "\n         <p>Specifies the accessibility options for your new database. A value\n    of <code>true</code> specifies a database that is available to resources outside\n    of your Lightsail account. A value of <code>false</code> specifies a database\n    that is available only to your Lightsail resources in the same region as your\n    database.</p>\n    \n      ",
            "shape_name": "boolean"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your create relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your create relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a new database in Amazon Lightsail.</p>\n      "
    },
    "CreateRelationalDatabaseFromSnapshot": {
      "name": "CreateRelationalDatabaseFromSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name to use for your new database.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must contain from 2 to 255 alphanumeric characters, or hyphens.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>The first and last character must be a letter or number.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The name to use for your new database.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p>\n            </li>\n            <li>\n               <p>The first and last character must be a letter or number.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "availabilityZone": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Availability Zone in which to create your new database. Use the\n        <code>us-east-2a</code> case-sensitive format.</simpara>\n         <simpara>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to\n      add the <code>include relational database Availability Zones</code> parameter to your\n      request.</simpara>\n      ",
            "documentation": "\n         <p>The Availability Zone in which to create your new database. Use the\n        <code>us-east-2a</code> case-sensitive format.</p>\n         <p>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to\n      add the <code>include relational database Availability Zones</code> parameter to your\n      request.</p>\n      ",
            "shape_name": "string"
          },
          "publiclyAccessible": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the accessibility options for your new database. A value\n      of <code>true</code> specifies a database that is available to resources outside\n      of your Lightsail account. A value of <code>false</code> specifies a database\n      that is available only to your Lightsail resources in the same region as your\n      database.</simpara>\n      \n      ",
            "documentation": "\n         <p>Specifies the accessibility options for your new database. A value\n      of <code>true</code> specifies a database that is available to resources outside\n      of your Lightsail account. A value of <code>false</code> specifies a database\n      that is available only to your Lightsail resources in the same region as your\n      database.</p>\n      \n      ",
            "shape_name": "boolean"
          },
          "relationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database snapshot from which to create your new database.</simpara>\n    \n      ",
            "documentation": "\n         <p>The name of the database snapshot from which to create your new database.</p>\n    \n      ",
            "shape_name": "ResourceName"
          },
          "relationalDatabaseBundleId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The bundle ID for your new database. A bundle describes the performance specifications\n      for your database.</simpara>\n         <simpara>You can get a list of database bundle IDs by using the <code>get relational database bundles</code>\n      operation.</simpara>\n         <simpara>When creating a new database from a snapshot, you cannot choose a bundle that is smaller than the \n      bundle of the source database.</simpara>\n      ",
            "documentation": "\n         <p>The bundle ID for your new database. A bundle describes the performance specifications\n      for your database.</p>\n         <p>You can get a list of database bundle IDs by using the <code>get relational database bundles</code>\n      operation.</p>\n         <p>When creating a new database from a snapshot, you cannot choose a bundle that is smaller than the \n      bundle of the source database.</p>\n      ",
            "shape_name": "string"
          },
          "sourceRelationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the source database.</simpara>\n    \n      ",
            "documentation": "\n         <p>The name of the source database.</p>\n    \n      ",
            "shape_name": "ResourceName"
          },
          "restoreTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The date and time to restore your database from.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must be before the latest restorable time for the database.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Cannot be specified if the <code>use latest restorable time</code> parameter is <code>true</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in the Unix time format.</simpara>\n               <simpara>For example, if you wish to use a restore time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the restore time.</simpara>\n        \n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The date and time to restore your database from.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must be before the latest restorable time for the database.</p>\n            </li>\n            <li>\n               <p>Cannot be specified if the <code>use latest restorable time</code> parameter is <code>true</code>.</p>\n            </li>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Specified in the Unix time format.</p>\n               <p>For example, if you wish to use a restore time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the restore time.</p>\n        \n            </li>\n         </ul>\n      ",
            "shape_name": "IsoDate"
          },
          "useLatestRestorableTime": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether your database is restored from the latest backup time. A value of\n        <code>true</code> restores from the latest backup time. </simpara>\n         <simpara>Default: <code>false</code>\n         </simpara>\n         <simpara>Constraints: Cannot be specified if the <code>restore time</code> parameter is provided.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether your database is restored from the latest backup time. A value of\n        <code>true</code> restores from the latest backup time. </p>\n         <p>Default: <code>false</code>\n         </p>\n         <p>Constraints: Cannot be specified if the <code>restore time</code> parameter is provided.</p>\n      ",
            "shape_name": "boolean"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseFromSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your create relational database from snapshot request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your create relational database from snapshot request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseFromSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a new database from an existing database snapshot in Amazon Lightsail.</p>\n         <p>You can create a new database from a snapshot in if something goes wrong with your original \n      database, or to change it to a different plan, such as a high availability or standard plan.</p>\n      "
    },
    "UpdateRelationalDatabase": {
      "name": "UpdateRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database to update.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database to update.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "masterUserPassword": {
            "type": "string",
            "sensitive": true,
            "zonbookDocumentation": "\n         <simpara>The password for the master user of your database. The password can include any\n      printable ASCII character except \"/\", \"\"\", or \"@\".</simpara>\n         <simpara>Constraints: Must contain 8 to 41 characters.</simpara>\n    \n      ",
            "documentation": "\n         <p>The password for the master user of your database. The password can include any\n      printable ASCII character except \"/\", \"\"\", or \"@\".</p>\n         <p>Constraints: Must contain 8 to 41 characters.</p>\n    \n      ",
            "shape_name": "SensitiveString"
          },
          "rotateMasterUserPassword": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When <code>true</code>, the master user password is changed to a new strong password\n      generated by Lightsail.</simpara>\n         <simpara>Use the <code>get relational database master user password</code> operation to get the new\n      password.</simpara>\n    \n      ",
            "documentation": "\n         <p>When <code>true</code>, the master user password is changed to a new strong password\n      generated by Lightsail.</p>\n         <p>Use the <code>get relational database master user password</code> operation to get the new\n      password.</p>\n    \n      ",
            "shape_name": "boolean"
          },
          "preferredBackupWindow": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The daily time range during which automated backups are created for your database\n    if automated backups are enabled.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must be in the <code>hh24:mi-hh24:mi</code> format.</simpara>\n               <simpara>Example: <code>16:00-16:30</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must not conflict with the preferred maintenance window.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must be at least 30 minutes.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The daily time range during which automated backups are created for your database\n    if automated backups are enabled.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must be in the <code>hh24:mi-hh24:mi</code> format.</p>\n               <p>Example: <code>16:00-16:30</code>\n               </p>\n            </li>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Must not conflict with the preferred maintenance window.</p>\n            </li>\n            <li>\n               <p>Must be at least 30 minutes.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "string"
          },
          "preferredMaintenanceWindow": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The weekly time range during which system maintenance can occur on your\n      database.</simpara>\n         <simpara>The default is a 30-minute window selected at random from an 8-hour block of time for\n      each AWS Region, occurring on a random day of the week.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Must be at least 30 minutes.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Example: <code>Tue:17:00-Tue:17:30</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The weekly time range during which system maintenance can occur on your\n      database.</p>\n         <p>The default is a 30-minute window selected at random from an 8-hour block of time for\n      each AWS Region, occurring on a random day of the week.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</p>\n            </li>\n            <li>\n               <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>\n            </li>\n            <li>\n               <p>Must be at least 30 minutes.</p>\n            </li>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Example: <code>Tue:17:00-Tue:17:30</code>\n               </p>\n            </li>\n         </ul>\n      ",
            "shape_name": "string"
          },
          "enableBackupRetention": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When <code>true</code>, enables automated backup retention for your database.</simpara>\n         <simpara>Updates are applied during the next maintenance window because this can result \n      in an outage.</simpara>\n      ",
            "documentation": "\n         <p>When <code>true</code>, enables automated backup retention for your database.</p>\n         <p>Updates are applied during the next maintenance window because this can result \n      in an outage.</p>\n      ",
            "shape_name": "boolean"
          },
          "disableBackupRetention": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When <code>true</code>, disables automated backup retention for your\n      database.</simpara>\n         <simpara>Disabling backup retention deletes all automated database backups. Before disabling \n      this, you may want to create a snapshot of your database using the <code>create relational \n        database snapshot</code> operation.</simpara>\n         <simpara>Updates are applied during the next maintenance window because this can result \n      in an outage.</simpara>\n      ",
            "documentation": "\n         <p>When <code>true</code>, disables automated backup retention for your\n      database.</p>\n         <p>Disabling backup retention deletes all automated database backups. Before disabling \n      this, you may want to create a snapshot of your database using the <code>create relational \n        database snapshot</code> operation.</p>\n         <p>Updates are applied during the next maintenance window because this can result \n      in an outage.</p>\n      ",
            "shape_name": "boolean"
          },
          "publiclyAccessible": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the accessibility options for your database. A value\n      of <code>true</code> specifies a database that is available to resources outside\n      of your Lightsail account. A value of <code>false</code> specifies a database\n      that is available only to your Lightsail resources in the same region as your\n      database.</simpara> \n      \n      ",
            "documentation": "\n         <p>Specifies the accessibility options for your database. A value\n      of <code>true</code> specifies a database that is available to resources outside\n      of your Lightsail account. A value of <code>false</code> specifies a database\n      that is available only to your Lightsail resources in the same region as your\n      database.</p> \n      \n      ",
            "shape_name": "boolean"
          },
          "applyImmediately": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When <code>true</code>, applies changes immediately. When <code>false</code>, applies\n      changes during the preferred maintenance window. Some changes may cause an outage.</simpara>\n         <simpara>Default: <code>false</code>\n         </simpara>\n    \n      ",
            "documentation": "\n         <p>When <code>true</code>, applies changes immediately. When <code>false</code>, applies\n      changes during the preferred maintenance window. Some changes may cause an outage.</p>\n         <p>Default: <code>false</code>\n         </p>\n    \n      ",
            "shape_name": "boolean"
          }
        },
        "shape_name": "UpdateRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your update relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your update relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "UpdateRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Allows the update of one or more attributes of a database in Amazon Lightsail.</p>\n         <p>Updates are applied immediately, or in cases where the updates could result in an outage,\n      are applied during the database's predefined maintenance window.</p>\n      "
    },
    "GetRelationalDatabase": {
      "name": "GetRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database that you are looking up.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database that you are looking up.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "relationalDatabase": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The unique name of the database resource in Lightsail.</simpara>\n      ",
                "documentation": "\n         <p>The unique name of the database resource in Lightsail.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code for the database. Include this code in your email to support when you\n      have questions about a database in Lightsail. This code enables our support team to look up\n      your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code for the database. Include this code in your email to support when you\n      have questions about a database in Lightsail. This code enables our support team to look up\n      your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the database was created. Formatted in Unix time.</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the database was created. Formatted in Unix time.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The Region name and Availability Zone where the database is located.</simpara>\n      ",
                "documentation": "\n         <p>The Region name and Availability Zone where the database is located.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The Lightsail resource type for the database (for example, <code>RelationalDatabase</code>).</simpara>\n      ",
                "documentation": "\n         <p>The Lightsail resource type for the database (for example, <code>RelationalDatabase</code>).</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "relationalDatabaseBlueprintId": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The blueprint ID for the database. A blueprint describes the major engine version of a\n      database.</simpara>\n      ",
                "documentation": "\n         <p>The blueprint ID for the database. A blueprint describes the major engine version of a\n      database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "relationalDatabaseBundleId": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The bundle ID for the database. A bundle describes the performance specifications for\n      your database.</simpara>\n      ",
                "documentation": "\n         <p>The bundle ID for the database. A bundle describes the performance specifications for\n      your database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "masterDatabaseName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the master database created when the Lightsail database resource is created.</simpara>\n      ",
                "documentation": "\n         <p>The name of the master database created when the Lightsail database resource is created.</p>\n      ",
                "shape_name": "string"
              },
              "hardware": {
                "type": "structure",
                "members": {
                  "cpuCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The number of vCPUs for the database.</simpara>\n      ",
                    "documentation": "\n         <p>The number of vCPUs for the database.</p>\n      ",
                    "shape_name": "integer"
                  },
                  "diskSizeInGb": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The size of the disk for the database.</simpara>\n      ",
                    "documentation": "\n         <p>The size of the disk for the database.</p>\n      ",
                    "shape_name": "integer"
                  },
                  "ramSizeInGb": {
                    "type": "float",
                    "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB for the database.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of RAM in GB for the database.</p>\n      ",
                    "shape_name": "float"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Describes the hardware of the database.</simpara>\n      ",
                "documentation": "\n         <p>Describes the hardware of the database.</p>\n      ",
                "shape_name": "RelationalDatabaseHardware"
              },
              "state": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>Describes the current state of the database.</simpara>\n      ",
                "documentation": "\n         <p>Describes the current state of the database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "secondaryAvailabilityZone": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Describes the secondary Availability Zone of a high availability database.</simpara>\n         <simpara>The secondary database is used for failover support of a high availability\n      database.</simpara>\n      ",
                "documentation": "\n         <p>Describes the secondary Availability Zone of a high availability database.</p>\n         <p>The secondary database is used for failover support of a high availability\n      database.</p>\n      ",
                "shape_name": "string"
              },
              "backupRetentionEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether automated backup retention is enabled for the\n      database.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether automated backup retention is enabled for the\n      database.</p>\n      ",
                "shape_name": "boolean"
              },
              "pendingModifiedValues": {
                "type": "structure",
                "members": {
                  "masterUserPassword": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The password for the master user of the database.</simpara>\n      ",
                    "documentation": "\n         <p>The password for the master user of the database.</p>\n      ",
                    "shape_name": "string"
                  },
                  "engineVersion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The database engine version.</simpara>\n      ",
                    "documentation": "\n         <p>The database engine version.</p>\n      ",
                    "shape_name": "string"
                  },
                  "backupRetentionEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether automated backup retention is enabled.</simpara>\n      ",
                    "documentation": "\n         <p>A Boolean value indicating whether automated backup retention is enabled.</p>\n      ",
                    "shape_name": "boolean"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Describes pending database value modifications.</simpara>\n      ",
                "documentation": "\n         <p>Describes pending database value modifications.</p>\n      ",
                "shape_name": "PendingModifiedRelationalDatabaseValues"
              },
              "engine": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The database software (for example, <code>MySQL</code>).</simpara>\n      ",
                "documentation": "\n         <p>The database software (for example, <code>MySQL</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "engineVersion": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The database engine version (for example, <code>5.7.23</code>).</simpara>\n      ",
                "documentation": "\n         <p>The database engine version (for example, <code>5.7.23</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "latestRestorableTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The latest point in time to which the database can be restored. Formatted in Unix time.</simpara>\n      ",
                "documentation": "\n         <p>The latest point in time to which the database can be restored. Formatted in Unix time.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "masterUsername": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The master user name of the database.</simpara>\n      ",
                "documentation": "\n         <p>The master user name of the database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "parameterApplyStatus": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The status of parameter updates for the database.</simpara>\n      ",
                "documentation": "\n         <p>The status of parameter updates for the database.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "preferredBackupWindow": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The daily time range during which automated backups are created for the\n      database (for example, <code>16:00-16:30</code>).</simpara>\n      ",
                "documentation": "\n         <p>The daily time range during which automated backups are created for the\n      database (for example, <code>16:00-16:30</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "preferredMaintenanceWindow": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The weekly time range during which system maintenance can occur on the\n      database.</simpara>\n         <simpara>In the format <code>ddd:hh24:mi-ddd:hh24:mi</code>. For example, \n      <code>Tue:17:00-Tue:17:30</code>.</simpara>\n      ",
                "documentation": "\n         <p>The weekly time range during which system maintenance can occur on the\n      database.</p>\n         <p>In the format <code>ddd:hh24:mi-ddd:hh24:mi</code>. For example, \n      <code>Tue:17:00-Tue:17:30</code>.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "publiclyAccessible": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the database is publicly accessible.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the database is publicly accessible.</p>\n      ",
                "shape_name": "boolean"
              },
              "masterEndpoint": {
                "type": "structure",
                "members": {
                  "port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>Specifies the port that the database is listening on.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies the port that the database is listening on.</p>\n      ",
                    "shape_name": "integer"
                  },
                  "address": {
                    "type": "string",
                    "pattern": ".*\\S.*",
                    "zonbookDocumentation": "\n         <simpara>Specifies the DNS address of the database.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies the DNS address of the database.</p>\n      ",
                    "shape_name": "NonEmptyString"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The master endpoint for the database.</simpara>\n      ",
                "documentation": "\n         <p>The master endpoint for the database.</p>\n      ",
                "shape_name": "RelationalDatabaseEndpoint"
              },
              "pendingMaintenanceActions": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>Describes the pending maintenance actions for the database.</simpara>\n      ",
                "documentation": "\n         <p>Describes the pending maintenance actions for the database.</p>\n      ",
                "shape_name": "PendingMaintenanceActionList",
                "members": {
                  "type": "structure",
                  "members": {
                    "action": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "zonbookDocumentation": "\n         <simpara>The type of pending database maintenance action.</simpara>\n      ",
                      "documentation": "\n         <p>The type of pending database maintenance action.</p>\n      ",
                      "shape_name": "NonEmptyString"
                    },
                    "description": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "zonbookDocumentation": "\n         <simpara>Additional detail about the pending database maintenance\n      action.</simpara>\n      ",
                      "documentation": "\n         <p>Additional detail about the pending database maintenance\n      action.</p>\n      ",
                      "shape_name": "NonEmptyString"
                    },
                    "currentApplyDate": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <simpara>The effective date of the pending database maintenance action.</simpara>\n      ",
                      "documentation": "\n         <p>The effective date of the pending database maintenance action.</p>\n      ",
                      "shape_name": "IsoDate"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes a pending database maintenance action.</simpara>\n      ",
                  "documentation": "\n         <p>Describes a pending database maintenance action.</p>\n      ",
                  "shape_name": "PendingMaintenanceAction"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>An object describing the specified database.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the specified database.</p>\n      ",
            "shape_name": "RelationalDatabase"
          }
        },
        "shape_name": "GetRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific database in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabases": {
      "name": "GetRelationalDatabases",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabasesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "relationalDatabases": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational databases request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational databases request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The unique name of the database resource in Lightsail.</simpara>\n      ",
                  "documentation": "\n         <p>The unique name of the database resource in Lightsail.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code for the database. Include this code in your email to support when you\n      have questions about a database in Lightsail. This code enables our support team to look up\n      your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code for the database. Include this code in your email to support when you\n      have questions about a database in Lightsail. This code enables our support team to look up\n      your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the database was created. Formatted in Unix time.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the database was created. Formatted in Unix time.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The Region name and Availability Zone where the database is located.</simpara>\n      ",
                  "documentation": "\n         <p>The Region name and Availability Zone where the database is located.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The Lightsail resource type for the database (for example, <code>RelationalDatabase</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Lightsail resource type for the database (for example, <code>RelationalDatabase</code>).</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "relationalDatabaseBlueprintId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The blueprint ID for the database. A blueprint describes the major engine version of a\n      database.</simpara>\n      ",
                  "documentation": "\n         <p>The blueprint ID for the database. A blueprint describes the major engine version of a\n      database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "relationalDatabaseBundleId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The bundle ID for the database. A bundle describes the performance specifications for\n      your database.</simpara>\n      ",
                  "documentation": "\n         <p>The bundle ID for the database. A bundle describes the performance specifications for\n      your database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "masterDatabaseName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the master database created when the Lightsail database resource is created.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the master database created when the Lightsail database resource is created.</p>\n      ",
                  "shape_name": "string"
                },
                "hardware": {
                  "type": "structure",
                  "members": {
                    "cpuCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The number of vCPUs for the database.</simpara>\n      ",
                      "documentation": "\n         <p>The number of vCPUs for the database.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "diskSizeInGb": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The size of the disk for the database.</simpara>\n      ",
                      "documentation": "\n         <p>The size of the disk for the database.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "ramSizeInGb": {
                      "type": "float",
                      "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB for the database.</simpara>\n      ",
                      "documentation": "\n         <p>The amount of RAM in GB for the database.</p>\n      ",
                      "shape_name": "float"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the hardware of the database.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the hardware of the database.</p>\n      ",
                  "shape_name": "RelationalDatabaseHardware"
                },
                "state": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>Describes the current state of the database.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the current state of the database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "secondaryAvailabilityZone": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Describes the secondary Availability Zone of a high availability database.</simpara>\n         <simpara>The secondary database is used for failover support of a high availability\n      database.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the secondary Availability Zone of a high availability database.</p>\n         <p>The secondary database is used for failover support of a high availability\n      database.</p>\n      ",
                  "shape_name": "string"
                },
                "backupRetentionEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether automated backup retention is enabled for the\n      database.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether automated backup retention is enabled for the\n      database.</p>\n      ",
                  "shape_name": "boolean"
                },
                "pendingModifiedValues": {
                  "type": "structure",
                  "members": {
                    "masterUserPassword": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The password for the master user of the database.</simpara>\n      ",
                      "documentation": "\n         <p>The password for the master user of the database.</p>\n      ",
                      "shape_name": "string"
                    },
                    "engineVersion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The database engine version.</simpara>\n      ",
                      "documentation": "\n         <p>The database engine version.</p>\n      ",
                      "shape_name": "string"
                    },
                    "backupRetentionEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether automated backup retention is enabled.</simpara>\n      ",
                      "documentation": "\n         <p>A Boolean value indicating whether automated backup retention is enabled.</p>\n      ",
                      "shape_name": "boolean"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes pending database value modifications.</simpara>\n      ",
                  "documentation": "\n         <p>Describes pending database value modifications.</p>\n      ",
                  "shape_name": "PendingModifiedRelationalDatabaseValues"
                },
                "engine": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The database software (for example, <code>MySQL</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The database software (for example, <code>MySQL</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "engineVersion": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The database engine version (for example, <code>5.7.23</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The database engine version (for example, <code>5.7.23</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "latestRestorableTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The latest point in time to which the database can be restored. Formatted in Unix time.</simpara>\n      ",
                  "documentation": "\n         <p>The latest point in time to which the database can be restored. Formatted in Unix time.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "masterUsername": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The master user name of the database.</simpara>\n      ",
                  "documentation": "\n         <p>The master user name of the database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "parameterApplyStatus": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The status of parameter updates for the database.</simpara>\n      ",
                  "documentation": "\n         <p>The status of parameter updates for the database.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "preferredBackupWindow": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The daily time range during which automated backups are created for the\n      database (for example, <code>16:00-16:30</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The daily time range during which automated backups are created for the\n      database (for example, <code>16:00-16:30</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "preferredMaintenanceWindow": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The weekly time range during which system maintenance can occur on the\n      database.</simpara>\n         <simpara>In the format <code>ddd:hh24:mi-ddd:hh24:mi</code>. For example, \n      <code>Tue:17:00-Tue:17:30</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The weekly time range during which system maintenance can occur on the\n      database.</p>\n         <p>In the format <code>ddd:hh24:mi-ddd:hh24:mi</code>. For example, \n      <code>Tue:17:00-Tue:17:30</code>.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "publiclyAccessible": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the database is publicly accessible.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the database is publicly accessible.</p>\n      ",
                  "shape_name": "boolean"
                },
                "masterEndpoint": {
                  "type": "structure",
                  "members": {
                    "port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Specifies the port that the database is listening on.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies the port that the database is listening on.</p>\n      ",
                      "shape_name": "integer"
                    },
                    "address": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "zonbookDocumentation": "\n         <simpara>Specifies the DNS address of the database.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies the DNS address of the database.</p>\n      ",
                      "shape_name": "NonEmptyString"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The master endpoint for the database.</simpara>\n      ",
                  "documentation": "\n         <p>The master endpoint for the database.</p>\n      ",
                  "shape_name": "RelationalDatabaseEndpoint"
                },
                "pendingMaintenanceActions": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Describes the pending maintenance actions for the database.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the pending maintenance actions for the database.</p>\n      ",
                  "shape_name": "PendingMaintenanceActionList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "action": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The type of pending database maintenance action.</simpara>\n      ",
                        "documentation": "\n         <p>The type of pending database maintenance action.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "description": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>Additional detail about the pending database maintenance\n      action.</simpara>\n      ",
                        "documentation": "\n         <p>Additional detail about the pending database maintenance\n      action.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "currentApplyDate": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The effective date of the pending database maintenance action.</simpara>\n      ",
                        "documentation": "\n         <p>The effective date of the pending database maintenance action.</p>\n      ",
                        "shape_name": "IsoDate"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes a pending database maintenance action.</simpara>\n      ",
                    "documentation": "\n         <p>Describes a pending database maintenance action.</p>\n      ",
                    "shape_name": "PendingMaintenanceAction"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a database.</simpara>\n      ",
              "documentation": "\n         <p>Describes a database.</p>\n      ",
              "shape_name": "RelationalDatabase"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get relational\n      databases request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get relational\n      databases request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabasesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all of your databases in Amazon Lightsail.</p>\n      "
    },
    "DeleteRelationalDatabase": {
      "name": "DeleteRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database that you are deleting.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database that you are deleting.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "skipFinalSnapshot": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Determines whether a final database snapshot is created before your database is\n      deleted. If <code>true</code> is specified, no database snapshot is created. If\n        <code>false</code> is specified, a database snapshot is created before your database is\n      deleted.</simpara>\n         <simpara>You must specify the <code>final relational database snapshot name</code> parameter if\n      the <code>skip final snapshot</code> parameter is <code>false</code>.</simpara>\n         <simpara>Default: <code>false</code>\n         </simpara>\n      ",
            "documentation": "\n         <p>Determines whether a final database snapshot is created before your database is\n      deleted. If <code>true</code> is specified, no database snapshot is created. If\n        <code>false</code> is specified, a database snapshot is created before your database is\n      deleted.</p>\n         <p>You must specify the <code>final relational database snapshot name</code> parameter if\n      the <code>skip final snapshot</code> parameter is <code>false</code>.</p>\n         <p>Default: <code>false</code>\n         </p>\n      ",
            "shape_name": "boolean"
          },
          "finalRelationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database snapshot created if <code>skip final snapshot</code> is \n      <code>false</code>, which is the default value for that parameter.</simpara>\n         <note>\n            <simpara>Specifying this parameter and also specifying the <code>skip final snapshot</code>\n        parameter to <code>true</code> results in an error.</simpara>\n         </note>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must contain from 2 to 255 alphanumeric characters, or hyphens.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>The first and last character must be a letter or number.</simpara>\n            </listitem>\n         </itemizedlist>\n    \n      ",
            "documentation": "\n         <p>The name of the database snapshot created if <code>skip final snapshot</code> is \n      <code>false</code>, which is the default value for that parameter.</p>\n         <note>\n            <p>Specifying this parameter and also specifying the <code>skip final snapshot</code>\n        parameter to <code>true</code> results in an error.</p>\n         </note>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p>\n            </li>\n            <li>\n               <p>The first and last character must be a letter or number.</p>\n            </li>\n         </ul>\n    \n      ",
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your delete relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your delete relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a database in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseBlueprints": {
      "name": "GetRelationalDatabaseBlueprints",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database blueprints request.</simpara>\n    \n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database blueprints request.</p>\n    \n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseBlueprintsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "blueprints": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database blueprints request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database blueprints request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseBlueprintList",
            "members": {
              "type": "structure",
              "members": {
                "blueprintId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID for the database blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The ID for the database blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "engine": {
                  "type": "string",
                  "enum": [
                    "mysql"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The database software of the database blueprint (for example, <code>MySQL</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The database software of the database blueprint (for example, <code>MySQL</code>).</p>\n      ",
                  "shape_name": "RelationalDatabaseEngine"
                },
                "engineVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The database engine version for the database blueprint (for example, <code>5.7.23</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The database engine version for the database blueprint (for example, <code>5.7.23</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "engineDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of the database engine for the database blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the database engine for the database blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "engineVersionDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of the database engine version for the database blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the database engine version for the database blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "isEngineDefault": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the engine version is the default for the database\n      blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the engine version is the default for the database\n      blueprint.</p>\n      ",
                  "shape_name": "boolean"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a database image, or blueprint. A blueprint describes the major engine version of a\n      database.</simpara>\n      ",
              "documentation": "\n         <p>Describes a database image, or blueprint. A blueprint describes the major engine version of a\n      database.</p>\n      ",
              "shape_name": "RelationalDatabaseBlueprint"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results of your get relational database\n      blueprints request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results of your get relational database\n      blueprints request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseBlueprintsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes the major engine version of a\n      database.</p>\n         <p>You can use a blueprint ID to create a new database that runs a specific database\n      engine.</p>\n      "
    },
    "GetRelationalDatabaseBundles": {
      "name": "GetRelationalDatabaseBundles",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database bundles request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database bundles request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseBundlesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "bundles": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database bundles request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database bundles request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseBundleList",
            "members": {
              "type": "structure",
              "members": {
                "bundleId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The ID for the database bundle.</p>\n      ",
                  "shape_name": "string"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The name for the database bundle.</p>\n      ",
                  "shape_name": "string"
                },
                "price": {
                  "type": "float",
                  "zonbookDocumentation": "\n         <simpara>The cost of the database bundle in US currency.</simpara>\n      ",
                  "documentation": "\n         <p>The cost of the database bundle in US currency.</p>\n      ",
                  "shape_name": "float"
                },
                "ramSizeInGb": {
                  "type": "float",
                  "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB (for example, <code>2.0</code>) for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The amount of RAM in GB (for example, <code>2.0</code>) for the database bundle.</p>\n      ",
                  "shape_name": "float"
                },
                "diskSizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size of the disk for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The size of the disk for the database bundle.</p>\n      ",
                  "shape_name": "integer"
                },
                "transferPerMonthInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The data transfer rate per month in GB for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The data transfer rate per month in GB for the database bundle.</p>\n      ",
                  "shape_name": "integer"
                },
                "cpuCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of virtual CPUs (vCPUs) for the database bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The number of virtual CPUs (vCPUs) for the database bundle.</p>\n      ",
                  "shape_name": "integer"
                },
                "isEncrypted": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the database bundle is encrypted.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the database bundle is encrypted.</p>\n      ",
                  "shape_name": "boolean"
                },
                "isActive": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the database bundle is active.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the database bundle is active.</p>\n      ",
                  "shape_name": "boolean"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a database bundle. A bundle describes the performance specifications of the\n      database.</simpara>\n      ",
              "documentation": "\n         <p>Describes a database bundle. A bundle describes the performance specifications of the\n      database.</p>\n      ",
              "shape_name": "RelationalDatabaseBundle"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results of your get relational database\n      bundles request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results of your get relational database\n      bundles request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseBundlesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the list of bundles that are available in Amazon Lightsail. A bundle describes\n      the performance specifications for a database.</p>\n         <p>You can use a bundle ID to create a new database with explicit performance\n      specifications.</p>\n      "
    },
    "GetRelationalDatabaseMasterUserPassword": {
      "name": "GetRelationalDatabaseMasterUserPassword",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database for which to get the master user password.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database for which to get the master user password.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "passwordVersion": {
            "type": "string",
            "enum": [
              "CURRENT",
              "PREVIOUS",
              "PENDING"
            ],
            "zonbookDocumentation": "\n         <simpara>The password version to return.</simpara>\n         <simpara>Specifying <code>CURRENT</code> or <code>PREVIOUS</code> returns the current or previous \n      passwords respectively. Specifying <code>PENDING</code> returns the newest version of the password \n      that will rotate to <code>CURRENT</code>. After the <code>PENDING</code> password rotates to \n      <code>CURRENT</code>, the <code>PENDING</code> password is no longer available.</simpara>\n         <simpara>Default: <code>CURRENT</code>\n         </simpara>\n      ",
            "documentation": "\n         <p>The password version to return.</p>\n         <p>Specifying <code>CURRENT</code> or <code>PREVIOUS</code> returns the current or previous \n      passwords respectively. Specifying <code>PENDING</code> returns the newest version of the password \n      that will rotate to <code>CURRENT</code>. After the <code>PENDING</code> password rotates to \n      <code>CURRENT</code>, the <code>PENDING</code> password is no longer available.</p>\n         <p>Default: <code>CURRENT</code>\n         </p>\n      ",
            "shape_name": "RelationalDatabasePasswordVersion"
          }
        },
        "shape_name": "GetRelationalDatabaseMasterUserPasswordRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "masterUserPassword": {
            "type": "string",
            "sensitive": true,
            "zonbookDocumentation": "\n         <simpara>The master user password for the <code>password version</code> specified.</simpara>\n      ",
            "documentation": "\n         <p>The master user password for the <code>password version</code> specified.</p>\n      ",
            "shape_name": "SensitiveString"
          },
          "createdAt": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The timestamp when the specified version of the master user password was created.</simpara>\n      ",
            "documentation": "\n         <p>The timestamp when the specified version of the master user password was created.</p>\n      ",
            "shape_name": "IsoDate"
          }
        },
        "shape_name": "GetRelationalDatabaseMasterUserPasswordResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the current, previous, or pending versions of the master user password for a\n      Lightsail database.</p>\n      "
    },
    "GetRelationalDatabaseParameters": {
      "name": "GetRelationalDatabaseParameters",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database for which to get parameters.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database for which to get parameters.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database parameters request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database parameters request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseParametersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "parameters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database parameters request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database parameters request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseParameterList",
            "members": {
              "type": "structure",
              "members": {
                "allowedValues": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the valid range of values for the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the valid range of values for the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "applyMethod": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates when parameter updates are applied.</simpara>\n         <simpara>Can be <code>immediate</code> or <code>pending-reboot</code>.</simpara>\n      ",
                  "documentation": "\n         <p>Indicates when parameter updates are applied.</p>\n         <p>Can be <code>immediate</code> or <code>pending-reboot</code>.</p>\n      ",
                  "shape_name": "string"
                },
                "applyType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the engine-specific parameter type.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the engine-specific parameter type.</p>\n      ",
                  "shape_name": "string"
                },
                "dataType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the valid data type for the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the valid data type for the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Provides a description of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Provides a description of the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "isModifiable": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the parameter can be modified.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the parameter can be modified.</p>\n      ",
                  "shape_name": "boolean"
                },
                "parameterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the name of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the name of the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "parameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the value of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the value of the parameter.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the parameters of a database.</simpara>\n    \n      ",
              "documentation": "\n         <p>Describes the parameters of a database.</p>\n    \n      ",
              "shape_name": "RelationalDatabaseParameter"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get static IPs\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get static IPs\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseParametersResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns all of the runtime parameters offered by the underlying database software, or\n      engine, for a specific database in Amazon Lightsail.</p>\n         <p>In addition to the parameter names and values, this operation returns other information\n      about each parameter. This information includes whether changes require a reboot, whether the\n      parameter is modifiable, the allowed values, and the data types.</p>\n      "
    },
    "UpdateRelationalDatabaseParameters": {
      "name": "UpdateRelationalDatabaseParameters",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database for which to update parameters.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database for which to update parameters.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "parameters": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The database parameters to update.</simpara>\n      ",
            "documentation": "\n         <p>The database parameters to update.</p>\n      ",
            "required": true,
            "shape_name": "RelationalDatabaseParameterList",
            "members": {
              "type": "structure",
              "members": {
                "allowedValues": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the valid range of values for the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the valid range of values for the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "applyMethod": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates when parameter updates are applied.</simpara>\n         <simpara>Can be <code>immediate</code> or <code>pending-reboot</code>.</simpara>\n      ",
                  "documentation": "\n         <p>Indicates when parameter updates are applied.</p>\n         <p>Can be <code>immediate</code> or <code>pending-reboot</code>.</p>\n      ",
                  "shape_name": "string"
                },
                "applyType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the engine-specific parameter type.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the engine-specific parameter type.</p>\n      ",
                  "shape_name": "string"
                },
                "dataType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the valid data type for the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the valid data type for the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Provides a description of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Provides a description of the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "isModifiable": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the parameter can be modified.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the parameter can be modified.</p>\n      ",
                  "shape_name": "boolean"
                },
                "parameterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the name of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the name of the parameter.</p>\n      ",
                  "shape_name": "string"
                },
                "parameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Specifies the value of the parameter.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies the value of the parameter.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the parameters of a database.</simpara>\n    \n      ",
              "documentation": "\n         <p>Describes the parameters of a database.</p>\n    \n      ",
              "shape_name": "RelationalDatabaseParameter"
            }
          }
        },
        "shape_name": "UpdateRelationalDatabaseParametersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your update relational database parameters request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your update relational database parameters request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "UpdateRelationalDatabaseParametersResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p>\n         <p>Parameter updates don't cause outages; therefore, their application is not subject \n      to the preferred maintenance window. However, there are two ways in which paramater updates \n      are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a \n      <code>dynamic</code> apply type are applied immediately. Parameters marked with a \n      <code>pending-reboot</code> apply type are applied only after the database is rebooted using \n      the <code>reboot relational database</code> operation.</p>\n      "
    },
    "StartRelationalDatabase": {
      "name": "StartRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database to start.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database to start.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "StartRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your start relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your start relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "StartRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Starts a specific database from a stopped state in Amazon Lightsail. To restart a\n      database, use the <code>reboot relational database</code> operation.</p>\n      "
    },
    "RebootRelationalDatabase": {
      "name": "RebootRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database to reboot.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database to reboot.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "RebootRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your reboot relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your reboot relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "RebootRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Restarts a specific database in Amazon Lightsail.</p>\n      "
    },
    "StopRelationalDatabase": {
      "name": "StopRelationalDatabase",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database to stop.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database to stop.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "relationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your new database snapshot to be created before stopping your\n      database.</simpara>\n      ",
            "documentation": "\n         <p>The name of your new database snapshot to be created before stopping your\n      database.</p>\n      ",
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "StopRelationalDatabaseRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your stop relational database request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your stop relational database request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "StopRelationalDatabaseResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Stops a specific database that is currently running in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseLogStreams": {
      "name": "GetRelationalDatabaseLogStreams",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database for which to get log streams.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database for which to get log streams.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetRelationalDatabaseLogStreamsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "logStreams": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database log streams request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database log streams request.</p>\n    \n      ",
            "shape_name": "StringList",
            "members": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          }
        },
        "shape_name": "GetRelationalDatabaseLogStreamsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of available log streams for a specific database in\n      Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseEvents": {
      "name": "GetRelationalDatabaseEvents",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database from which to get events.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database from which to get events.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "durationInMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of minutes in the past from which to retrieve events. For example, \n      to get all events from the past 2 hours, enter 120.</simpara>\n         <simpara>Default: <code>60</code>\n         </simpara>\n         <simpara>The minimum is 1 and the maximum is 14 days (20160 minutes).</simpara>\n      ",
            "documentation": "\n         <p>The number of minutes in the past from which to retrieve events. For example, \n      to get all events from the past 2 hours, enter 120.</p>\n         <p>Default: <code>60</code>\n         </p>\n         <p>The minimum is 1 and the maximum is 14 days (20160 minutes).</p>\n      ",
            "shape_name": "integer"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results from for get relational\n      database events request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results from for get relational\n      database events request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseEventsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "relationalDatabaseEvents": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database events request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database events request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseEventList",
            "members": {
              "type": "structure",
              "members": {
                "resource": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The database that the database event relates to.</simpara>\n      ",
                  "documentation": "\n         <p>The database that the database event relates to.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the database event was created.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the database event was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The message of the database event.</simpara>\n      ",
                  "documentation": "\n         <p>The message of the database event.</p>\n      ",
                  "shape_name": "string"
                },
                "eventCategories": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The category that the database event belongs to.</simpara>\n      ",
                  "documentation": "\n         <p>The category that the database event belongs to.</p>\n      ",
                  "shape_name": "StringList",
                  "members": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes an event for a database.</simpara>\n      ",
              "documentation": "\n         <p>Describes an event for a database.</p>\n      ",
              "shape_name": "RelationalDatabaseEvent"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get relational\n      database events request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get relational\n      database events request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseEventsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of events for a specific database in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseMetricData": {
      "name": "GetRelationalDatabaseMetricData",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database from which to get metric data.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database from which to get metric data.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "metricName": {
            "type": "string",
            "enum": [
              "CPUUtilization",
              "DatabaseConnections",
              "DiskQueueDepth",
              "FreeStorageSpace",
              "NetworkReceiveThroughput",
              "NetworkTransmitThroughput"
            ],
            "zonbookDocumentation": "\n         <simpara>The name of the metric data to return.</simpara>\n      ",
            "documentation": "\n         <p>The name of the metric data to return.</p>\n      ",
            "required": true,
            "shape_name": "RelationalDatabaseMetricName"
          },
          "period": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The granularity, in seconds, of the returned data points.</simpara>\n      ",
            "documentation": "\n         <p>The granularity, in seconds, of the returned data points.</p>\n      ",
            "required": true,
            "shape_name": "MetricPeriod",
            "min_length": 60,
            "max_length": 86400
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start of the time interval from which to get metric data.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in the Unix time format.</simpara>\n               <simpara>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the start time.</simpara>\n        \n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The start of the time interval from which to get metric data.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Specified in the Unix time format.</p>\n               <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the start time.</p>\n        \n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "IsoDate"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end of the time interval from which to get metric data.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in the Unix time format.</simpara>\n               <simpara>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the end time.</simpara>\n        \n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The end of the time interval from which to get metric data.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Specified in the Unix time format.</p>\n               <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the end time.</p>\n        \n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "IsoDate"
          },
          "unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n         <simpara>The unit for the metric data request.</simpara>\n      ",
            "documentation": "\n         <p>The unit for the metric data request.</p>\n      ",
            "required": true,
            "shape_name": "MetricUnit"
          },
          "statistics": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The array of statistics for your metric data request.</simpara>\n      ",
            "documentation": "\n         <p>The array of statistics for your metric data request.</p>\n      ",
            "required": true,
            "shape_name": "MetricStatisticList",
            "members": {
              "type": "string",
              "enum": [
                "Minimum",
                "Maximum",
                "Sum",
                "Average",
                "SampleCount"
              ],
              "shape_name": "MetricStatistic",
              "documentation": null
            }
          }
        },
        "shape_name": "GetRelationalDatabaseMetricDataRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "metricName": {
            "type": "string",
            "enum": [
              "CPUUtilization",
              "DatabaseConnections",
              "DiskQueueDepth",
              "FreeStorageSpace",
              "NetworkReceiveThroughput",
              "NetworkTransmitThroughput"
            ],
            "zonbookDocumentation": "\n         <simpara>The name of the metric.</simpara>\n      ",
            "documentation": "\n         <p>The name of the metric.</p>\n      ",
            "shape_name": "RelationalDatabaseMetricName"
          },
          "metricData": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database metric data request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database metric data request.</p>\n    \n      ",
            "shape_name": "MetricDatapointList",
            "members": {
              "type": "structure",
              "members": {
                "average": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The average.</simpara>\n      ",
                  "documentation": "\n         <p>The average.</p>\n      ",
                  "shape_name": "double"
                },
                "maximum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The maximum.</simpara>\n      ",
                  "documentation": "\n         <p>The maximum.</p>\n      ",
                  "shape_name": "double"
                },
                "minimum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The minimum.</simpara>\n      ",
                  "documentation": "\n         <p>The minimum.</p>\n      ",
                  "shape_name": "double"
                },
                "sampleCount": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sample count.</simpara>\n      ",
                  "documentation": "\n         <p>The sample count.</p>\n      ",
                  "shape_name": "double"
                },
                "sum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sum.</simpara>\n      ",
                  "documentation": "\n         <p>The sum.</p>\n      ",
                  "shape_name": "double"
                },
                "timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp (e.g., <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp (e.g., <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "timestamp"
                },
                "unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The unit. </simpara>\n      ",
                  "documentation": "\n         <p>The unit. </p>\n      ",
                  "shape_name": "MetricUnit"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the metric data point.</simpara>\n      ",
              "documentation": "\n         <p>Describes the metric data point.</p>\n      ",
              "shape_name": "MetricDatapoint"
            }
          }
        },
        "shape_name": "GetRelationalDatabaseMetricDataResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the data points of the specified metric for a database in\n      Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseLogEvents": {
      "name": "GetRelationalDatabaseLogEvents",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of your database for which to get log events.</simpara>\n      ",
            "documentation": "\n         <p>The name of your database for which to get log events.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "logStreamName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the log stream.</simpara>\n         <simpara>Use the <code>get relational database log streams</code> operation to get a list of available log\n      streams.</simpara>\n      ",
            "documentation": "\n         <p>The name of the log stream.</p>\n         <p>Use the <code>get relational database log streams</code> operation to get a list of available log\n      streams.</p>\n      ",
            "required": true,
            "shape_name": "string"
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start of the time interval from which to get log events.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in the Unix time format.</simpara>\n               <simpara>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the start time.</simpara>\n        \n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The start of the time interval from which to get log events.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Specified in the Unix time format.</p>\n               <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the start time.</p>\n        \n            </li>\n         </ul>\n      ",
            "shape_name": "IsoDate"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end of the time interval from which to get log events.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Specified in Universal Coordinated Time (UTC).</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Specified in the Unix time format.</simpara>\n               <simpara>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the end time.</simpara>\n        \n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The end of the time interval from which to get log events.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Specified in Universal Coordinated Time (UTC).</p>\n            </li>\n            <li>\n               <p>Specified in the Unix time format.</p>\n               <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input \n          <code>1538424000</code> as the end time.</p>\n        \n            </li>\n         </ul>\n      ",
            "shape_name": "IsoDate"
          },
          "startFromHead": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Parameter to specify if the log should start from head or tail. If <code>true</code> is\n      specified, the log event starts from the head of the log. If <code>false</code> is specified,\n      the log event starts from the tail of the log.</simpara>\n         <simpara>Default: <code>false</code>\n         </simpara>\n    \n    \n      ",
            "documentation": "\n         <p>Parameter to specify if the log should start from head or tail. If <code>true</code> is\n      specified, the log event starts from the head of the log. If <code>false</code> is specified,\n      the log event starts from the tail of the log.</p>\n         <p>Default: <code>false</code>\n         </p>\n    \n    \n      ",
            "shape_name": "boolean"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database log events request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database log events request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseLogEventsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resourceLogEvents": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database log events request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database log events request.</p>\n    \n      ",
            "shape_name": "LogEventList",
            "members": {
              "type": "structure",
              "members": {
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the database log event was created.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the database log event was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The message of the database log event.</simpara>\n      ",
                  "documentation": "\n         <p>The message of the database log event.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a database log event.</simpara>\n      ",
              "documentation": "\n         <p>Describes a database log event.</p>\n      ",
              "shape_name": "LogEvent"
            }
          },
          "nextBackwardToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the previous page of results from your get relational\n      database log events request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the previous page of results from your get relational\n      database log events request.</p>\n      ",
            "shape_name": "string"
          },
          "nextForwardToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get relational\n      database log events request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get relational\n      database log events request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseLogEventsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of log events for a database in Amazon Lightsail.</p>\n      "
    },
    "CreateRelationalDatabaseSnapshot": {
      "name": "CreateRelationalDatabaseSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database on which to base your new snapshot.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database on which to base your new snapshot.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "relationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name for your new database snapshot.</simpara>\n         <simpara>Constraints:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>Must contain from 2 to 255 alphanumeric characters, or hyphens.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>The first and last character must be a letter or number.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The name for your new database snapshot.</p>\n         <p>Constraints:</p>\n         <ul>\n            <li>\n               <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p>\n            </li>\n            <li>\n               <p>The first and last character must be a letter or number.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your create relational database snapshot request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your create relational database snapshot request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateRelationalDatabaseSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for\n      backups, to make copies of a database, and to save data before deleting a database.</p>\n      "
    },
    "DeleteRelationalDatabaseSnapshot": {
      "name": "DeleteRelationalDatabaseSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database snapshot that you are deleting.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database snapshot that you are deleting.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteRelationalDatabaseSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your delete relational database snapshot request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your delete relational database snapshot request.</p>\n    \n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "DeleteRelationalDatabaseSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Deletes a database snapshot in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseSnapshot": {
      "name": "GetRelationalDatabaseSnapshot",
      "input": {
        "type": "structure",
        "members": {
          "relationalDatabaseSnapshotName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the database snapshot for which to get information.</simpara>\n      ",
            "documentation": "\n         <p>The name of the database snapshot for which to get information.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetRelationalDatabaseSnapshotRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "relationalDatabaseSnapshot": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The name of the database snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The name of the database snapshot.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "arn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database snapshot.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "supportCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The support code for the database snapshot. Include this code in your email to support\n      when you have questions about a database snapshot in Lightsail. This code enables our\n      support team to look up your Lightsail information more easily.</simpara>\n      ",
                "documentation": "\n         <p>The support code for the database snapshot. Include this code in your email to support\n      when you have questions about a database snapshot in Lightsail. This code enables our\n      support team to look up your Lightsail information more easily.</p>\n      ",
                "shape_name": "string"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the database snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the database snapshot was created.</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The Region name and Availability Zone where the database snapshot is located.</simpara>\n      ",
                "documentation": "\n         <p>The Region name and Availability Zone where the database snapshot is located.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The Lightsail resource type.</simpara>\n      ",
                "documentation": "\n         <p>The Lightsail resource type.</p>\n      ",
                "shape_name": "ResourceType"
              },
              "tags": {
                "type": "list",
                "internalonly": true,
                "shape_name": "TagList",
                "documentation": null,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "shape_name": "TagKey",
                      "documentation": null
                    },
                    "value": {
                      "type": "string",
                      "shape_name": "TagValue",
                      "documentation": null
                    }
                  },
                  "shape_name": "Tag",
                  "documentation": null
                }
              },
              "engine": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The software of the database snapshot (for example, <code>MySQL</code>)</simpara>\n      ",
                "documentation": "\n         <p>The software of the database snapshot (for example, <code>MySQL</code>)</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "engineVersion": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The database engine version for the database snapshot (for example, <code>5.7.23</code>).</simpara>\n      ",
                "documentation": "\n         <p>The database engine version for the database snapshot (for example, <code>5.7.23</code>).</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "sizeInGb": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The size of the disk in GB (for example, <code>32</code>) for the database snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The size of the disk in GB (for example, <code>32</code>) for the database snapshot.</p>\n      ",
                "shape_name": "integer"
              },
              "state": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The state of the database snapshot.</simpara>\n      ",
                "documentation": "\n         <p>The state of the database snapshot.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "fromRelationalDatabaseName": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The name of the source database from which the database snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The name of the source database from which the database snapshot was created.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "fromRelationalDatabaseArn": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database from which the database snapshot was\n      created.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database from which the database snapshot was\n      created.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "fromRelationalDatabaseBundleId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The bundle ID of the database from which the database snapshot was created.</simpara>\n      ",
                "documentation": "\n         <p>The bundle ID of the database from which the database snapshot was created.</p>\n      ",
                "shape_name": "string"
              },
              "fromRelationalDatabaseBlueprintId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The blueprint ID of the database from which the database snapshot was created. A \n      blueprint describes the major engine version of a database.</simpara>\n      ",
                "documentation": "\n         <p>The blueprint ID of the database from which the database snapshot was created. A \n      blueprint describes the major engine version of a database.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An object describing the specified database snapshot.</simpara>\n      ",
            "documentation": "\n         <p>An object describing the specified database snapshot.</p>\n      ",
            "shape_name": "RelationalDatabaseSnapshot"
          }
        },
        "shape_name": "GetRelationalDatabaseSnapshotResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific database snapshot in Amazon Lightsail.</p>\n      "
    },
    "GetRelationalDatabaseSnapshots": {
      "name": "GetRelationalDatabaseSnapshots",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to a specific page of results for your get relational\n      database snapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to a specific page of results for your get relational\n      database snapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseSnapshotsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "relationalDatabaseSnapshots": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An object describing the result of your get relational database snapshots request.</simpara>\n    \n      ",
            "documentation": "\n         <p>An object describing the result of your get relational database snapshots request.</p>\n    \n      ",
            "shape_name": "RelationalDatabaseSnapshotList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The name of the database snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the database snapshot.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database snapshot.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "supportCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The support code for the database snapshot. Include this code in your email to support\n      when you have questions about a database snapshot in Lightsail. This code enables our\n      support team to look up your Lightsail information more easily.</simpara>\n      ",
                  "documentation": "\n         <p>The support code for the database snapshot. Include this code in your email to support\n      when you have questions about a database snapshot in Lightsail. This code enables our\n      support team to look up your Lightsail information more easily.</p>\n      ",
                  "shape_name": "string"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the database snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the database snapshot was created.</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The Region name and Availability Zone where the database snapshot is located.</simpara>\n      ",
                  "documentation": "\n         <p>The Region name and Availability Zone where the database snapshot is located.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The Lightsail resource type.</simpara>\n      ",
                  "documentation": "\n         <p>The Lightsail resource type.</p>\n      ",
                  "shape_name": "ResourceType"
                },
                "tags": {
                  "type": "list",
                  "internalonly": true,
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                },
                "engine": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The software of the database snapshot (for example, <code>MySQL</code>)</simpara>\n      ",
                  "documentation": "\n         <p>The software of the database snapshot (for example, <code>MySQL</code>)</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "engineVersion": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The database engine version for the database snapshot (for example, <code>5.7.23</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The database engine version for the database snapshot (for example, <code>5.7.23</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "sizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size of the disk in GB (for example, <code>32</code>) for the database snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The size of the disk in GB (for example, <code>32</code>) for the database snapshot.</p>\n      ",
                  "shape_name": "integer"
                },
                "state": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The state of the database snapshot.</simpara>\n      ",
                  "documentation": "\n         <p>The state of the database snapshot.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "fromRelationalDatabaseName": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The name of the source database from which the database snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the source database from which the database snapshot was created.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "fromRelationalDatabaseArn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the database from which the database snapshot was\n      created.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the database from which the database snapshot was\n      created.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "fromRelationalDatabaseBundleId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The bundle ID of the database from which the database snapshot was created.</simpara>\n      ",
                  "documentation": "\n         <p>The bundle ID of the database from which the database snapshot was created.</p>\n      ",
                  "shape_name": "string"
                },
                "fromRelationalDatabaseBlueprintId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The blueprint ID of the database from which the database snapshot was created. A \n      blueprint describes the major engine version of a database.</simpara>\n      ",
                  "documentation": "\n         <p>The blueprint ID of the database from which the database snapshot was created. A \n      blueprint describes the major engine version of a database.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a database snapshot.</simpara>\n      ",
              "documentation": "\n         <p>Describes a database snapshot.</p>\n      ",
              "shape_name": "RelationalDatabaseSnapshot"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get relational\n      database snapshots request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get relational\n      database snapshots request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetRelationalDatabaseSnapshotsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all of your database snapshots in Amazon Lightsail.</p>\n      "
    },
    "GetBlueprints": {
      "name": "GetBlueprints",
      "input": {
        "type": "structure",
        "members": {
          "includeInactive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether to include inactive results in your\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A Boolean value indicating whether to include inactive results in your\n      request.</p>\n      ",
            "shape_name": "boolean"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get blueprints\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get blueprints\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetBlueprintsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "blueprints": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs that contains information about the available\n      blueprints.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs that contains information about the available\n      blueprints.</p>\n      ",
            "shape_name": "BlueprintList",
            "members": {
              "type": "structure",
              "members": {
                "blueprintId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID for the virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The ID for the virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "group": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The group name of the blueprint (e.g., <code>amazon-linux</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The group name of the blueprint (e.g., <code>amazon-linux</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "os",
                    "app"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of the blueprint (e.g., <code>os</code> or <code>app</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The type of the blueprint (e.g., <code>os</code> or <code>app</code>).</p>\n      ",
                  "shape_name": "BlueprintType"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of the blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "isActive": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the blueprint is active. Inactive blueprints are\n      listed to support customers with existing instances but are not necessarily available for\n      launch of new instances. Blueprints are marked inactive when they become outdated due to\n      operating system updates or new application releases.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the blueprint is active. Inactive blueprints are\n      listed to support customers with existing instances but are not necessarily available for\n      launch of new instances. Blueprints are marked inactive when they become outdated due to\n      operating system updates or new application releases.</p>\n      ",
                  "shape_name": "boolean"
                },
                "minPower": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The minimum bundle power required to run this blueprint. For example, you need a bundle with a power value of 500 or more to create an \n      instance that uses a blueprint with a minimum power value of 500. <code>0</code> indicates that the blueprint runs on all instance sizes. </simpara>\n      ",
                  "documentation": "\n         <p>The minimum bundle power required to run this blueprint. For example, you need a bundle with a power value of 500 or more to create an \n      instance that uses a blueprint with a minimum power value of 500. <code>0</code> indicates that the blueprint runs on all instance sizes. </p>\n      ",
                  "shape_name": "integer"
                },
                "version": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The version number of the operating system, application, or stack (e.g., <code>2016.03.0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The version number of the operating system, application, or stack (e.g., <code>2016.03.0</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "versionCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The version code.</simpara>\n      ",
                  "documentation": "\n         <p>The version code.</p>\n      ",
                  "shape_name": "string"
                },
                "productUrl": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The product URL to learn more about the image or blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The product URL to learn more about the image or blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "licenseUrl": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The end-user license agreement URL for the image or blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The end-user license agreement URL for the image or blueprint.</p>\n      ",
                  "shape_name": "string"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "LINUX_UNIX",
                    "WINDOWS"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The operating system platform (either Linux/Unix-based or Windows Server-based) of the blueprint.</simpara>\n      ",
                  "documentation": "\n         <p>The operating system platform (either Linux/Unix-based or Windows Server-based) of the blueprint.</p>\n      ",
                  "shape_name": "InstancePlatform"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a blueprint (a virtual private server image).</simpara>\n      ",
              "documentation": "\n         <p>Describes a blueprint (a virtual private server image).</p>\n      ",
              "shape_name": "Blueprint"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get blueprints\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get blueprints\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetBlueprintsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the list of available instance images, or <i>blueprints</i>. You\n      can use a blueprint to create a new virtual private server already running a specific\n      operating system, as well as a preinstalled app or development stack. The software each\n      instance is running depends on the blueprint image you choose.</p>\n      "
    },
    "GetBundles": {
      "name": "GetBundles",
      "input": {
        "type": "structure",
        "members": {
          "includeInactive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>A Boolean value that indicates whether to include inactive bundle results in your\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A Boolean value that indicates whether to include inactive bundle results in your\n      request.</p>\n      ",
            "shape_name": "boolean"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get bundles\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get bundles\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetBundlesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "bundles": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs that contains information about the available\n      bundles.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs that contains information about the available\n      bundles.</p>\n      ",
            "shape_name": "BundleList",
            "members": {
              "type": "structure",
              "members": {
                "price": {
                  "type": "float",
                  "zonbookDocumentation": "\n         <simpara>The price in US dollars (e.g., <code>5.0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The price in US dollars (e.g., <code>5.0</code>).</p>\n      ",
                  "shape_name": "float"
                },
                "cpuCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of vCPUs included in the bundle (e.g., <code>2</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The number of vCPUs included in the bundle (e.g., <code>2</code>).</p>\n      ",
                  "shape_name": "integer"
                },
                "diskSizeInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The size of the SSD (e.g., <code>30</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The size of the SSD (e.g., <code>30</code>).</p>\n      ",
                  "shape_name": "integer"
                },
                "bundleId": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The bundle ID (e.g., <code>micro_1_0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The bundle ID (e.g., <code>micro_1_0</code>).</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "instanceType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Amazon EC2 instance type (e.g., <code>t2.micro</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon EC2 instance type (e.g., <code>t2.micro</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "isActive": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the bundle is active.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the bundle is active.</p>\n      ",
                  "shape_name": "boolean"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>A friendly name for the bundle (e.g., <code>Micro</code>).</simpara>\n      ",
                  "documentation": "\n         <p>A friendly name for the bundle (e.g., <code>Micro</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "power": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>A numeric value that represents the power of the bundle (e.g., <code>500</code>). You can use the bundle's power value in conjunction with a blueprint's minimum power value to determine whether the blueprint will run on the bundle. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500.</simpara>\n      ",
                  "documentation": "\n         <p>A numeric value that represents the power of the bundle (e.g., <code>500</code>). You can use the bundle's power value in conjunction with a blueprint's minimum power value to determine whether the blueprint will run on the bundle. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500.</p>\n      ",
                  "shape_name": "integer"
                },
                "ramSizeInGb": {
                  "type": "float",
                  "zonbookDocumentation": "\n         <simpara>The amount of RAM in GB (e.g., <code>2.0</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The amount of RAM in GB (e.g., <code>2.0</code>).</p>\n      ",
                  "shape_name": "float"
                },
                "transferPerMonthInGb": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The data transfer rate per month in GB (e.g., <code>2000</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The data transfer rate per month in GB (e.g., <code>2000</code>).</p>\n      ",
                  "shape_name": "integer"
                },
                "supportedPlatforms": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The operating system platform (Linux/Unix-based or Windows Server-based) that the bundle supports. \n        You can only launch a <code>WINDOWS</code> bundle on a blueprint that supports the <code>WINDOWS</code> platform. <code>LINUX_UNIX</code> blueprints require a <code>LINUX_UNIX</code> bundle.</simpara>\n      ",
                  "documentation": "\n         <p>The operating system platform (Linux/Unix-based or Windows Server-based) that the bundle supports. \n        You can only launch a <code>WINDOWS</code> bundle on a blueprint that supports the <code>WINDOWS</code> platform. <code>LINUX_UNIX</code> blueprints require a <code>LINUX_UNIX</code> bundle.</p>\n      ",
                  "shape_name": "InstancePlatformList",
                  "members": {
                    "type": "string",
                    "enum": [
                      "LINUX_UNIX",
                      "WINDOWS"
                    ],
                    "shape_name": "InstancePlatform",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a bundle, which is a set of specs describing your virtual private server (or <emphasis>instance</emphasis>).</simpara>\n      ",
              "documentation": "\n         <p>Describes a bundle, which is a set of specs describing your virtual private server (or <i>instance</i>).</p>\n      ",
              "shape_name": "Bundle"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get active names\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get active names\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetBundlesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the list of bundles that are available for purchase. A bundle describes the\n      specs for your virtual private server (or <i>instance</i>).</p>\n      "
    },
    "PeerVpc": {
      "name": "PeerVpc",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PeerVpcRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "PeerVpcResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Tries to peer the Lightsail VPC with the user's default VPC.</p>\n      "
    },
    "UnpeerVpc": {
      "name": "UnpeerVpc",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UnpeerVpcRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the request operation.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the request operation.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "UnpeerVpcResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Attempts to unpeer the Lightsail VPC from the user's default VPC.</p>\n      "
    },
    "IsVpcPeered": {
      "name": "IsVpcPeered",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "IsVpcPeeredRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "isPeered": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Returns <code>true</code> if the Lightsail VPC is peered; otherwise, <code>false</code>.</simpara>\n      ",
            "documentation": "\n         <p>Returns <code>true</code> if the Lightsail VPC is peered; otherwise, <code>false</code>.</p>\n      ",
            "shape_name": "boolean"
          }
        },
        "shape_name": "IsVpcPeeredResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a Boolean value indicating whether your Lightsail VPC is peered.</p>\n      "
    },
    "GetRegions": {
      "name": "GetRegions",
      "input": {
        "type": "structure",
        "members": {
          "includeAvailabilityZones": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether to also include Availability Zones in your get\n      regions request. Availability Zones are indicated with a letter: e.g.,\n      <code>us-east-2a</code>.</simpara>\n      ",
            "documentation": "\n         <p>A Boolean value indicating whether to also include Availability Zones in your get\n      regions request. Availability Zones are indicated with a letter: e.g.,\n      <code>us-east-2a</code>.</p>\n      ",
            "shape_name": "boolean"
          },
          "includeRelationalDatabaseAvailabilityZones": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>&gt;A Boolean value indicating whether to also include Availability Zones for databases in\n      your get regions request. Availability Zones are indicated with a letter (e.g.,\n        <code>us-east-2a</code>).</simpara>\n      ",
            "documentation": "\n         <p>&gt;A Boolean value indicating whether to also include Availability Zones for databases in\n      your get regions request. Availability Zones are indicated with a letter (e.g.,\n        <code>us-east-2a</code>).</p>\n      ",
            "shape_name": "boolean"
          }
        },
        "shape_name": "GetRegionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "regions": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about your get regions request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about your get regions request.</p>\n      ",
            "shape_name": "RegionList",
            "members": {
              "type": "structure",
              "members": {
                "continentCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The continent code (e.g., <code>NA</code>, meaning North America).</simpara>\n      ",
                  "documentation": "\n         <p>The continent code (e.g., <code>NA</code>, meaning North America).</p>\n      ",
                  "shape_name": "string"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of the AWS Region (e.g., <code>This region is recommended to serve users in the eastern United States and eastern Canada</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The description of the AWS Region (e.g., <code>This region is recommended to serve users in the eastern United States and eastern Canada</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "displayName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The display name (e.g., <code>Ohio</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The display name (e.g., <code>Ohio</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "us-east-1",
                    "us-east-2",
                    "us-west-1",
                    "us-west-2",
                    "eu-west-1",
                    "eu-west-2",
                    "eu-west-3",
                    "eu-central-1",
                    "ca-central-1",
                    "ap-south-1",
                    "ap-southeast-1",
                    "ap-southeast-2",
                    "ap-northeast-1",
                    "ap-northeast-2"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The region name (e.g., <code>us-east-2</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The region name (e.g., <code>us-east-2</code>).</p>\n      ",
                  "shape_name": "RegionName"
                },
                "availabilityZones": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The Availability Zones. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                  "documentation": "\n         <p>The Availability Zones. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                  "shape_name": "AvailabilityZoneList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "zoneName": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "state": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The state of the Availability Zone.</simpara>\n      ",
                        "documentation": "\n         <p>The state of the Availability Zone.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes an Availability Zone.</simpara>\n      ",
                    "documentation": "\n         <p>Describes an Availability Zone.</p>\n      ",
                    "shape_name": "AvailabilityZone"
                  }
                },
                "relationalDatabaseAvailabilityZones": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The Availability Zones for databases. Follows the format <code>us-east-2a</code>\n      (case-sensitive).</simpara>\n      ",
                  "documentation": "\n         <p>The Availability Zones for databases. Follows the format <code>us-east-2a</code>\n      (case-sensitive).</p>\n      ",
                  "shape_name": "AvailabilityZoneList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "zoneName": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                        "shape_name": "NonEmptyString"
                      },
                      "state": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "zonbookDocumentation": "\n         <simpara>The state of the Availability Zone.</simpara>\n      ",
                        "documentation": "\n         <p>The state of the Availability Zone.</p>\n      ",
                        "shape_name": "NonEmptyString"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Describes an Availability Zone.</simpara>\n      ",
                    "documentation": "\n         <p>Describes an Availability Zone.</p>\n      ",
                    "shape_name": "AvailabilityZone"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the AWS Region.</simpara>\n      ",
              "documentation": "\n         <p>Describes the AWS Region.</p>\n      ",
              "shape_name": "Region"
            }
          }
        },
        "shape_name": "GetRegionsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability\n      zones</code> parameter to also return the Availability Zones in a region.</p>\n      "
    },
    "GetOperation": {
      "name": "GetOperation",
      "input": {
        "type": "structure",
        "members": {
          "operationId": {
            "type": "string",
            "pattern": ".*\\S.*",
            "zonbookDocumentation": "\n         <simpara>A GUID used to identify the operation.</simpara>\n      ",
            "documentation": "\n         <p>A GUID used to identify the operation.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString"
          }
        },
        "shape_name": "GetOperationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operation": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": ".*\\S.*",
                "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                "shape_name": "NonEmptyString"
              },
              "resourceName": {
                "type": "string",
                "pattern": "\\w[\\w\\-]*\\w",
                "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                "documentation": "\n         <p>The resource name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resourceType": {
                "type": "string",
                "enum": [
                  "Instance",
                  "StaticIp",
                  "KeyPair",
                  "InstanceSnapshot",
                  "Domain",
                  "PeeredVpc",
                  "LoadBalancer",
                  "LoadBalancerTlsCertificate",
                  "Disk",
                  "DiskSnapshot",
                  "RelationalDatabase",
                  "RelationalDatabaseSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                "documentation": "\n         <p>The resource type. </p>\n      ",
                "shape_name": "ResourceType"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "location": {
                "type": "structure",
                "members": {
                  "availabilityZone": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                    "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                    "shape_name": "string"
                  },
                  "regionName": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-east-2",
                      "us-west-1",
                      "us-west-2",
                      "eu-west-1",
                      "eu-west-2",
                      "eu-west-3",
                      "eu-central-1",
                      "ca-central-1",
                      "ap-south-1",
                      "ap-southeast-1",
                      "ap-southeast-2",
                      "ap-northeast-1",
                      "ap-northeast-2"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                    "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                    "shape_name": "RegionName"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                "shape_name": "ResourceLocation"
              },
              "isTerminal": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                "shape_name": "boolean"
              },
              "operationDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                "shape_name": "string"
              },
              "operationType": {
                "type": "string",
                "enum": [
                  "DeleteInstance",
                  "CreateInstance",
                  "StopInstance",
                  "StartInstance",
                  "RebootInstance",
                  "OpenInstancePublicPorts",
                  "PutInstancePublicPorts",
                  "CloseInstancePublicPorts",
                  "AllocateStaticIp",
                  "ReleaseStaticIp",
                  "AttachStaticIp",
                  "DetachStaticIp",
                  "UpdateDomainEntry",
                  "DeleteDomainEntry",
                  "CreateDomain",
                  "DeleteDomain",
                  "CreateInstanceSnapshot",
                  "DeleteInstanceSnapshot",
                  "CreateInstancesFromSnapshot",
                  "CreateLoadBalancer",
                  "DeleteLoadBalancer",
                  "AttachInstancesToLoadBalancer",
                  "DetachInstancesFromLoadBalancer",
                  "UpdateLoadBalancerAttribute",
                  "CreateLoadBalancerTlsCertificate",
                  "DeleteLoadBalancerTlsCertificate",
                  "AttachLoadBalancerTlsCertificate",
                  "CreateDisk",
                  "DeleteDisk",
                  "AttachDisk",
                  "DetachDisk",
                  "CreateDiskSnapshot",
                  "DeleteDiskSnapshot",
                  "CreateDiskFromSnapshot"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                "documentation": "\n         <p>The type of operation. </p>\n      ",
                "shape_name": "OperationType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Started",
                  "Failed",
                  "Completed",
                  "Succeeded"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                "documentation": "\n         <p>The status of the operation. </p>\n      ",
                "shape_name": "OperationStatus"
              },
              "statusChangedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                "shape_name": "IsoDate"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                "documentation": "\n         <p>The error code.</p>\n      ",
                "shape_name": "string"
              },
              "errorDetails": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                "documentation": "\n         <p>The error details.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get operation request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get operation request.</p>\n      ",
            "shape_name": "Operation"
          }
        },
        "shape_name": "GetOperationResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about a specific operation. Operations include events such as when\n      you create an instance, allocate a static IP, attach a static IP, and so on.</p>\n      "
    },
    "GetOperationsForResource": {
      "name": "GetOperationsForResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the resource for which you are requesting information.</simpara>\n      ",
            "documentation": "\n         <p>The name of the resource for which you are requesting information.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get operations for resource request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get operations for resource request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetOperationsForResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get operations for resource request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get operations for resource request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          },
          "nextPageCount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>(Deprecated) Returns the number of pages of results that remain.</simpara>\n         <note>\n            <simpara>In releases prior to June 12, 2017, this parameter returned <code>null</code> by the API. It is now deprecated, \n      and the API returns the <code>next page token</code> parameter instead.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>(Deprecated) Returns the number of pages of results that remain.</p>\n         <note>\n            <p>In releases prior to June 12, 2017, this parameter returned <code>null</code> by the API. It is now deprecated, \n      and the API returns the <code>next page token</code> parameter instead.</p>\n         </note>\n      ",
            "deprecated": true,
            "shape_name": "string"
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An identifier that was returned from the previous call to this operation, which can \n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can \n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetOperationsForResourceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Gets operations for a specific resource (e.g., an instance or a static IP).</p>\n      "
    },
    "GetOperations": {
      "name": "GetOperations",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get operations request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get operations request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetOperationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get operations request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get operations request.</p>\n      ",
            "shape_name": "OperationList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get operations request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get operations request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetOperationsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns information about all operations.</p>\n         <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be\n      paged by making each subsequent call to <code>GetOperations</code> use the maximum (last)\n        <code>statusChangedAt</code> value from the previous request.</p>\n      "
    },
    "GetInstanceMetricData": {
      "name": "GetInstanceMetricData",
      "input": {
        "type": "structure",
        "members": {
          "instanceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "zonbookDocumentation": "\n         <simpara>The name of the instance for which you want to get metrics data.</simpara>\n      ",
            "documentation": "\n         <p>The name of the instance for which you want to get metrics data.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "metricName": {
            "type": "string",
            "enum": [
              "CPUUtilization",
              "NetworkIn",
              "NetworkOut",
              "StatusCheckFailed",
              "StatusCheckFailed_Instance",
              "StatusCheckFailed_System"
            ],
            "zonbookDocumentation": "\n         <simpara>The metric name to get data about. </simpara>\n      ",
            "documentation": "\n         <p>The metric name to get data about. </p>\n      ",
            "required": true,
            "shape_name": "InstanceMetricName"
          },
          "period": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The granularity, in seconds, of the returned data points.</simpara>\n      ",
            "documentation": "\n         <p>The granularity, in seconds, of the returned data points.</p>\n      ",
            "required": true,
            "shape_name": "MetricPeriod",
            "min_length": 60,
            "max_length": 86400
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start time of the time period.</simpara>\n      ",
            "documentation": "\n         <p>The start time of the time period.</p>\n      ",
            "required": true,
            "shape_name": "timestamp"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end time of the time period.</simpara>\n      ",
            "documentation": "\n         <p>The end time of the time period.</p>\n      ",
            "required": true,
            "shape_name": "timestamp"
          },
          "unit": {
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ],
            "zonbookDocumentation": "\n         <simpara>The unit. The list of valid values is below.</simpara>\n      ",
            "documentation": "\n         <p>The unit. The list of valid values is below.</p>\n      ",
            "required": true,
            "shape_name": "MetricUnit"
          },
          "statistics": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The instance statistics. </simpara>\n      ",
            "documentation": "\n         <p>The instance statistics. </p>\n      ",
            "required": true,
            "shape_name": "MetricStatisticList",
            "members": {
              "type": "string",
              "enum": [
                "Minimum",
                "Maximum",
                "Sum",
                "Average",
                "SampleCount"
              ],
              "shape_name": "MetricStatistic",
              "documentation": null
            }
          }
        },
        "shape_name": "GetInstanceMetricDataRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "metricName": {
            "type": "string",
            "enum": [
              "CPUUtilization",
              "NetworkIn",
              "NetworkOut",
              "StatusCheckFailed",
              "StatusCheckFailed_Instance",
              "StatusCheckFailed_System"
            ],
            "zonbookDocumentation": "\n         <simpara>The metric name to return data for.</simpara>\n      ",
            "documentation": "\n         <p>The metric name to return data for.</p>\n      ",
            "shape_name": "InstanceMetricName"
          },
          "metricData": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>An array of key-value pairs containing information about the results of your get\n      instance metric data request.</simpara>\n      ",
            "documentation": "\n         <p>An array of key-value pairs containing information about the results of your get\n      instance metric data request.</p>\n      ",
            "shape_name": "MetricDatapointList",
            "members": {
              "type": "structure",
              "members": {
                "average": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The average.</simpara>\n      ",
                  "documentation": "\n         <p>The average.</p>\n      ",
                  "shape_name": "double"
                },
                "maximum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The maximum.</simpara>\n      ",
                  "documentation": "\n         <p>The maximum.</p>\n      ",
                  "shape_name": "double"
                },
                "minimum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The minimum.</simpara>\n      ",
                  "documentation": "\n         <p>The minimum.</p>\n      ",
                  "shape_name": "double"
                },
                "sampleCount": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sample count.</simpara>\n      ",
                  "documentation": "\n         <p>The sample count.</p>\n      ",
                  "shape_name": "double"
                },
                "sum": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The sum.</simpara>\n      ",
                  "documentation": "\n         <p>The sum.</p>\n      ",
                  "shape_name": "double"
                },
                "timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp (e.g., <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp (e.g., <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "timestamp"
                },
                "unit": {
                  "type": "string",
                  "enum": [
                    "Seconds",
                    "Microseconds",
                    "Milliseconds",
                    "Bytes",
                    "Kilobytes",
                    "Megabytes",
                    "Gigabytes",
                    "Terabytes",
                    "Bits",
                    "Kilobits",
                    "Megabits",
                    "Gigabits",
                    "Terabits",
                    "Percent",
                    "Count",
                    "Bytes/Second",
                    "Kilobytes/Second",
                    "Megabytes/Second",
                    "Gigabytes/Second",
                    "Terabytes/Second",
                    "Bits/Second",
                    "Kilobits/Second",
                    "Megabits/Second",
                    "Gigabits/Second",
                    "Terabits/Second",
                    "Count/Second",
                    "None"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The unit. </simpara>\n      ",
                  "documentation": "\n         <p>The unit. </p>\n      ",
                  "shape_name": "MetricUnit"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the metric data point.</simpara>\n      ",
              "documentation": "\n         <p>Describes the metric data point.</p>\n      ",
              "shape_name": "MetricDatapoint"
            }
          }
        },
        "shape_name": "GetInstanceMetricDataResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.</p>\n      "
    },
    "TagResource": {
      "name": "TagResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          },
          "tags": {
            "type": "list",
            "required": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "TagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "TagResourceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "UntagResource": {
      "name": "UntagResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          },
          "tagKeys": {
            "type": "list",
            "required": true,
            "shape_name": "TagKeyList",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            }
          }
        },
        "shape_name": "UntagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "UntagResourceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetTagsForResource": {
      "name": "GetTagsForResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceName": {
            "type": "string",
            "pattern": "\\w[\\w\\-]*\\w",
            "required": true,
            "shape_name": "ResourceName",
            "documentation": null
          }
        },
        "shape_name": "GetTagsForResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tags": {
            "type": "list",
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "GetTagsForResourceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetResources": {
      "name": "GetResources",
      "input": {
        "type": "structure",
        "members": {
          "tagFilters": {
            "type": "list",
            "required": true,
            "shape_name": "TagFilterList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "values": {
                  "type": "list",
                  "shape_name": "TagValueList",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "shape_name": "TagValue",
                    "documentation": null
                  }
                }
              },
              "shape_name": "TagFilter",
              "documentation": null
            }
          },
          "pageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetResourcesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resources": {
            "type": "list",
            "shape_name": "ResourceList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "shape_name": "ResourceName",
                  "documentation": null
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "shape_name": "NonEmptyString",
                  "documentation": null
                },
                "createdAt": {
                  "type": "timestamp",
                  "shape_name": "IsoDate",
                  "documentation": null
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the resource location.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the resource location.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "shape_name": "ResourceType",
                  "documentation": null
                },
                "tags": {
                  "type": "list",
                  "shape_name": "TagList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "shape_name": "TagKey",
                        "documentation": null
                      },
                      "value": {
                        "type": "string",
                        "shape_name": "TagValue",
                        "documentation": null
                      }
                    },
                    "shape_name": "Tag",
                    "documentation": null
                  }
                }
              },
              "shape_name": "ResourceResult",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetResourcesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetTagKeys": {
      "name": "GetTagKeys",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetTagKeysRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tagKeys": {
            "type": "list",
            "shape_name": "TagKeyList",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetTagKeysResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetTagValues": {
      "name": "GetTagValues",
      "input": {
        "type": "structure",
        "members": {
          "key": {
            "type": "string",
            "shape_name": "TagKey",
            "documentation": null
          },
          "pageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetTagValuesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tagValues": {
            "type": "list",
            "shape_name": "TagValueList",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "TagValue",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetTagValuesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetActiveNames": {
      "name": "GetActiveNames",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for paginating results from your get active names request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for paginating results from your get active names request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetActiveNamesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "activeNames": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of active names returned by the get active names request.</simpara>\n      ",
            "documentation": "\n         <p>The list of active names returned by the get active names request.</p>\n      ",
            "shape_name": "StringList",
            "members": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used for advancing to the next page of results from your get active names\n      request.</simpara>\n      ",
            "documentation": "\n         <p>A token used for advancing to the next page of results from your get active names\n      request.</p>\n      ",
            "shape_name": "string"
          }
        },
        "shape_name": "GetActiveNamesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": "\n         <p>Returns the names of all active (not deleted) resources.</p>\n      "
    },
    "GetExportSnapshotRecords": {
      "name": "GetExportSnapshotRecords",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetExportSnapshotRecordsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "exportSnapshotRecords": {
            "type": "list",
            "shape_name": "ExportSnapshotRecordList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "shape_name": "ResourceName",
                  "documentation": null
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "shape_name": "NonEmptyString",
                  "documentation": null
                },
                "createdAt": {
                  "type": "timestamp",
                  "shape_name": "IsoDate",
                  "documentation": null
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the resource location.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the resource location.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "shape_name": "ResourceType",
                  "documentation": null
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "started",
                    "succeeded",
                    "failed"
                  ],
                  "shape_name": "RecordState",
                  "documentation": null
                },
                "sourceInfo": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "InstanceSnapshot",
                        "DiskSnapshot"
                      ],
                      "shape_name": "ExportSnapshotRecordSourceType",
                      "documentation": null
                    },
                    "name": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "arn": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "fromResourceName": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "fromResourceArn": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "instanceSnapshotInfo": {
                      "type": "structure",
                      "members": {
                        "fromBundleId": {
                          "type": "string",
                          "pattern": ".*\\S.*",
                          "shape_name": "NonEmptyString",
                          "documentation": null
                        },
                        "fromBlueprintId": {
                          "type": "string",
                          "pattern": ".*\\S.*",
                          "shape_name": "NonEmptyString",
                          "documentation": null
                        },
                        "fromDiskInfo": {
                          "type": "list",
                          "shape_name": "DiskInfoList",
                          "documentation": null,
                          "members": {
                            "type": "structure",
                            "members": {
                              "name": {
                                "type": "string",
                                "shape_name": "string",
                                "documentation": null
                              },
                              "path": {
                                "type": "string",
                                "pattern": ".*\\S.*",
                                "shape_name": "NonEmptyString",
                                "documentation": null
                              },
                              "sizeInGb": {
                                "type": "integer",
                                "shape_name": "integer",
                                "documentation": null
                              },
                              "isSystemDisk": {
                                "type": "boolean",
                                "shape_name": "boolean",
                                "documentation": null
                              }
                            },
                            "shape_name": "DiskInfo",
                            "documentation": null
                          }
                        }
                      },
                      "shape_name": "InstanceSnapshotInfo",
                      "documentation": null
                    },
                    "diskSnapshotInfo": {
                      "type": "structure",
                      "members": {
                        "sizeInGb": {
                          "type": "integer",
                          "shape_name": "integer",
                          "documentation": null
                        }
                      },
                      "shape_name": "DiskSnapshotInfo",
                      "documentation": null
                    }
                  },
                  "shape_name": "ExportSnapshotRecordSourceInfo",
                  "documentation": null
                },
                "destinationInfo": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "service": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    }
                  },
                  "shape_name": "DestinationInfo",
                  "documentation": null
                }
              },
              "shape_name": "ExportSnapshotRecord",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetExportSnapshotRecordsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "GetCloudFormationStackRecords": {
      "name": "GetCloudFormationStackRecords",
      "input": {
        "type": "structure",
        "members": {
          "pageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetCloudFormationStackRecordsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "cloudFormationStackRecords": {
            "type": "list",
            "shape_name": "CloudFormationStackRecordList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "shape_name": "ResourceName",
                  "documentation": null
                },
                "arn": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "shape_name": "NonEmptyString",
                  "documentation": null
                },
                "createdAt": {
                  "type": "timestamp",
                  "shape_name": "IsoDate",
                  "documentation": null
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the resource location.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the resource location.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "shape_name": "ResourceType",
                  "documentation": null
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "started",
                    "succeeded",
                    "failed"
                  ],
                  "shape_name": "RecordState",
                  "documentation": null
                },
                "sourceInfo": {
                  "type": "list",
                  "shape_name": "CloudFormationStackRecordSourceInfoList",
                  "documentation": null,
                  "members": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ExportSnapshotRecord"
                        ],
                        "shape_name": "CloudFormationStackRecordSourceType",
                        "documentation": null
                      },
                      "name": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "shape_name": "NonEmptyString",
                        "documentation": null
                      },
                      "arn": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "shape_name": "NonEmptyString",
                        "documentation": null
                      }
                    },
                    "shape_name": "CloudFormationStackRecordSourceInfo",
                    "documentation": null
                  }
                },
                "destinationInfo": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    },
                    "service": {
                      "type": "string",
                      "pattern": ".*\\S.*",
                      "shape_name": "NonEmptyString",
                      "documentation": null
                    }
                  },
                  "shape_name": "DestinationInfo",
                  "documentation": null
                }
              },
              "shape_name": "CloudFormationStackRecord",
              "documentation": null
            }
          },
          "nextPageToken": {
            "type": "string",
            "shape_name": "string",
            "documentation": null
          }
        },
        "shape_name": "GetCloudFormationStackRecordsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    },
    "CreateCloudFormationStack": {
      "name": "CreateCloudFormationStack",
      "input": {
        "type": "structure",
        "members": {
          "instances": {
            "type": "list",
            "shape_name": "InstanceEntryList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "sourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "shape_name": "ResourceName",
                  "documentation": null
                },
                "instanceType": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "shape_name": "NonEmptyString",
                  "documentation": null
                },
                "portInfoSource": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "INSTANCE",
                    "NONE"
                  ],
                  "shape_name": "PortInfoSourceType",
                  "documentation": null
                },
                "userData": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                },
                "availabilityZone": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              },
              "shape_name": "InstanceEntry",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateCloudFormationStackRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "shape_name": "OperationList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": ".*\\S.*",
                  "zonbookDocumentation": "\n         <simpara>The ID of the operation.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the operation.</p>\n      ",
                  "shape_name": "NonEmptyString"
                },
                "resourceName": {
                  "type": "string",
                  "pattern": "\\w[\\w\\-]*\\w",
                  "zonbookDocumentation": "\n         <simpara>The resource name.</simpara>\n      ",
                  "documentation": "\n         <p>The resource name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resourceType": {
                  "type": "string",
                  "enum": [
                    "Instance",
                    "StaticIp",
                    "KeyPair",
                    "InstanceSnapshot",
                    "Domain",
                    "PeeredVpc",
                    "LoadBalancer",
                    "LoadBalancerTlsCertificate",
                    "Disk",
                    "DiskSnapshot",
                    "RelationalDatabase",
                    "RelationalDatabaseSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The resource type. </simpara>\n      ",
                  "documentation": "\n         <p>The resource type. </p>\n      ",
                  "shape_name": "ResourceType"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the operation was initialized (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</simpara>\n      ",
                      "documentation": "\n         <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>\n      ",
                      "shape_name": "string"
                    },
                    "regionName": {
                      "type": "string",
                      "enum": [
                        "us-east-1",
                        "us-east-2",
                        "us-west-1",
                        "us-west-2",
                        "eu-west-1",
                        "eu-west-2",
                        "eu-west-3",
                        "eu-central-1",
                        "ca-central-1",
                        "ap-south-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "ap-northeast-1",
                        "ap-northeast-2"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The AWS Region name.</simpara>\n      ",
                      "documentation": "\n         <p>The AWS Region name.</p>\n      ",
                      "shape_name": "RegionName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The region and Availability Zone.</simpara>\n      ",
                  "documentation": "\n         <p>The region and Availability Zone.</p>\n      ",
                  "shape_name": "ResourceLocation"
                },
                "isTerminal": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>A Boolean value indicating whether the operation is terminal.</simpara>\n      ",
                  "documentation": "\n         <p>A Boolean value indicating whether the operation is terminal.</p>\n      ",
                  "shape_name": "boolean"
                },
                "operationDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).</p>\n      ",
                  "shape_name": "string"
                },
                "operationType": {
                  "type": "string",
                  "enum": [
                    "DeleteInstance",
                    "CreateInstance",
                    "StopInstance",
                    "StartInstance",
                    "RebootInstance",
                    "OpenInstancePublicPorts",
                    "PutInstancePublicPorts",
                    "CloseInstancePublicPorts",
                    "AllocateStaticIp",
                    "ReleaseStaticIp",
                    "AttachStaticIp",
                    "DetachStaticIp",
                    "UpdateDomainEntry",
                    "DeleteDomainEntry",
                    "CreateDomain",
                    "DeleteDomain",
                    "CreateInstanceSnapshot",
                    "DeleteInstanceSnapshot",
                    "CreateInstancesFromSnapshot",
                    "CreateLoadBalancer",
                    "DeleteLoadBalancer",
                    "AttachInstancesToLoadBalancer",
                    "DetachInstancesFromLoadBalancer",
                    "UpdateLoadBalancerAttribute",
                    "CreateLoadBalancerTlsCertificate",
                    "DeleteLoadBalancerTlsCertificate",
                    "AttachLoadBalancerTlsCertificate",
                    "CreateDisk",
                    "DeleteDisk",
                    "AttachDisk",
                    "DetachDisk",
                    "CreateDiskSnapshot",
                    "DeleteDiskSnapshot",
                    "CreateDiskFromSnapshot"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of operation. </simpara>\n      ",
                  "documentation": "\n         <p>The type of operation. </p>\n      ",
                  "shape_name": "OperationType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NotStarted",
                    "Started",
                    "Failed",
                    "Completed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the operation. </simpara>\n      ",
                  "documentation": "\n         <p>The status of the operation. </p>\n      ",
                  "shape_name": "OperationStatus"
                },
                "statusChangedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</simpara>\n      ",
                  "documentation": "\n         <p>The timestamp when the status was changed (e.g.,\n      <code>1479816991.349</code>).</p>\n      ",
                  "shape_name": "IsoDate"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "string"
                },
                "errorDetails": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error details.</simpara>\n      ",
                  "documentation": "\n         <p>The error details.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes the API operation.</simpara>\n      ",
              "documentation": "\n         <p>Describes the API operation.</p>\n      ",
              "shape_name": "Operation"
            }
          }
        },
        "shape_name": "CreateCloudFormationStackResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>A general service exception.</simpara>\n      ",
          "documentation": "\n         <p>A general service exception.</p>\n      ",
          "shape_name": "ServiceException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</simpara>\n         <note>\n            <simpara>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</simpara>\n         </note>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p>\n         <note>\n            <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p>\n         </note>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when it cannot find a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when it cannot find a resource.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an operation fails to execute.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an operation fails to execute.</p>\n      ",
          "shape_name": "OperationFailureException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.</p>\n      ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when an account is still in the setup in progress state.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when an account is still in the setup in progress state.</p>\n      ",
          "shape_name": "AccountSetupInProgressException"
        },
        {
          "type": "structure",
          "members": {
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "docs": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "tip": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Lightsail throws this exception when the user has not been authenticated.</simpara>\n      ",
          "documentation": "\n         <p>Lightsail throws this exception when the user has not been authenticated.</p>\n      ",
          "shape_name": "UnauthenticatedException"
        }
      ],
      "documentation": null
    }
  }
}
