{
  "version": "1.0",
  "type": "rest-json",
  "signature_version": "v4",
  "signing_name": "execute-api",
  "service_full_name": "AWS IoT",
  "service_id": "IoT",
  "uid": "iot-2015-05-28",
  "endpoint_prefix": "iot",
  "api_version": "2015-05-28",
  "documentation": "\n        <fullname>AWS IoT</fullname>\n        <p>AWS IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.</p>\n        <p>For more information about how AWS IoT works, see the <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html\">Developer Guide</a>.</p>\n        <p>For information about how to use the credentials provider for AWS IoT, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html\">Authorizing Direct Calls to AWS Services</a>.</p>\n      ",
  "operations": {
    "CreateKeysAndCertificate": {
      "name": "CreateKeysAndCertificate",
      "http": {
        "method": "POST",
        "uri": "/keys-and-certificate?setAsActive={setAsActive}"
      },
      "input": {
        "type": "structure",
        "members": {
          "setAsActive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the certificate is active.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the certificate is active.</p>\n      ",
            "location": "uri",
            "shape_name": "SetAsActive"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CreateKeysAndCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CreateKeysAndCertificate operation.</p>\n      ",
        "shape_name": "CreateKeysAndCertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the certificate.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the certificate.</p>\n      ",
            "shape_name": "CertificateArn"
          },
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS\n         IoT Certificate).</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS\n         IoT Certificate).</p>\n      ",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "certificatePem": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The certificate data, in PEM format.</simpara>\n      ",
            "documentation": "\n         <p>The certificate data, in PEM format.</p>\n      ",
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "keyPair": {
            "type": "structure",
            "members": {
              "PublicKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The public key.</simpara>\n      ",
                "documentation": "\n         <p>The public key.</p>\n      ",
                "shape_name": "PublicKey",
                "min_length": 1
              },
              "PrivateKey": {
                "type": "string",
                "sensitive": true,
                "zonbookDocumentation": "\n         <simpara>The private key.</simpara>\n      ",
                "documentation": "\n         <p>The private key.</p>\n      ",
                "shape_name": "PrivateKey",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <simpara>The generated key pair.</simpara>\n      ",
            "documentation": "\n         <p>The generated key pair.</p>\n      ",
            "shape_name": "KeyPair"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output of the CreateKeysAndCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output of the CreateKeysAndCertificate operation.</p>\n      ",
        "shape_name": "CreateKeysAndCertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key.</p>\n         <p>\n            <b>Note</b> This is the only time AWS IoT issues the private key for this\n         certificate, so it is important to keep it in a secure location.</p>\n      "
    },
    "CreateCertificateFromCsr": {
      "name": "CreateCertificateFromCsr",
      "http": {
        "method": "POST",
        "uri": "/certificates?setAsActive={setAsActive}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateSigningRequest": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The certificate signing request (CSR).</simpara>\n      ",
            "documentation": "\n         <p>The certificate signing request (CSR).</p>\n      ",
            "required": true,
            "shape_name": "CertificateSigningRequest",
            "min_length": 1
          },
          "setAsActive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the certificate is active.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the certificate is active.</p>\n      ",
            "location": "uri",
            "shape_name": "SetAsActive"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CreateCertificateFromCsr operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CreateCertificateFromCsr operation.</p>\n      ",
        "shape_name": "CreateCertificateFromCsrRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy\n         operations.</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy\n         operations.</p>\n      ",
            "shape_name": "CertificateArn"
          },
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. Certificate management operations only take a certificateId.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n      ",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "certificatePem": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The certificate data, in PEM format.</simpara>\n      ",
            "documentation": "\n         <p>The certificate data, in PEM format.</p>\n      ",
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the CreateCertificateFromCsr operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the CreateCertificateFromCsr operation.</p>\n      ",
        "shape_name": "CreateCertificateFromCsrResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates an X.509 certificate using the specified certificate signing request.</p>\n         <p>\n            <b>Note:</b> The CSR must include a public key that is either an RSA key with a\n         length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. </p>\n         <p>\n            <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct\n         certificate.</p>\n         <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into\n         that directory, and then specifying that directory on the command line. The following commands show how to\n         create a batch of certificates given a batch of CSRs.</p>\n         <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p>\n\n         <p>On Linux and OS X, the command is:</p>\n\n         <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request\n         file://my-csr-directory/{}</p>\n         <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot\n         create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.</p>\n         <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the\n         certificate creation process:</p>\n         <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr\n         --certificate-signing-request file://my-csr-directory/{}</p>\n         <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p>\n         <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request\n         file://my-csr-directory/$_}</p>\n         <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory\n         is:</p>\n         <p>&gt; forfiles /p my-csr-directory /c \"cmd /c aws iot create-certificate-from-csr\n         --certificate-signing-request file://@path\"</p>\n      "
    },
    "DescribeCertificate": {
      "name": "DescribeCertificate",
      "http": {
        "method": "GET",
        "uri": "/certificates/{certificateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DescribeCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DescribeCertificate operation.</p>\n      ",
        "shape_name": "DescribeCertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateDescription": {
            "type": "structure",
            "members": {
              "certificateArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ARN of the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the certificate.</p>\n      ",
                "shape_name": "CertificateArn"
              },
              "certificateId": {
                "type": "string",
                "pattern": "(0x)?[a-fA-F0-9]+",
                "zonbookDocumentation": "\n         <simpara>The ID of the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the certificate.</p>\n      ",
                "shape_name": "CertificateId",
                "min_length": 64,
                "max_length": 64
              },
              "caCertificateId": {
                "type": "string",
                "pattern": "(0x)?[a-fA-F0-9]+",
                "zonbookDocumentation": "\n         <simpara>The certificate ID of the CA certificate used to sign this certificate.</simpara>\n      ",
                "documentation": "\n         <p>The certificate ID of the CA certificate used to sign this certificate.</p>\n      ",
                "shape_name": "CertificateId",
                "min_length": 64,
                "max_length": 64
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE",
                  "REVOKED",
                  "PENDING_TRANSFER",
                  "REGISTER_INACTIVE",
                  "PENDING_ACTIVATION"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The status of the certificate.</p>\n      ",
                "shape_name": "CertificateStatus"
              },
              "certificatePem": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The certificate data, in PEM format.</simpara>\n      ",
                "documentation": "\n         <p>The certificate data, in PEM format.</p>\n      ",
                "shape_name": "CertificatePem",
                "min_length": 1,
                "max_length": 65536
              },
              "ownedBy": {
                "type": "string",
                "pattern": "[0-9]+",
                "zonbookDocumentation": "\n         <simpara>The ID of the AWS account that owns the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the AWS account that owns the certificate.</p>\n      ",
                "shape_name": "AwsAccountId",
                "min_length": 12,
                "max_length": 12
              },
              "previousOwnedBy": {
                "type": "string",
                "pattern": "[0-9]+",
                "zonbookDocumentation": "\n         <simpara>The ID of the AWS account of the previous owner of the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the AWS account of the previous owner of the certificate.</p>\n      ",
                "shape_name": "AwsAccountId",
                "min_length": 12,
                "max_length": 12
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date and time the certificate was created.</simpara>\n      ",
                "documentation": "\n         <p>The date and time the certificate was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date and time the certificate was last modified.</simpara>\n      ",
                "documentation": "\n         <p>The date and time the certificate was last modified.</p>\n      ",
                "shape_name": "DateType"
              },
              "customerVersion": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The customer version of the certificate.</para>\n      ",
                "documentation": "\n         <p>The customer version of the certificate.</p>\n      ",
                "shape_name": "CustomerVersion",
                "min_length": 1
              },
              "transferData": {
                "type": "structure",
                "members": {
                  "transferMessage": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The transfer message.</simpara>\n      ",
                    "documentation": "\n         <p>The transfer message.</p>\n      ",
                    "shape_name": "Message",
                    "max_length": 128
                  },
                  "rejectReason": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The reason why the transfer was rejected.</simpara>\n      ",
                    "documentation": "\n         <p>The reason why the transfer was rejected.</p>\n      ",
                    "shape_name": "Message",
                    "max_length": 128
                  },
                  "transferDate": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The date the transfer took place.</simpara>\n      ",
                    "documentation": "\n         <p>The date the transfer took place.</p>\n      ",
                    "shape_name": "DateType"
                  },
                  "acceptDate": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The date the transfer was accepted.</simpara>\n      ",
                    "documentation": "\n         <p>The date the transfer was accepted.</p>\n      ",
                    "shape_name": "DateType"
                  },
                  "rejectDate": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The date the transfer was rejected.</simpara>\n      ",
                    "documentation": "\n         <p>The date the transfer was rejected.</p>\n      ",
                    "shape_name": "DateType"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The transfer data.</simpara>\n      ",
                "documentation": "\n         <p>The transfer data.</p>\n      ",
                "shape_name": "TransferData"
              },
              "generationId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The generation ID of the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The generation ID of the certificate.</p>\n      ",
                "shape_name": "GenerationId"
              },
              "validity": {
                "type": "structure",
                "members": {
                  "notBefore": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The certificate is not valid before this date.</simpara>\n      ",
                    "documentation": "\n         <p>The certificate is not valid before this date.</p>\n      ",
                    "shape_name": "DateType"
                  },
                  "notAfter": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The certificate is not valid after this date.</simpara>\n      ",
                    "documentation": "\n         <p>The certificate is not valid after this date.</p>\n      ",
                    "shape_name": "DateType"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>When the certificate is valid.</simpara>\n      ",
                "documentation": "\n         <p>When the certificate is valid.</p>\n      ",
                "shape_name": "CertificateValidity"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The description of the certificate.</simpara>\n      ",
            "documentation": "\n         <p>The description of the certificate.</p>\n      ",
            "shape_name": "CertificateDescription"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output of the DescribeCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output of the DescribeCertificate operation.</p>\n      ",
        "shape_name": "DescribeCertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets information about the specified certificate.</p>\n      "
    },
    "ListCertificates": {
      "name": "ListCertificates",
      "http": {
        "method": "GET",
        "uri": "/certificates?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListCertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListCertificates operation.</p>\n      ",
        "shape_name": "ListCertificatesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The descriptions of the certificates.</simpara>\n      ",
            "documentation": "\n         <p>The descriptions of the certificates.</p>\n      ",
            "shape_name": "Certificates",
            "members": {
              "type": "structure",
              "members": {
                "certificateArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the certificate.</p>\n      ",
                  "shape_name": "CertificateArn"
                },
                "certificateId": {
                  "type": "string",
                  "pattern": "(0x)?[a-fA-F0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
                  "shape_name": "CertificateId",
                  "min_length": 64,
                  "max_length": 64
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "REVOKED",
                    "PENDING_TRANSFER",
                    "REGISTER_INACTIVE",
                    "PENDING_ACTIVATION"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the certificate.</simpara>\n         <simpara>The status value REGISTER_INACTIVE is deprecated and should not be used.</simpara>\n      ",
                  "documentation": "\n         <p>The status of the certificate.</p>\n         <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n      ",
                  "shape_name": "CertificateStatus"
                },
                "creationDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date and time the certificate was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date and time the certificate was created.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a certificate.</simpara>\n      ",
              "documentation": "\n         <p>Information about a certificate.</p>\n      ",
              "shape_name": "Certificate"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results, or null if there are no additional results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results, or null if there are no additional results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output of the ListCertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>The output of the ListCertificates operation.</p>\n      ",
        "shape_name": "ListCertificatesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the certificates registered in your AWS account.</p>\n         <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve\n         additional results.</p>\n      "
    },
    "ListCertificatesByCA": {
      "name": "ListCertificatesByCA",
      "http": {
        "method": "GET",
        "uri": "/certificates-by-ca/{caCertificateId}?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "caCertificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the CA certificate. This operation will list all registered device certificate that were signed\n         by this CA certificate.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the CA certificate. This operation will list all registered device certificate that were signed\n         by this CA certificate.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input to the ListCertificatesByCA operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the ListCertificatesByCA operation.</p>\n      ",
        "shape_name": "ListCertificatesByCARequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The device certificates signed by the specified CA certificate.</simpara>\n      ",
            "documentation": "\n         <p>The device certificates signed by the specified CA certificate.</p>\n      ",
            "shape_name": "Certificates",
            "members": {
              "type": "structure",
              "members": {
                "certificateArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the certificate.</p>\n      ",
                  "shape_name": "CertificateArn"
                },
                "certificateId": {
                  "type": "string",
                  "pattern": "(0x)?[a-fA-F0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
                  "shape_name": "CertificateId",
                  "min_length": 64,
                  "max_length": 64
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "REVOKED",
                    "PENDING_TRANSFER",
                    "REGISTER_INACTIVE",
                    "PENDING_ACTIVATION"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the certificate.</simpara>\n         <simpara>The status value REGISTER_INACTIVE is deprecated and should not be used.</simpara>\n      ",
                  "documentation": "\n         <p>The status of the certificate.</p>\n         <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n      ",
                  "shape_name": "CertificateStatus"
                },
                "creationDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date and time the certificate was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date and time the certificate was created.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a certificate.</simpara>\n      ",
              "documentation": "\n         <p>Information about a certificate.</p>\n      ",
              "shape_name": "Certificate"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results, or null if there are no additional results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results, or null if there are no additional results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output of the ListCertificatesByCA operation.</simpara>\n      ",
        "documentation": "\n         <p>The output of the ListCertificatesByCA operation.</p>\n      ",
        "shape_name": "ListCertificatesByCAResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>List the device certificates signed by the specified CA certificate.</p>\n      "
    },
    "ListOutgoingCertificates": {
      "name": "ListOutgoingCertificates",
      "http": {
        "method": "GET",
        "uri": "/certificates-out-going?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If True, the results are returned in ascending order, based on the\n         creation date.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input to the ListOutgoingCertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the ListOutgoingCertificates operation.</p>\n      ",
        "shape_name": "ListOutgoingCertificatesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "outgoingCertificates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The certificates that are being transferred but not yet accepted.</simpara>\n      ",
            "documentation": "\n         <p>The certificates that are being transferred but not yet accepted.</p>\n      ",
            "shape_name": "OutgoingCertificates",
            "members": {
              "type": "structure",
              "members": {
                "certificateArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The certificate ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The certificate ARN.</p>\n      ",
                  "shape_name": "CertificateArn"
                },
                "certificateId": {
                  "type": "string",
                  "pattern": "(0x)?[a-fA-F0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The certificate ID.</simpara>\n      ",
                  "documentation": "\n         <p>The certificate ID.</p>\n      ",
                  "shape_name": "CertificateId",
                  "min_length": 64,
                  "max_length": 64
                },
                "transferredTo": {
                  "type": "string",
                  "pattern": "[0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The AWS account to which the transfer was made.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account to which the transfer was made.</p>\n      ",
                  "shape_name": "AwsAccountId",
                  "min_length": 12,
                  "max_length": 12
                },
                "transferDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date the transfer was initiated.</simpara>\n      ",
                  "documentation": "\n         <p>The date the transfer was initiated.</p>\n      ",
                  "shape_name": "DateType"
                },
                "transferMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The transfer message.</simpara>\n      ",
                  "documentation": "\n         <p>The transfer message.</p>\n      ",
                  "shape_name": "Message",
                  "max_length": 128
                },
                "creationDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The certificate creation date.</simpara>\n      ",
                  "documentation": "\n         <p>The certificate creation date.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A certificate that has been transferred but not yet accepted.</simpara>\n      ",
              "documentation": "\n         <p>A certificate that has been transferred but not yet accepted.</p>\n      ",
              "shape_name": "OutgoingCertificate"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListOutgoingCertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListOutgoingCertificates operation.</p>\n      ",
        "shape_name": "ListOutgoingCertificatesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists certificates that are being transferred but not yet accepted.</p>\n      "
    },
    "ListCACertificates": {
      "name": "ListCACertificates",
      "http": {
        "method": "GET",
        "uri": "/cacertificates?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Determines the order of the results.</simpara>\n      ",
            "documentation": "\n         <p>Determines the order of the results.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Input for the ListCACertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>Input for the ListCACertificates operation.</p>\n      ",
        "shape_name": "ListCACertificatesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificates": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The CA certificates registered in your AWS account.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificates registered in your AWS account.</p>\n      ",
            "shape_name": "CACertificates",
            "members": {
              "type": "structure",
              "members": {
                "certificateArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the CA certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the CA certificate.</p>\n      ",
                  "shape_name": "CertificateArn"
                },
                "certificateId": {
                  "type": "string",
                  "pattern": "(0x)?[a-fA-F0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The ID of the CA certificate.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the CA certificate.</p>\n      ",
                  "shape_name": "CertificateId",
                  "min_length": 64,
                  "max_length": 64
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The status of the CA certificate.</simpara>\n         <simpara>The status value REGISTER_INACTIVE is deprecated and should not be used.</simpara>\n      ",
                  "documentation": "\n         <p>The status of the CA certificate.</p>\n         <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n      ",
                  "shape_name": "CACertificateStatus"
                },
                "creationDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date the CA certificate was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date the CA certificate was created.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A CA certificate.</simpara>\n      ",
              "documentation": "\n         <p>A CA certificate.</p>\n      ",
              "shape_name": "CACertificate"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The current position within the list of CA certificates.</simpara>\n      ",
            "documentation": "\n         <p>The current position within the list of CA certificates.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListCACertificates operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListCACertificates operation.</p>\n      ",
        "shape_name": "ListCACertificatesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the CA certificates registered for your AWS account.</p>\n         <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve\n         additional results.</p>\n      "
    },
    "UpdateCertificate": {
      "name": "UpdateCertificate",
      "http": {
        "method": "PUT",
        "uri": "/certificates/{certificateId}?newStatus={newStatus}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "newStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "REVOKED",
              "PENDING_TRANSFER",
              "REGISTER_INACTIVE",
              "PENDING_ACTIVATION"
            ],
            "zonbookDocumentation": "\n         <simpara>The new status.</simpara>\n         <simpara>\n            <emphasis role=\"bold\">Note:</emphasis> Setting the status to PENDING_TRANSFER will result in an exception being\n         thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer\n         use.</simpara>\n         <simpara>\n            <emphasis role=\"bold\">Note:</emphasis> The status value REGISTER_INACTIVE is deprecated and should not be\n         used.</simpara>\n      ",
            "documentation": "\n         <p>The new status.</p>\n         <p>\n            <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being\n         thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer\n         use.</p>\n         <p>\n            <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be\n         used.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateStatus"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the UpdateCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the UpdateCertificate operation.</p>\n      ",
        "shape_name": "UpdateCertificateRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate operation is not allowed.</simpara>\n      ",
          "documentation": "\n         <p>The certificate operation is not allowed.</p>\n      ",
          "shape_name": "CertificateStateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates the status of the specified certificate. This operation is idempotent.</p>\n         <p>Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected\n         devices, but these devices will be unable to reconnect.</p>\n         <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>\n      "
    },
    "DeleteCertificate": {
      "name": "DeleteCertificate",
      "http": {
        "method": "DELETE",
        "uri": "/certificates/{certificateId}?forceDelete={forceDelete}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "forceDelete": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Forces a certificate request to be deleted.</simpara>\n      ",
            "documentation": "\n         <p>Forces a certificate request to be deleted.</p>\n      ",
            "location": "uri",
            "shape_name": "ForceDelete"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DeleteCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DeleteCertificate operation.</p>\n      ",
        "shape_name": "DeleteCertificateRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate operation is not allowed.</simpara>\n      ",
          "documentation": "\n         <p>The certificate operation is not allowed.</p>\n      ",
          "shape_name": "CertificateStateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified certificate.</p>\n         <p>A certificate cannot be deleted if it has a policy attached to it or if its status is set to ACTIVE. To\n         delete a certificate, first use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next,\n         use the <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.</p>\n      "
    },
    "TransferCertificate": {
      "name": "TransferCertificate",
      "http": {
        "method": "PATCH",
        "uri": "/transfer-certificate/{certificateId}?targetAwsAccount={targetAwsAccount}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "targetAwsAccount": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The AWS account.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AwsAccountId",
            "min_length": 12,
            "max_length": 12
          },
          "transferMessage": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The transfer message.</simpara>\n      ",
            "documentation": "\n         <p>The transfer message.</p>\n      ",
            "shape_name": "Message",
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the TransferCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the TransferCertificate operation.</p>\n      ",
        "shape_name": "TransferCertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "transferredCertificateArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the certificate.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the certificate.</p>\n      ",
            "shape_name": "CertificateArn"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the TransferCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the TransferCertificate operation.</p>\n      ",
        "shape_name": "TransferCertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate operation is not allowed.</simpara>\n      ",
          "documentation": "\n         <p>The certificate operation is not allowed.</p>\n      ",
          "shape_name": "CertificateStateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't transfer the certificate because authorization policies are still attached.</simpara>\n      ",
          "documentation": "\n         <p>You can't transfer the certificate because authorization policies are still attached.</p>\n      ",
          "shape_name": "TransferConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Transfers the specified certificate to the specified AWS account.</p>\n         <p>You can cancel the transfer until it is acknowledged by the recipient.</p>\n         <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the\n         transfer target.</p>\n         <p>The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API\n         to deactivate it.</p>\n         <p>The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to\n         detach them.</p>\n      "
    },
    "CancelCertificateTransfer": {
      "name": "CancelCertificateTransfer",
      "http": {
        "method": "PATCH",
        "uri": "/cancel-certificate-transfer/{certificateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CancelCertificateTransfer operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CancelCertificateTransfer operation.</p>\n      ",
        "shape_name": "CancelCertificateTransferRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't revert the certificate transfer because the transfer is already complete.</simpara>\n      ",
          "documentation": "\n         <p>You can't revert the certificate transfer because the transfer is already complete.</p>\n      ",
          "shape_name": "TransferAlreadyCompletedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Cancels a pending transfer for the specified certificate.</p>\n         <p>\n            <b>Note</b> Only the transfer source account can use this operation to cancel a\n         transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,\n         AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has\n         accepted the transfer, the transfer cannot be cancelled.</p>\n         <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to\n         INACTIVE.</p>\n      "
    },
    "RejectCertificateTransfer": {
      "name": "RejectCertificateTransfer",
      "http": {
        "method": "PATCH",
        "uri": "/reject-certificate-transfer/{certificateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "rejectReason": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The reason the certificate transfer was rejected.</simpara>\n      ",
            "documentation": "\n         <p>The reason the certificate transfer was rejected.</p>\n      ",
            "shape_name": "Message",
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the RejectCertificateTransfer operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the RejectCertificateTransfer operation.</p>\n      ",
        "shape_name": "RejectCertificateTransferRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't revert the certificate transfer because the transfer is already complete.</simpara>\n      ",
          "documentation": "\n         <p>You can't revert the certificate transfer because the transfer is already complete.</p>\n      ",
          "shape_name": "TransferAlreadyCompletedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate\n         status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p>\n         <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your\n         certificates.</p>\n         <p>This operation can only be called by the transfer destination. After it is called, the certificate will\n         be returned to the source's account in the INACTIVE state.</p>\n      "
    },
    "AcceptCertificateTransfer": {
      "name": "AcceptCertificateTransfer",
      "http": {
        "method": "PATCH",
        "uri": "/accept-certificate-transfer/{certificateId}?setAsActive={setAsActive}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "setAsActive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the certificate is active.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the certificate is active.</p>\n      ",
            "location": "uri",
            "shape_name": "SetAsActive"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the AcceptCertificateTransfer operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the AcceptCertificateTransfer operation.</p>\n      ",
        "shape_name": "AcceptCertificateTransferRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't revert the certificate transfer because the transfer is already complete.</simpara>\n      ",
          "documentation": "\n         <p>You can't revert the certificate transfer because the transfer is already complete.</p>\n      ",
          "shape_name": "TransferAlreadyCompletedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p>\n         <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your\n         certificates.</p>\n      "
    },
    "CreatePolicy": {
      "name": "CreatePolicy",
      "http": {
        "method": "POST",
        "uri": "/policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy. <emphasis role=\"bold\">policyDocument</emphasis> must have a\n         minimum length of 1, with a maximum length of 2048, excluding whitespace.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy. <b>policyDocument</b> must have a\n         minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n      ",
            "required": true,
            "shape_name": "PolicyDocument"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CreatePolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CreatePolicy operation.</p>\n      ",
        "shape_name": "CreatePolicyRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
            "documentation": "\n         <p>The policy ARN.</p>\n      ",
            "shape_name": "PolicyArn"
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy.</p>\n      ",
            "shape_name": "PolicyDocument"
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "shape_name": "PolicyVersionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the CreatePolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the CreatePolicy operation.</p>\n      ",
        "shape_name": "CreatePolicyResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The policy documentation is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The policy documentation is not valid.</p>\n      ",
          "shape_name": "MalformedPolicyException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates an AWS IoT policy.</p>\n         <p>The created policy is the default version for the policy. This operation creates a policy version with a\n         version identifier of <b>1</b> and sets <b>1</b> as the\n         policy's default version.</p>\n      "
    },
    "CreatePolicyVersion": {
      "name": "CreatePolicyVersion",
      "http": {
        "method": "POST",
        "uri": "/policies/{policyName}/version?setAsDefault={setAsDefault}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding\n         whitespace.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding\n         whitespace.</p>\n      ",
            "required": true,
            "shape_name": "PolicyDocument"
          },
          "setAsDefault": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the policy version is set as the default. When this parameter is true, the new policy\n         version becomes the operative version (that is, the version that is in effect for the certificates to which the\n         policy is attached).</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy\n         version becomes the operative version (that is, the version that is in effect for the certificates to which the\n         policy is attached).</p>\n      ",
            "location": "uri",
            "shape_name": "SetAsDefault"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CreatePolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CreatePolicyVersion operation.</p>\n      ",
        "shape_name": "CreatePolicyVersionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policyArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
            "documentation": "\n         <p>The policy ARN.</p>\n      ",
            "shape_name": "PolicyArn"
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy.</p>\n      ",
            "shape_name": "PolicyDocument"
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "shape_name": "PolicyVersionId"
          },
          "isDefaultVersion": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the policy version is the default.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the policy version is the default.</p>\n      ",
            "shape_name": "IsDefaultVersion"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output of the CreatePolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The output of the CreatePolicyVersion operation.</p>\n      ",
        "shape_name": "CreatePolicyVersionResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The policy documentation is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The policy documentation is not valid.</p>\n      ",
          "shape_name": "MalformedPolicyException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The number of policy versions exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The number of policy versions exceeds the limit.</p>\n      ",
          "shape_name": "VersionsLimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A\n         managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p>\n         <p>Optionally, you can set the new version as the policy's default version. The default version is the\n         operative version (that is, the version that is in effect for the certificates to which the policy is\n         attached).</p>\n\n      "
    },
    "DeletePolicy": {
      "name": "DeletePolicy",
      "http": {
        "method": "DELETE",
        "uri": "/policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DeletePolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DeletePolicy operation.</p>\n      ",
        "shape_name": "DeletePolicyRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified policy.</p>\n         <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p>\n         <p>To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use\n         the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to\n         delete the policy.</p>\n         <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p>\n      "
    },
    "DeletePolicyVersion": {
      "name": "DeletePolicyVersion",
      "http": {
        "method": "DELETE",
        "uri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyVersionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DeletePolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DeletePolicyVersion operation.</p>\n      ",
        "shape_name": "DeletePolicyVersionRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified version of the specified policy. You cannot delete the default version of a policy\n         using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out\n         which version of a policy is marked as the default version, use ListPolicyVersions.</p>\n\n      "
    },
    "GetPolicy": {
      "name": "GetPolicy",
      "http": {
        "method": "GET",
        "uri": "/policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the GetPolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the GetPolicy operation.</p>\n      ",
        "shape_name": "GetPolicyRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
            "documentation": "\n         <p>The policy ARN.</p>\n      ",
            "shape_name": "PolicyArn"
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy.</p>\n      ",
            "shape_name": "PolicyDocument"
          },
          "defaultVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The default policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The default policy version ID.</p>\n      ",
            "shape_name": "PolicyVersionId"
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The date the policy was created.</simpara>\n      ",
            "documentation": "\n         <p>The date the policy was created.</p>\n      ",
            "shape_name": "DateType"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The date the policy was last modified.</simpara>\n      ",
            "documentation": "\n         <p>The date the policy was last modified.</p>\n      ",
            "shape_name": "DateType"
          },
          "generationId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The generation ID of the policy.</simpara>\n      ",
            "documentation": "\n         <p>The generation ID of the policy.</p>\n      ",
            "shape_name": "GenerationId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the GetPolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the GetPolicy operation.</p>\n      ",
        "shape_name": "GetPolicyResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about the specified policy with the policy document of the default version.</p>\n      "
    },
    "GetPolicyVersion": {
      "name": "GetPolicyVersion",
      "http": {
        "method": "GET",
        "uri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyVersionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the GetPolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the GetPolicyVersion operation.</p>\n      ",
        "shape_name": "GetPolicyVersionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policyArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
            "documentation": "\n         <p>The policy ARN.</p>\n      ",
            "shape_name": "PolicyArn"
          },
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyDocument": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The JSON document that describes the policy.</simpara>\n      ",
            "documentation": "\n         <p>The JSON document that describes the policy.</p>\n      ",
            "shape_name": "PolicyDocument"
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "shape_name": "PolicyVersionId"
          },
          "isDefaultVersion": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the policy version is the default.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the policy version is the default.</p>\n      ",
            "shape_name": "IsDefaultVersion"
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The date the policy version was created.</simpara>\n      ",
            "documentation": "\n         <p>The date the policy version was created.</p>\n      ",
            "shape_name": "DateType"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The date the policy version was last modified.</simpara>\n      ",
            "documentation": "\n         <p>The date the policy version was last modified.</p>\n      ",
            "shape_name": "DateType"
          },
          "generationId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The generation ID of the policy version.</simpara>\n      ",
            "documentation": "\n         <p>The generation ID of the policy version.</p>\n      ",
            "shape_name": "GenerationId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the GetPolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the GetPolicyVersion operation.</p>\n      ",
        "shape_name": "GetPolicyVersionResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about the specified policy version.</p>\n      "
    },
    "ListPolicies": {
      "name": "ListPolicies",
      "http": {
        "method": "GET",
        "uri": "/policies?marker={marker}&pageSize={pageSize}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If true, the results are returned in ascending creation order.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListPolicies operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListPolicies operation.</p>\n      ",
        "shape_name": "ListPoliciesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policies": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The descriptions of the policies.</simpara>\n      ",
            "documentation": "\n         <p>The descriptions of the policies.</p>\n      ",
            "shape_name": "Policies",
            "members": {
              "type": "structure",
              "members": {
                "policyName": {
                  "type": "string",
                  "pattern": "[\\w+=,.@-]+",
                  "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                  "documentation": "\n         <p>The policy name.</p>\n      ",
                  "shape_name": "PolicyName",
                  "min_length": 1,
                  "max_length": 128
                },
                "policyArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The policy ARN.</p>\n      ",
                  "shape_name": "PolicyArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
              "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
              "shape_name": "Policy"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results, or null if there are no additional results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results, or null if there are no additional results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListPolicies operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListPolicies operation.</p>\n      ",
        "shape_name": "ListPoliciesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists your policies.</p>\n      "
    },
    "ListPolicyVersions": {
      "name": "ListPolicyVersions",
      "http": {
        "method": "GET",
        "uri": "/policies/{policyName}/version"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListPolicyVersions operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListPolicyVersions operation.</p>\n      ",
        "shape_name": "ListPolicyVersionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policyVersions": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The policy versions.</simpara>\n      ",
            "documentation": "\n         <p>The policy versions.</p>\n      ",
            "shape_name": "PolicyVersions",
            "members": {
              "type": "structure",
              "members": {
                "versionId": {
                  "type": "string",
                  "pattern": "[0-9]+",
                  "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
                  "documentation": "\n         <p>The policy version ID.</p>\n      ",
                  "shape_name": "PolicyVersionId"
                },
                "isDefaultVersion": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Specifies whether the policy version is the default.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies whether the policy version is the default.</p>\n      ",
                  "shape_name": "IsDefaultVersion"
                },
                "createDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date and time the policy was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date and time the policy was created.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a policy version.</simpara>\n      ",
              "documentation": "\n         <p>Describes a policy version.</p>\n      ",
              "shape_name": "PolicyVersion"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListPolicyVersions operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListPolicyVersions operation.</p>\n      ",
        "shape_name": "ListPolicyVersionsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the versions of the specified policy and identifies the default version.</p>\n      "
    },
    "SetDefaultPolicyVersion": {
      "name": "SetDefaultPolicyVersion",
      "http": {
        "method": "PATCH",
        "uri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "policyVersionId": {
            "type": "string",
            "pattern": "[0-9]+",
            "zonbookDocumentation": "\n         <simpara>The policy version ID.</simpara>\n      ",
            "documentation": "\n         <p>The policy version ID.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyVersionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the SetDefaultPolicyVersion operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the SetDefaultPolicyVersion operation.</p>\n      ",
        "shape_name": "SetDefaultPolicyVersionRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Sets the specified version of the specified policy as the policy's default (operative) version. This\n         action affects all certificates to which the policy is attached. To list the principals the policy is attached\n         to, use the ListPrincipalPolicy API.</p>\n      "
    },
    "AttachPrincipalPolicy": {
      "name": "AttachPrincipalPolicy",
      "http": {
        "method": "PUT",
        "uri": "/principal-policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an\n         Amazon Cognito ID.</simpara>\n      ",
            "documentation": "\n         <p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an\n         Amazon Cognito ID.</p>\n      ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-iot-principal"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the AttachPrincipalPolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the AttachPrincipalPolicy operation.</p>\n      ",
        "shape_name": "AttachPrincipalPolicyRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Attaches the specified policy to the specified principal (certificate or other credential).</p>\n         <p>\n            <b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.</p>\n      "
    },
    "DetachPrincipalPolicy": {
      "name": "DetachPrincipalPolicy",
      "http": {
        "method": "DELETE",
        "uri": "/principal-policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy to detach.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy to detach.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The principal.</simpara>\n         <simpara>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito\n         identity, specify the identity ID.</simpara>\n      ",
            "documentation": "\n         <p>The principal.</p>\n         <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito\n         identity, specify the identity ID.</p>\n      ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-iot-principal"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DetachPrincipalPolicy operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DetachPrincipalPolicy operation.</p>\n      ",
        "shape_name": "DetachPrincipalPolicyRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Removes the specified policy from the specified certificate.</p>\n         <p>\n            <b>Note:</b> This API is deprecated. Please use <a>DetachPolicy</a> instead.</p>\n      "
    },
    "ListPrincipalPolicies": {
      "name": "ListPrincipalPolicies",
      "http": {
        "method": "GET",
        "uri": "/principal-policies?marker={marker}&pageSize={pageSize}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The principal.</simpara>\n      ",
            "documentation": "\n         <p>The principal.</p>\n      ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-iot-principal"
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If true, results are returned in ascending creation order.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListPrincipalPolicies operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListPrincipalPolicies operation.</p>\n      ",
        "shape_name": "ListPrincipalPoliciesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "policies": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The policies.</simpara>\n      ",
            "documentation": "\n         <p>The policies.</p>\n      ",
            "shape_name": "Policies",
            "members": {
              "type": "structure",
              "members": {
                "policyName": {
                  "type": "string",
                  "pattern": "[\\w+=,.@-]+",
                  "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                  "documentation": "\n         <p>The policy name.</p>\n      ",
                  "shape_name": "PolicyName",
                  "min_length": 1,
                  "max_length": 128
                },
                "policyArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The policy ARN.</p>\n      ",
                  "shape_name": "PolicyArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
              "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
              "shape_name": "Policy"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results, or null if there are no additional results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results, or null if there are no additional results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListPrincipalPolicies operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListPrincipalPolicies operation.</p>\n      ",
        "shape_name": "ListPrincipalPoliciesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in\n            <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">AmazonCognito Identity format</a>.</p>\n         <p>\n            <b>Note:</b> This API is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>\n      "
    },
    "ListPolicyPrincipals": {
      "name": "ListPolicyPrincipals",
      "http": {
        "method": "GET",
        "uri": "/policy-principals?marker={marker}&pageSize={pageSize}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "header",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128,
            "location_name": "x-amzn-iot-policy"
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The result page size.</simpara>\n      ",
            "documentation": "\n         <p>The result page size.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies the order for results. If true, the results are returned in ascending creation order.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListPolicyPrincipals operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListPolicyPrincipals operation.</p>\n      ",
        "shape_name": "ListPolicyPrincipalsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "principals": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The descriptions of the principals.</simpara>\n      ",
            "documentation": "\n         <p>The descriptions of the principals.</p>\n      ",
            "shape_name": "Principals",
            "members": {
              "type": "string",
              "shape_name": "PrincipalArn",
              "documentation": null
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The marker for the next set of results, or null if there are no additional results.</simpara>\n      ",
            "documentation": "\n         <p>The marker for the next set of results, or null if there are no additional results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListPolicyPrincipals operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListPolicyPrincipals operation.</p>\n      ",
        "shape_name": "ListPolicyPrincipalsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the principals associated with the specified policy.</p>\n         <p>\n            <b>Note:</b> This API is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>\n      "
    },
    "RegisterCACertificate": {
      "name": "RegisterCACertificate",
      "http": {
        "method": "POST",
        "uri": "/cacertificate?setAsActive={setAsActive}&allowAutoRegistration={allowAutoRegistration}"
      },
      "input": {
        "type": "structure",
        "members": {
          "caCertificate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The CA certificate.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate.</p>\n      ",
            "required": true,
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "verificationCertificate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The private key verification certificate.</simpara>\n      ",
            "documentation": "\n         <p>The private key verification certificate.</p>\n      ",
            "required": true,
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "setAsActive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>A boolean value that specifies if the CA certificate is set to active.</simpara>\n      ",
            "documentation": "\n         <p>A boolean value that specifies if the CA certificate is set to active.</p>\n      ",
            "location": "uri",
            "shape_name": "SetAsActive"
          },
          "allowAutoRegistration": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Allows this CA certificate to be used for auto registration of device certificates.</simpara>\n      ",
            "documentation": "\n         <p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n      ",
            "location": "uri",
            "shape_name": "AllowAutoRegistration"
          },
          "registrationConfig": {
            "type": "structure",
            "members": {
              "templateBody": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The template body.</para>\n      ",
                "documentation": "\n         <p>The template body.</p>\n      ",
                "shape_name": "TemplateBody"
              },
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role.</p>\n      ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the registration configuration.</para>\n      ",
            "documentation": "\n         <p>Information about the registration configuration.</p>\n      ",
            "shape_name": "RegistrationConfig"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input to the RegisterCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the RegisterCACertificate operation.</p>\n      ",
        "shape_name": "RegisterCACertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The CA certificate ARN.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate ARN.</p>\n      ",
            "shape_name": "CertificateArn"
          },
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The CA certificate identifier.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate identifier.</p>\n      ",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the RegisterCACertificateResponse operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the RegisterCACertificateResponse operation.</p>\n      ",
        "shape_name": "RegisterCACertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Additional information about the exception.</simpara>\n      ",
              "documentation": "\n         <p>Additional information about the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The registration code is invalid.</simpara>\n      ",
          "documentation": "\n         <p>The registration code is invalid.</p>\n      ",
          "shape_name": "RegistrationCodeValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Additional information about the exception.</simpara>\n      ",
              "documentation": "\n         <p>Additional information about the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate is invalid.</simpara>\n      ",
          "documentation": "\n         <p>The certificate is invalid.</p>\n      ",
          "shape_name": "CertificateValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device\n         certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS\n         account that have the same subject field. This enables you to have up to 10 certificate authorities sign your\n         device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate\n         when you register your device certificates with the RegisterCertificate API.</p>\n      "
    },
    "DeleteCACertificate": {
      "name": "DeleteCACertificate",
      "http": {
        "method": "DELETE",
        "uri": "/cacertificate/{certificateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the certificate to delete. (The last part of the certificate ARN contains the certificate ID.)</simpara>\n      ",
            "documentation": "\n         <p>The ID of the certificate to delete. (The last part of the certificate ARN contains the certificate ID.)</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>Input for the DeleteCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>Input for the DeleteCACertificate operation.</p>\n      ",
        "shape_name": "DeleteCACertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The output for the DeleteCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output for the DeleteCACertificate operation.</p>\n      ",
        "shape_name": "DeleteCACertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate operation is not allowed.</simpara>\n      ",
          "documentation": "\n         <p>The certificate operation is not allowed.</p>\n      ",
          "shape_name": "CertificateStateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a registered CA certificate.</p>\n      "
    },
    "DescribeCACertificate": {
      "name": "DescribeCACertificate",
      "http": {
        "method": "GET",
        "uri": "/cacertificate/{certificateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The CA certificate identifier.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate identifier.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DescribeCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DescribeCACertificate operation.</p>\n      ",
        "shape_name": "DescribeCACertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateDescription": {
            "type": "structure",
            "members": {
              "certificateArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The CA certificate ARN.</simpara>\n      ",
                "documentation": "\n         <p>The CA certificate ARN.</p>\n      ",
                "shape_name": "CertificateArn"
              },
              "certificateId": {
                "type": "string",
                "pattern": "(0x)?[a-fA-F0-9]+",
                "zonbookDocumentation": "\n         <simpara>The CA certificate ID.</simpara>\n      ",
                "documentation": "\n         <p>The CA certificate ID.</p>\n      ",
                "shape_name": "CertificateId",
                "min_length": 64,
                "max_length": 64
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of a CA certificate.</simpara>\n      ",
                "documentation": "\n         <p>The status of a CA certificate.</p>\n      ",
                "shape_name": "CACertificateStatus"
              },
              "certificatePem": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The CA certificate data, in PEM format.</simpara>\n      ",
                "documentation": "\n         <p>The CA certificate data, in PEM format.</p>\n      ",
                "shape_name": "CertificatePem",
                "min_length": 1,
                "max_length": 65536
              },
              "ownedBy": {
                "type": "string",
                "pattern": "[0-9]+",
                "zonbookDocumentation": "\n         <simpara>The owner of the CA certificate.</simpara>\n      ",
                "documentation": "\n         <p>The owner of the CA certificate.</p>\n      ",
                "shape_name": "AwsAccountId",
                "min_length": 12,
                "max_length": 12
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date the CA certificate was created.</simpara>\n      ",
                "documentation": "\n         <p>The date the CA certificate was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "autoRegistrationStatus": {
                "type": "string",
                "enum": [
                  "ENABLE",
                  "DISABLE"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether the CA certificate configured for auto registration of device certificates. Valid values are\n         \"ENABLE\" and \"DISABLE\"</simpara>\n      ",
                "documentation": "\n         <p>Whether the CA certificate configured for auto registration of device certificates. Valid values are\n         \"ENABLE\" and \"DISABLE\"</p>\n      ",
                "shape_name": "AutoRegistrationStatus"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The date the CA certificate was last modified.</para>\n      ",
                "documentation": "\n         <p>The date the CA certificate was last modified.</p>\n      ",
                "shape_name": "DateType"
              },
              "customerVersion": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The customer version of the CA certificate.</para>\n      ",
                "documentation": "\n         <p>The customer version of the CA certificate.</p>\n      ",
                "shape_name": "CustomerVersion",
                "min_length": 1
              },
              "generationId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The generation ID of the CA certificate.</simpara>\n      ",
                "documentation": "\n         <p>The generation ID of the CA certificate.</p>\n      ",
                "shape_name": "GenerationId"
              },
              "validity": {
                "type": "structure",
                "members": {
                  "notBefore": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The certificate is not valid before this date.</simpara>\n      ",
                    "documentation": "\n         <p>The certificate is not valid before this date.</p>\n      ",
                    "shape_name": "DateType"
                  },
                  "notAfter": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The certificate is not valid after this date.</simpara>\n      ",
                    "documentation": "\n         <p>The certificate is not valid after this date.</p>\n      ",
                    "shape_name": "DateType"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>When the CA certificate is valid.</simpara>\n      ",
                "documentation": "\n         <p>When the CA certificate is valid.</p>\n      ",
                "shape_name": "CertificateValidity"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The CA certificate description.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate description.</p>\n      ",
            "shape_name": "CACertificateDescription"
          },
          "registrationConfig": {
            "type": "structure",
            "members": {
              "templateBody": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The template body.</para>\n      ",
                "documentation": "\n         <p>The template body.</p>\n      ",
                "shape_name": "TemplateBody"
              },
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role.</p>\n      ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the registration configuration.</para>\n      ",
            "documentation": "\n         <p>Information about the registration configuration.</p>\n      ",
            "shape_name": "RegistrationConfig"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the DescribeCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the DescribeCACertificate operation.</p>\n      ",
        "shape_name": "DescribeCACertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Describes a registered CA certificate.</p>\n      "
    },
    "UpdateCACertificate": {
      "name": "UpdateCACertificate",
      "http": {
        "method": "PUT",
        "uri": "/cacertificate/{certificateId}?newStatus={newStatus}&newAutoRegistrationStatus={newAutoRegistrationStatus}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The CA certificate identifier.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate identifier.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          },
          "newStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "zonbookDocumentation": "\n         <simpara>The updated status of the CA certificate.</simpara>\n         <simpara>\n            <emphasis role=\"bold\">Note:</emphasis> The status value REGISTER_INACTIVE is deprecated and should not be\n         used.</simpara>\n      ",
            "documentation": "\n         <p>The updated status of the CA certificate.</p>\n         <p>\n            <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be\n         used.</p>\n      ",
            "location": "uri",
            "shape_name": "CACertificateStatus"
          },
          "newAutoRegistrationStatus": {
            "type": "string",
            "enum": [
              "ENABLE",
              "DISABLE"
            ],
            "zonbookDocumentation": "\n         <simpara>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</simpara>\n      ",
            "documentation": "\n         <p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n      ",
            "location": "uri",
            "shape_name": "AutoRegistrationStatus"
          },
          "registrationConfig": {
            "type": "structure",
            "members": {
              "templateBody": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The template body.</para>\n      ",
                "documentation": "\n         <p>The template body.</p>\n      ",
                "shape_name": "TemplateBody"
              },
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role.</p>\n      ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the registration configuration.</para>\n      ",
            "documentation": "\n         <p>Information about the registration configuration.</p>\n      ",
            "shape_name": "RegistrationConfig"
          },
          "removeAutoRegistration": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>If true, remove auto registration.</para>\n      ",
            "documentation": "\n         <p>If true, remove auto registration.</p>\n      ",
            "shape_name": "RemoveAutoRegistration"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input to the UpdateCACertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the UpdateCACertificate operation.</p>\n      ",
        "shape_name": "UpdateCACertificateRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a registered CA certificate.</p>\n      "
    },
    "GetRegistrationCode": {
      "name": "GetRegistrationCode",
      "http": {
        "method": "GET",
        "uri": "/registrationcode"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The input to the GetRegistrationCode operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the GetRegistrationCode operation.</p>\n      ",
        "shape_name": "GetRegistrationCodeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "registrationCode": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The CA certificate registration code.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate registration code.</p>\n      ",
            "shape_name": "RegistrationCode",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the GetRegistrationCode operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the GetRegistrationCode operation.</p>\n      ",
        "shape_name": "GetRegistrationCodeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        }
      ],
      "documentation": "\n         <p>Gets a registration code used to register a CA certificate with AWS IoT.</p>\n      "
    },
    "DeleteRegistrationCode": {
      "name": "DeleteRegistrationCode",
      "http": {
        "method": "DELETE",
        "uri": "/registrationcode"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DeleteRegistrationCode operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DeleteRegistrationCode operation.</p>\n      ",
        "shape_name": "DeleteRegistrationCodeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The output for the DeleteRegistrationCode operation.</simpara>\n      ",
        "documentation": "\n         <p>The output for the DeleteRegistrationCode operation.</p>\n      ",
        "shape_name": "DeleteRegistrationCodeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a CA certificate registration code.</p>\n      "
    },
    "RegisterCertificate": {
      "name": "RegisterCertificate",
      "http": {
        "method": "POST",
        "uri": "/certificate/register?setAsActive={setAsActive}"
      },
      "input": {
        "type": "structure",
        "members": {
          "certificatePem": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The certificate data, in PEM format.</simpara>\n      ",
            "documentation": "\n         <p>The certificate data, in PEM format.</p>\n      ",
            "required": true,
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "caCertificatePem": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The CA certificate used to sign the device certificate being registered.</simpara>\n      ",
            "documentation": "\n         <p>The CA certificate used to sign the device certificate being registered.</p>\n      ",
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "setAsActive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>A boolean value that specifies if the CA certificate is set to active.</simpara>\n      ",
            "documentation": "\n         <p>A boolean value that specifies if the CA certificate is set to active.</p>\n      ",
            "deprecated": true,
            "location": "uri",
            "shape_name": "SetAsActiveFlag"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "REVOKED",
              "PENDING_TRANSFER",
              "REGISTER_INACTIVE",
              "PENDING_ACTIVATION"
            ],
            "zonbookDocumentation": "\n         <simpara>The status of the register certificate request.</simpara>\n      ",
            "documentation": "\n         <p>The status of the register certificate request.</p>\n      ",
            "shape_name": "CertificateStatus"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input to the RegisterCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The input to the RegisterCertificate operation.</p>\n      ",
        "shape_name": "RegisterCertificateRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "certificateArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The certificate ARN.</simpara>\n      ",
            "documentation": "\n         <p>The certificate ARN.</p>\n      ",
            "shape_name": "CertificateArn"
          },
          "certificateId": {
            "type": "string",
            "pattern": "(0x)?[a-fA-F0-9]+",
            "zonbookDocumentation": "\n         <simpara>The certificate identifier.</simpara>\n      ",
            "documentation": "\n         <p>The certificate identifier.</p>\n      ",
            "shape_name": "CertificateId",
            "min_length": 64,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the RegisterCertificate operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the RegisterCertificate operation.</p>\n      ",
        "shape_name": "RegisterCertificateResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Additional information about the exception.</simpara>\n      ",
              "documentation": "\n         <p>Additional information about the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate is invalid.</simpara>\n      ",
          "documentation": "\n         <p>The certificate is invalid.</p>\n      ",
          "shape_name": "CertificateValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The certificate operation is not allowed.</simpara>\n      ",
          "documentation": "\n         <p>The certificate operation is not allowed.</p>\n      ",
          "shape_name": "CertificateStateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Unable to verify the CA certificate used to sign the device certificate you are attempting to register.\n         This is happens when you have registered more than one CA certificate that has the same subject field and\n         public key.</simpara>\n      ",
          "documentation": "\n         <p>Unable to verify the CA certificate used to sign the device certificate you are attempting to register.\n         This is happens when you have registered more than one CA certificate that has the same subject field and\n         public key.</p>\n      ",
          "shape_name": "CertificateConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same\n         subject field, you must specify the CA certificate that was used to sign the device certificate being\n         registered.</p>\n      "
    },
    "CreateRoleAlias": {
      "name": "CreateRoleAlias",
      "http": {
        "method": "POST",
        "uri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias that points to a role ARN. This allows you to change the role without having to update the\n         device.</simpara>\n      ",
            "documentation": "\n         <p>The role alias that points to a role ARN. This allows you to change the role without having to update the\n         device.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The role ARN.</simpara>\n      ",
            "documentation": "\n         <p>The role ARN.</p>\n      ",
            "required": true,
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "credentialDurationSeconds": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>How long (in seconds) the credentials will be valid.</simpara>\n      ",
            "documentation": "\n         <p>How long (in seconds) the credentials will be valid.</p>\n      ",
            "shape_name": "CredentialDurationSeconds",
            "min_length": 900,
            "max_length": 3600
          }
        },
        "shape_name": "CreateRoleAliasRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias.</simpara>\n      ",
            "documentation": "\n         <p>The role alias.</p>\n      ",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          },
          "roleAliasArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The role alias ARN.</simpara>\n      ",
            "documentation": "\n         <p>The role alias ARN.</p>\n      ",
            "shape_name": "RoleAliasArn"
          }
        },
        "shape_name": "CreateRoleAliasResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a role alias.</p>\n      "
    },
    "DescribeRoleAlias": {
      "name": "DescribeRoleAlias",
      "http": {
        "method": "GET",
        "uri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias to describe.</simpara>\n      ",
            "documentation": "\n         <p>The role alias to describe.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeRoleAliasRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleAliasDescription": {
            "type": "structure",
            "members": {
              "roleAlias": {
                "type": "string",
                "pattern": "[\\w=,@-]+",
                "zonbookDocumentation": "\n         <simpara>The role alias.</simpara>\n      ",
                "documentation": "\n         <p>The role alias.</p>\n      ",
                "shape_name": "RoleAlias",
                "min_length": 1,
                "max_length": 128
              },
              "roleAliasArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role alias.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role alias.</p>\n      ",
                "shape_name": "RoleAliasArn"
              },
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The role ARN.</simpara>\n      ",
                "documentation": "\n         <p>The role ARN.</p>\n      ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              },
              "owner": {
                "type": "string",
                "pattern": "[0-9]+",
                "zonbookDocumentation": "\n         <simpara>The role alias owner.</simpara>\n      ",
                "documentation": "\n         <p>The role alias owner.</p>\n      ",
                "shape_name": "AwsAccountId",
                "min_length": 12,
                "max_length": 12
              },
              "credentialDurationSeconds": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of seconds for which the credential is valid.</simpara>\n      ",
                "documentation": "\n         <p>The number of seconds for which the credential is valid.</p>\n      ",
                "shape_name": "CredentialDurationSeconds",
                "min_length": 900,
                "max_length": 3600
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the role alias was created.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the role alias was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the role alias was last modified.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the role alias was last modified.</p>\n      ",
                "shape_name": "DateType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The role alias description.</simpara>\n      ",
            "documentation": "\n         <p>The role alias description.</p>\n      ",
            "shape_name": "RoleAliasDescription"
          }
        },
        "shape_name": "DescribeRoleAliasResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Describes a role alias.</p>\n      "
    },
    "ListRoleAliases": {
      "name": "ListRoleAliases",
      "http": {
        "method": "GET",
        "uri": "/role-aliases?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to return at one time.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Return the list of role aliases in ascending alphabetical order.</simpara>\n      ",
            "documentation": "\n         <p>Return the list of role aliases in ascending alphabetical order.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "shape_name": "ListRoleAliasesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleAliases": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The role aliases.</simpara>\n      ",
            "documentation": "\n         <p>The role aliases.</p>\n      ",
            "shape_name": "RoleAliases",
            "members": {
              "type": "string",
              "pattern": "[\\w=,@-]+",
              "shape_name": "RoleAlias",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "shape_name": "ListRoleAliasesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the role aliases registered in your account.</p>\n      "
    },
    "UpdateRoleAlias": {
      "name": "UpdateRoleAlias",
      "http": {
        "method": "PUT",
        "uri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias to update.</simpara>\n      ",
            "documentation": "\n         <p>The role alias to update.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The role ARN.</simpara>\n      ",
            "documentation": "\n         <p>The role ARN.</p>\n      ",
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "credentialDurationSeconds": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of seconds the credential will be valid.</simpara>\n      ",
            "documentation": "\n         <p>The number of seconds the credential will be valid.</p>\n      ",
            "shape_name": "CredentialDurationSeconds",
            "min_length": 900,
            "max_length": 3600
          }
        },
        "shape_name": "UpdateRoleAliasRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias.</simpara>\n      ",
            "documentation": "\n         <p>The role alias.</p>\n      ",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          },
          "roleAliasArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The role alias ARN.</simpara>\n      ",
            "documentation": "\n         <p>The role alias ARN.</p>\n      ",
            "shape_name": "RoleAliasArn"
          }
        },
        "shape_name": "UpdateRoleAliasResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a role alias.</p>\n      "
    },
    "DeleteRoleAlias": {
      "name": "DeleteRoleAlias",
      "http": {
        "method": "DELETE",
        "uri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleAlias": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The role alias to delete.</simpara>\n      ",
            "documentation": "\n         <p>The role alias to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RoleAlias",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteRoleAliasRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteRoleAliasResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a role alias</p>\n      "
    },
    "SetDefaultAuthorizer": {
      "name": "SetDefaultAuthorizer",
      "http": {
        "method": "POST",
        "uri": "/default-authorizer"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer name.</p>\n      ",
            "required": true,
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "SetDefaultAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer name.</p>\n      ",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "authorizerArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
            "shape_name": "AuthorizerArn"
          }
        },
        "shape_name": "SetDefaultAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        }
      ],
      "documentation": "\n         <p>Sets the default authorizer. This will be used if a websocket connection is made without specifying an\n         authorizer.</p>\n      "
    },
    "ClearDefaultAuthorizer": {
      "name": "ClearDefaultAuthorizer",
      "http": {
        "method": "DELETE",
        "uri": "/default-authorizer"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ClearDefaultAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ClearDefaultAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Clears the default authorizer.</p>\n      "
    },
    "CreateAuthorizer": {
      "name": "CreateAuthorizer",
      "http": {
        "method": "POST",
        "uri": "/authorizer/{authorizerName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "authorizerFunctionArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the authorizer's Lambda function.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the authorizer's Lambda function.</p>\n      ",
            "required": true,
            "shape_name": "AuthorizerFunctionArn"
          },
          "tokenKeyName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the token key used to extract the token from the HTTP headers.</simpara>\n      ",
            "documentation": "\n         <p>The name of the token key used to extract the token from the HTTP headers.</p>\n      ",
            "required": true,
            "shape_name": "TokenKeyName",
            "min_length": 1,
            "max_length": 128
          },
          "tokenSigningPublicKeys": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>The public keys used to verify the digital signature returned by your custom authentication\n         service.</simpara>\n      ",
            "documentation": "\n         <p>The public keys used to verify the digital signature returned by your custom authentication\n         service.</p>\n      ",
            "required": true,
            "shape_name": "PublicKeyMap",
            "keys": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "KeyName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            },
            "members": {
              "type": "string",
              "shape_name": "KeyValue",
              "documentation": null,
              "max_length": 5120
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "zonbookDocumentation": "\n         <simpara>The status of the create authorizer request.</simpara>\n      ",
            "documentation": "\n         <p>The status of the create authorizer request.</p>\n      ",
            "shape_name": "AuthorizerStatus"
          }
        },
        "shape_name": "CreateAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer's name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer's name.</p>\n      ",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "authorizerArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
            "shape_name": "AuthorizerArn"
          }
        },
        "shape_name": "CreateAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates an authorizer.</p>\n      "
    },
    "DescribeAuthorizer": {
      "name": "DescribeAuthorizer",
      "http": {
        "method": "GET",
        "uri": "/authorizer/{authorizerName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the authorizer to describe.</simpara>\n      ",
            "documentation": "\n         <p>The name of the authorizer to describe.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizerDescription": {
            "type": "structure",
            "members": {
              "authorizerName": {
                "type": "string",
                "pattern": "[\\w=,@-]+",
                "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer name.</p>\n      ",
                "shape_name": "AuthorizerName",
                "min_length": 1,
                "max_length": 128
              },
              "authorizerArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
                "shape_name": "AuthorizerArn"
              },
              "authorizerFunctionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authorizer's Lambda function ARN.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer's Lambda function ARN.</p>\n      ",
                "shape_name": "AuthorizerFunctionArn"
              },
              "tokenKeyName": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n         <simpara>The key used to extract the token from the HTTP headers.</simpara>\n      ",
                "documentation": "\n         <p>The key used to extract the token from the HTTP headers.</p>\n      ",
                "shape_name": "TokenKeyName",
                "min_length": 1,
                "max_length": 128
              },
              "tokenSigningPublicKeys": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The public keys used to validate the token signature returned by your custom authentication\n         service.</simpara>\n      ",
                "documentation": "\n         <p>The public keys used to validate the token signature returned by your custom authentication\n         service.</p>\n      ",
                "shape_name": "PublicKeyMap",
                "keys": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "shape_name": "KeyName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "members": {
                  "type": "string",
                  "shape_name": "KeyValue",
                  "documentation": null,
                  "max_length": 5120
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the authorizer.</simpara>\n      ",
                "documentation": "\n         <p>The status of the authorizer.</p>\n      ",
                "shape_name": "AuthorizerStatus"
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the authorizer was created.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the authorizer was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the authorizer was last updated.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the authorizer was last updated.</p>\n      ",
                "shape_name": "DateType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The authorizer description.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer description.</p>\n      ",
            "shape_name": "AuthorizerDescription"
          }
        },
        "shape_name": "DescribeAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Describes an authorizer.</p>\n      "
    },
    "DescribeDefaultAuthorizer": {
      "name": "DescribeDefaultAuthorizer",
      "http": {
        "method": "GET",
        "uri": "/default-authorizer"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DescribeDefaultAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizerDescription": {
            "type": "structure",
            "members": {
              "authorizerName": {
                "type": "string",
                "pattern": "[\\w=,@-]+",
                "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer name.</p>\n      ",
                "shape_name": "AuthorizerName",
                "min_length": 1,
                "max_length": 128
              },
              "authorizerArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
                "shape_name": "AuthorizerArn"
              },
              "authorizerFunctionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authorizer's Lambda function ARN.</simpara>\n      ",
                "documentation": "\n         <p>The authorizer's Lambda function ARN.</p>\n      ",
                "shape_name": "AuthorizerFunctionArn"
              },
              "tokenKeyName": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n         <simpara>The key used to extract the token from the HTTP headers.</simpara>\n      ",
                "documentation": "\n         <p>The key used to extract the token from the HTTP headers.</p>\n      ",
                "shape_name": "TokenKeyName",
                "min_length": 1,
                "max_length": 128
              },
              "tokenSigningPublicKeys": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The public keys used to validate the token signature returned by your custom authentication\n         service.</simpara>\n      ",
                "documentation": "\n         <p>The public keys used to validate the token signature returned by your custom authentication\n         service.</p>\n      ",
                "shape_name": "PublicKeyMap",
                "keys": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "shape_name": "KeyName",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 128
                },
                "members": {
                  "type": "string",
                  "shape_name": "KeyValue",
                  "documentation": null,
                  "max_length": 5120
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE"
                ],
                "zonbookDocumentation": "\n         <simpara>The status of the authorizer.</simpara>\n      ",
                "documentation": "\n         <p>The status of the authorizer.</p>\n      ",
                "shape_name": "AuthorizerStatus"
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the authorizer was created.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the authorizer was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The UNIX timestamp of when the authorizer was last updated.</simpara>\n      ",
                "documentation": "\n         <p>The UNIX timestamp of when the authorizer was last updated.</p>\n      ",
                "shape_name": "DateType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The default authorizer's description.</simpara>\n      ",
            "documentation": "\n         <p>The default authorizer's description.</p>\n      ",
            "shape_name": "AuthorizerDescription"
          }
        },
        "shape_name": "DescribeDefaultAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Describes the default authorizer.</p>\n      "
    },
    "ListAuthorizers": {
      "name": "ListAuthorizers",
      "http": {
        "method": "GET",
        "uri": "/authorizers/?pageSize={pageSize}&marker={marker}&isAscendingOrder={ascendingOrder}&status={status}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to return at one time.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Return the list of authorizers in ascending alphabetical order.</simpara>\n      ",
            "documentation": "\n         <p>Return the list of authorizers in ascending alphabetical order.</p>\n      ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "zonbookDocumentation": "\n         <simpara>The status of the list authorizers request.</simpara>\n      ",
            "documentation": "\n         <p>The status of the list authorizers request.</p>\n      ",
            "location": "uri",
            "shape_name": "AuthorizerStatus"
          }
        },
        "shape_name": "ListAuthorizersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The authorizers.</simpara>\n      ",
            "documentation": "\n         <p>The authorizers.</p>\n      ",
            "shape_name": "Authorizers",
            "members": {
              "type": "structure",
              "members": {
                "authorizerName": {
                  "type": "string",
                  "pattern": "[\\w=,@-]+",
                  "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
                  "documentation": "\n         <p>The authorizer name.</p>\n      ",
                  "shape_name": "AuthorizerName",
                  "min_length": 1,
                  "max_length": 128
                },
                "authorizerArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
                  "shape_name": "AuthorizerArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The authorizer summary.</simpara>\n      ",
              "documentation": "\n         <p>The authorizer summary.</p>\n      ",
              "shape_name": "AuthorizerSummary"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "shape_name": "ListAuthorizersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the authorizers registered in your account.</p>\n      "
    },
    "UpdateAuthorizer": {
      "name": "UpdateAuthorizer",
      "http": {
        "method": "PUT",
        "uri": "/authorizer/{authorizerName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "authorizerFunctionArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the authorizer's Lambda function.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the authorizer's Lambda function.</p>\n      ",
            "shape_name": "AuthorizerFunctionArn"
          },
          "tokenKeyName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n         <simpara>The key used to extract the token from the HTTP headers. </simpara>\n      ",
            "documentation": "\n         <p>The key used to extract the token from the HTTP headers. </p>\n      ",
            "shape_name": "TokenKeyName",
            "min_length": 1,
            "max_length": 128
          },
          "tokenSigningPublicKeys": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>The public keys used to verify the token signature.</simpara>\n      ",
            "documentation": "\n         <p>The public keys used to verify the token signature.</p>\n      ",
            "shape_name": "PublicKeyMap",
            "keys": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "KeyName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            },
            "members": {
              "type": "string",
              "shape_name": "KeyValue",
              "documentation": null,
              "max_length": 5120
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "zonbookDocumentation": "\n         <simpara>The status of the update authorizer request.</simpara>\n      ",
            "documentation": "\n         <p>The status of the update authorizer request.</p>\n      ",
            "shape_name": "AuthorizerStatus"
          }
        },
        "shape_name": "UpdateAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer name.</p>\n      ",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "authorizerArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authorizer ARN.</simpara>\n      ",
            "documentation": "\n         <p>The authorizer ARN.</p>\n      ",
            "shape_name": "AuthorizerArn"
          }
        },
        "shape_name": "UpdateAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates an authorizer.</p>\n      "
    },
    "DeleteAuthorizer": {
      "name": "DeleteAuthorizer",
      "http": {
        "method": "DELETE",
        "uri": "/authorizer/{authorizerName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the authorizer to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the authorizer to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes an authorizer.</p>\n      "
    },
    "TestInvokeAuthorizer": {
      "name": "TestInvokeAuthorizer",
      "http": {
        "method": "POST",
        "uri": "/authorizer/{authorizerName}/test"
      },
      "input": {
        "type": "structure",
        "members": {
          "authorizerName": {
            "type": "string",
            "pattern": "[\\w=,@-]+",
            "zonbookDocumentation": "\n         <simpara>The custom authorizer name.</simpara>\n      ",
            "documentation": "\n         <p>The custom authorizer name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "AuthorizerName",
            "min_length": 1,
            "max_length": 128
          },
          "token": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token returned by your custom authentication service.</simpara>\n      ",
            "documentation": "\n         <p>The token returned by your custom authentication service.</p>\n      ",
            "required": true,
            "shape_name": "Token",
            "min_length": 1,
            "max_length": 6144
          },
          "tokenSignature": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>The signature made with the token and your custom authentication service's private key.</simpara>\n      ",
            "documentation": "\n         <p>The signature made with the token and your custom authentication service's private key.</p>\n      ",
            "required": true,
            "shape_name": "TokenSignature",
            "min_length": 1,
            "max_length": 2560
          }
        },
        "shape_name": "TestInvokeAuthorizerRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "isAuthenticated": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>True if the token is authenticated, otherwise false.</simpara>\n      ",
            "documentation": "\n         <p>True if the token is authenticated, otherwise false.</p>\n      ",
            "shape_name": "IsAuthenticated"
          },
          "principalId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]+",
            "zonbookDocumentation": "\n         <simpara>The principal ID.</simpara>\n      ",
            "documentation": "\n         <p>The principal ID.</p>\n      ",
            "shape_name": "PrincipalId",
            "min_length": 1,
            "max_length": 128
          },
          "policyDocuments": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>IAM policy documents.</simpara>\n      ",
            "documentation": "\n         <p>IAM policy documents.</p>\n      ",
            "shape_name": "PolicyDocuments",
            "members": {
              "type": "string",
              "shape_name": "PolicyDocument",
              "documentation": null
            }
          },
          "refreshAfterInSeconds": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of seconds after which the temporary credentials are refreshed.</simpara>\n      ",
            "documentation": "\n         <p>The number of seconds after which the temporary credentials are refreshed.</p>\n      ",
            "shape_name": "Seconds"
          },
          "disconnectAfterInSeconds": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of seconds after which the connection is terminated.</simpara>\n      ",
            "documentation": "\n         <p>The number of seconds after which the connection is terminated.</p>\n      ",
            "shape_name": "Seconds"
          }
        },
        "shape_name": "TestInvokeAuthorizerResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The response is invalid.</simpara>\n      ",
          "documentation": "\n         <p>The response is invalid.</p>\n      ",
          "shape_name": "InvalidResponseException"
        }
      ],
      "documentation": "\n         <p>Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.</p>\n      "
    },
    "AttachPolicy": {
      "name": "AttachPolicy",
      "http": {
        "method": "PUT",
        "uri": "/target-policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the policy to attach.</simpara>\n      ",
            "documentation": "\n         <p>The name of the policy to attach.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "target": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The identity to which the policy is attached.</simpara>\n      ",
            "documentation": "\n         <p>The identity to which the policy is attached.</p>\n      ",
            "required": true,
            "shape_name": "PolicyTarget"
          }
        },
        "shape_name": "AttachPolicyRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Attaches a policy to the specified target.</p>\n      "
    },
    "DetachPolicy": {
      "name": "DetachPolicy",
      "http": {
        "method": "POST",
        "uri": "/target-policies/{policyName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy to detach.</simpara>\n      ",
            "documentation": "\n         <p>The policy to detach.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "target": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The target from which the policy will be detached.</simpara>\n      ",
            "documentation": "\n         <p>The target from which the policy will be detached.</p>\n      ",
            "required": true,
            "shape_name": "PolicyTarget"
          }
        },
        "shape_name": "DetachPolicyRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Detaches a policy from the specified target.</p>\n      "
    },
    "ListTargetsForPolicy": {
      "name": "ListTargetsForPolicy",
      "http": {
        "method": "POST",
        "uri": "/policy-targets/{policyName}?marker={marker}&pageSize={pageSize}"
      },
      "input": {
        "type": "structure",
        "members": {
          "policyName": {
            "type": "string",
            "pattern": "[\\w+=,.@-]+",
            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
            "documentation": "\n         <p>The policy name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyName",
            "min_length": 1,
            "max_length": 128
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to return at one time.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListTargetsForPolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "targets": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The policy targets.</simpara>\n      ",
            "documentation": "\n         <p>The policy targets.</p>\n      ",
            "shape_name": "PolicyTargets",
            "members": {
              "type": "string",
              "shape_name": "PolicyTarget",
              "documentation": null
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <simpara>A marker used to get the next set of results.</simpara>\n      ",
            "documentation": "\n         <p>A marker used to get the next set of results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "shape_name": "ListTargetsForPolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>List targets for the specified policy.</p>\n      "
    },
    "ListAttachedPolicies": {
      "name": "ListAttachedPolicies",
      "http": {
        "method": "POST",
        "uri": "/attached-policies/{target}?recursive={recursive}&pageSize={pageSize}&marker={marker}"
      },
      "input": {
        "type": "structure",
        "members": {
          "target": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The group for which the policies will be listed.</simpara>\n      ",
            "documentation": "\n         <p>The group for which the policies will be listed.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyTarget"
          },
          "recursive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>When true, recursively list attached policies.</simpara>\n      ",
            "documentation": "\n         <p>When true, recursively list attached policies.</p>\n      ",
            "location": "uri",
            "shape_name": "Recursive"
          },
          "marker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "Marker"
          },
          "pageSize": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to be returned per request.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to be returned per request.</p>\n      ",
            "location": "uri",
            "shape_name": "PageSize",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListAttachedPoliciesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "policies": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The policies.</simpara>\n      ",
            "documentation": "\n         <p>The policies.</p>\n      ",
            "shape_name": "Policies",
            "members": {
              "type": "structure",
              "members": {
                "policyName": {
                  "type": "string",
                  "pattern": "[\\w+=,.@-]+",
                  "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                  "documentation": "\n         <p>The policy name.</p>\n      ",
                  "shape_name": "PolicyName",
                  "min_length": 1,
                  "max_length": 128
                },
                "policyArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The policy ARN.</p>\n      ",
                  "shape_name": "PolicyArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
              "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
              "shape_name": "Policy"
            }
          },
          "nextMarker": {
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or ``null`` if there are no more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or ``null`` if there are no more results.</p>\n      ",
            "shape_name": "Marker"
          }
        },
        "shape_name": "ListAttachedPoliciesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Lists the policies attached to the specified thing group.</p>\n      "
    },
    "GetEffectivePolicies": {
      "name": "GetEffectivePolicies",
      "http": {
        "method": "POST",
        "uri": "/effective-policies?thingName={thingName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The principal.</simpara>\n      ",
            "documentation": "\n         <p>The principal.</p>\n      ",
            "shape_name": "Principal"
          },
          "cognitoIdentityPoolId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Cognito identity pool ID.</simpara>\n      ",
            "documentation": "\n         <p>The Cognito identity pool ID.</p>\n      ",
            "shape_name": "CognitoIdentityPoolId"
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <simpara>The thing name.</simpara>\n      ",
            "documentation": "\n         <p>The thing name.</p>\n      ",
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "GetEffectivePoliciesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "effectivePolicies": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The effective policies.</simpara>\n      ",
            "documentation": "\n         <p>The effective policies.</p>\n      ",
            "shape_name": "EffectivePolicies",
            "members": {
              "type": "structure",
              "members": {
                "policyName": {
                  "type": "string",
                  "pattern": "[\\w+=,.@-]+",
                  "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                  "documentation": "\n         <p>The policy name.</p>\n      ",
                  "shape_name": "PolicyName",
                  "min_length": 1,
                  "max_length": 128
                },
                "policyArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The policy ARN.</p>\n      ",
                  "shape_name": "PolicyArn"
                },
                "policyDocument": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The IAM policy document.</simpara>\n      ",
                  "documentation": "\n         <p>The IAM policy document.</p>\n      ",
                  "shape_name": "PolicyDocument"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The policy that has the effect on the authorization results.</simpara>\n      ",
              "documentation": "\n         <p>The policy that has the effect on the authorization results.</p>\n      ",
              "shape_name": "EffectivePolicy"
            }
          }
        },
        "shape_name": "GetEffectivePoliciesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.</p>\n      "
    },
    "TestAuthorization": {
      "name": "TestAuthorization",
      "http": {
        "method": "POST",
        "uri": "/test-authorization?clientId={clientId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The principal.</simpara>\n      ",
            "documentation": "\n         <p>The principal.</p>\n      ",
            "shape_name": "Principal"
          },
          "cognitoIdentityPoolId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Cognito identity pool ID.</simpara>\n      ",
            "documentation": "\n         <p>The Cognito identity pool ID.</p>\n      ",
            "shape_name": "CognitoIdentityPoolId"
          },
          "authInfos": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of authorization info objects. Simulating authorization will create a response for each\n         <code>authInfo</code> object in the list.</simpara>\n      ",
            "documentation": "\n         <p>A list of authorization info objects. Simulating authorization will create a response for each\n         <code>authInfo</code> object in the list.</p>\n      ",
            "required": true,
            "shape_name": "AuthInfos",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "actionType": {
                  "type": "string",
                  "enum": [
                    "PUBLISH",
                    "SUBSCRIBE",
                    "RECEIVE",
                    "CONNECT"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The type of action for which the principal is being authorized.</simpara>\n      ",
                  "documentation": "\n         <p>The type of action for which the principal is being authorized.</p>\n      ",
                  "shape_name": "ActionType"
                },
                "resources": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The resources for which the principal is being authorized to perform the specified action.</simpara>\n      ",
                  "documentation": "\n         <p>The resources for which the principal is being authorized to perform the specified action.</p>\n      ",
                  "shape_name": "Resources",
                  "members": {
                    "type": "string",
                    "shape_name": "Resource",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A collection of authorization information.</simpara>\n      ",
              "documentation": "\n         <p>A collection of authorization information.</p>\n      ",
              "shape_name": "AuthInfo"
            }
          },
          "clientId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The MQTT client ID.</simpara>\n      ",
            "documentation": "\n         <p>The MQTT client ID.</p>\n      ",
            "location": "uri",
            "shape_name": "ClientId"
          },
          "policyNamesToAdd": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>When testing custom authorization, the policies specified here are treated as if they are attached to the\n         principal being authorized.</simpara>\n      ",
            "documentation": "\n         <p>When testing custom authorization, the policies specified here are treated as if they are attached to the\n         principal being authorized.</p>\n      ",
            "shape_name": "PolicyNames",
            "members": {
              "type": "string",
              "pattern": "[\\w+=,.@-]+",
              "shape_name": "PolicyName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "policyNamesToSkip": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>When testing custom authorization, the policies specified here are treated as if they are not attached to the\n         principal being authorized.</simpara>\n      ",
            "documentation": "\n         <p>When testing custom authorization, the policies specified here are treated as if they are not attached to the\n         principal being authorized.</p>\n      ",
            "shape_name": "PolicyNames",
            "members": {
              "type": "string",
              "pattern": "[\\w+=,.@-]+",
              "shape_name": "PolicyName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          }
        },
        "shape_name": "TestAuthorizationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "authResults": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The authentication results.</simpara>\n      ",
            "documentation": "\n         <p>The authentication results.</p>\n      ",
            "shape_name": "AuthResults",
            "members": {
              "type": "structure",
              "members": {
                "authInfo": {
                  "type": "structure",
                  "members": {
                    "actionType": {
                      "type": "string",
                      "enum": [
                        "PUBLISH",
                        "SUBSCRIBE",
                        "RECEIVE",
                        "CONNECT"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The type of action for which the principal is being authorized.</simpara>\n      ",
                      "documentation": "\n         <p>The type of action for which the principal is being authorized.</p>\n      ",
                      "shape_name": "ActionType"
                    },
                    "resources": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>The resources for which the principal is being authorized to perform the specified action.</simpara>\n      ",
                      "documentation": "\n         <p>The resources for which the principal is being authorized to perform the specified action.</p>\n      ",
                      "shape_name": "Resources",
                      "members": {
                        "type": "string",
                        "shape_name": "Resource",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Authorization information.</simpara>\n      ",
                  "documentation": "\n         <p>Authorization information.</p>\n      ",
                  "shape_name": "AuthInfo"
                },
                "allowed": {
                  "type": "structure",
                  "members": {
                    "policies": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>A list of policies that allowed the authentication.</simpara>\n      ",
                      "documentation": "\n         <p>A list of policies that allowed the authentication.</p>\n      ",
                      "shape_name": "Policies",
                      "members": {
                        "type": "structure",
                        "members": {
                          "policyName": {
                            "type": "string",
                            "pattern": "[\\w+=,.@-]+",
                            "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                            "documentation": "\n         <p>The policy name.</p>\n      ",
                            "shape_name": "PolicyName",
                            "min_length": 1,
                            "max_length": 128
                          },
                          "policyArn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                            "documentation": "\n         <p>The policy ARN.</p>\n      ",
                            "shape_name": "PolicyArn"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
                        "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
                        "shape_name": "Policy"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The policies and statements that allowed the specified action.</simpara>\n      ",
                  "documentation": "\n         <p>The policies and statements that allowed the specified action.</p>\n      ",
                  "shape_name": "Allowed"
                },
                "denied": {
                  "type": "structure",
                  "members": {
                    "implicitDeny": {
                      "type": "structure",
                      "members": {
                        "policies": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>Policies that don't contain a matching allow or deny statement for the specified action on the specified\n         resource. </simpara>\n      ",
                          "documentation": "\n         <p>Policies that don't contain a matching allow or deny statement for the specified action on the specified\n         resource. </p>\n      ",
                          "shape_name": "Policies",
                          "members": {
                            "type": "structure",
                            "members": {
                              "policyName": {
                                "type": "string",
                                "pattern": "[\\w+=,.@-]+",
                                "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                                "documentation": "\n         <p>The policy name.</p>\n      ",
                                "shape_name": "PolicyName",
                                "min_length": 1,
                                "max_length": 128
                              },
                              "policyArn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                                "documentation": "\n         <p>The policy ARN.</p>\n      ",
                                "shape_name": "PolicyArn"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
                            "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
                            "shape_name": "Policy"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information that implicitly denies the authorization. When a policy doesn't explicitly deny or\n      allow an action on a resource it is considered an implicit deny.</simpara>\n      ",
                      "documentation": "\n         <p>Information that implicitly denies the authorization. When a policy doesn't explicitly deny or\n      allow an action on a resource it is considered an implicit deny.</p>\n      ",
                      "shape_name": "ImplicitDeny"
                    },
                    "explicitDeny": {
                      "type": "structure",
                      "members": {
                        "policies": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>The policies that denied the authorization.</simpara>\n      ",
                          "documentation": "\n         <p>The policies that denied the authorization.</p>\n      ",
                          "shape_name": "Policies",
                          "members": {
                            "type": "structure",
                            "members": {
                              "policyName": {
                                "type": "string",
                                "pattern": "[\\w+=,.@-]+",
                                "zonbookDocumentation": "\n         <simpara>The policy name.</simpara>\n      ",
                                "documentation": "\n         <p>The policy name.</p>\n      ",
                                "shape_name": "PolicyName",
                                "min_length": 1,
                                "max_length": 128
                              },
                              "policyArn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara>The policy ARN.</simpara>\n      ",
                                "documentation": "\n         <p>The policy ARN.</p>\n      ",
                                "shape_name": "PolicyArn"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Describes an AWS IoT policy.</simpara>\n      ",
                            "documentation": "\n         <p>Describes an AWS IoT policy.</p>\n      ",
                            "shape_name": "Policy"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information that explicitly denies the authorization. </simpara>\n      ",
                      "documentation": "\n         <p>Information that explicitly denies the authorization. </p>\n      ",
                      "shape_name": "ExplicitDeny"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The policies and statements that denied the specified action.</simpara>\n      ",
                  "documentation": "\n         <p>The policies and statements that denied the specified action.</p>\n      ",
                  "shape_name": "Denied"
                },
                "authDecision": {
                  "type": "string",
                  "enum": [
                    "ALLOWED",
                    "EXPLICIT_DENY",
                    "IMPLICIT_DENY"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The final authorization decision of this scenario. Multiple statements are taken into account when\n         determining the authorization decision. An explicit deny statement can override multiple allow\n         statements.</simpara>\n      ",
                  "documentation": "\n         <p>The final authorization decision of this scenario. Multiple statements are taken into account when\n         determining the authorization decision. An explicit deny statement can override multiple allow\n         statements.</p>\n      ",
                  "shape_name": "AuthDecision"
                },
                "missingContextValues": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Contains any missing context values found while evaluating policy.</simpara>\n      ",
                  "documentation": "\n         <p>Contains any missing context values found while evaluating policy.</p>\n      ",
                  "shape_name": "MissingContextValues",
                  "members": {
                    "type": "string",
                    "shape_name": "MissingContextValue",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>The authorizer result.</simpara>\n      ",
              "documentation": "\n         <p>The authorizer result.</p>\n      ",
              "shape_name": "AuthResult"
            }
          }
        },
        "shape_name": "TestAuthorizationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.</p>\n      "
    },
    "CreateTopicRule": {
      "name": "CreateTopicRule",
      "http": {
        "method": "POST",
        "uri": "/rules/{ruleName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
            "documentation": "\n         <p>The name of the rule.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          },
          "topicRulePayload": {
            "type": "structure",
            "members": {
              "sql": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The SQL statement used to query the topic. For more information, see <ulink type=\"documentation\" url=\"iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</ulink> in the\n            <emphasis>AWS IoT Developer Guide</emphasis>.</simpara>\n      ",
                "documentation": "\n         <p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the\n            <i>AWS IoT Developer Guide</i>.</p>\n      ",
                "required": true,
                "shape_name": "SQL"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The description of the rule.</simpara>\n      ",
                "documentation": "\n         <p>The description of the rule.</p>\n      ",
                "shape_name": "Description"
              },
              "actions": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>The actions associated with the rule.</simpara>\n      ",
                "documentation": "\n         <p>The actions associated with the rule.</p>\n      ",
                "required": true,
                "shape_name": "ActionList",
                "min_length": 0,
                "max_length": 10,
                "members": {
                  "type": "structure",
                  "members": {
                    "dynamoDB": {
                      "type": "structure",
                      "members": {
                        "tableName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "TableName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "operation": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                          "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                          "shape_name": "DynamoOperation"
                        },
                        "hashKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key name.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyField"
                        },
                        "hashKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key value.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyValue"
                        },
                        "hashKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "rangeKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                          "documentation": "\n         <p>The range key name.</p>\n      ",
                          "shape_name": "RangeKeyField"
                        },
                        "rangeKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                          "documentation": "\n         <p>The range key value.</p>\n      ",
                          "shape_name": "RangeKeyValue"
                        },
                        "rangeKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "payloadField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                          "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                          "shape_name": "PayloadField"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                      "shape_name": "DynamoDBAction"
                    },
                    "dynamoDBv2": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "putItem": {
                          "type": "structure",
                          "members": {
                            "tableName": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                              "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                              "required": true,
                              "shape_name": "TableName"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                          "shape_name": "PutItemInput"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                      "shape_name": "DynamoDBv2Action"
                    },
                    "lambda": {
                      "type": "structure",
                      "members": {
                        "functionArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                          "required": true,
                          "shape_name": "FunctionArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                      "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                      "shape_name": "LambdaAction"
                    },
                    "sns": {
                      "type": "structure",
                      "members": {
                        "targetArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "messageFormat": {
                          "type": "string",
                          "enum": [
                            "RAW",
                            "JSON"
                          ],
                          "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                          "shape_name": "MessageFormat"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                      "shape_name": "SnsAction"
                    },
                    "sqs": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "queueUrl": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                          "required": true,
                          "shape_name": "QueueUrl"
                        },
                        "useBase64": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                          "shape_name": "UseBase64"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                      "shape_name": "SqsAction"
                    },
                    "kinesis": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "streamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "StreamName"
                        },
                        "partitionKey": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                          "documentation": "\n         <p>The partition key.</p>\n      ",
                          "shape_name": "PartitionKey"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                      "shape_name": "KinesisAction"
                    },
                    "republish": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "topic": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                          "required": true,
                          "shape_name": "TopicPattern"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                      "shape_name": "RepublishAction"
                    },
                    "s3": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "bucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                          "required": true,
                          "shape_name": "BucketName"
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                          "documentation": "\n         <p>The object key.</p>\n      ",
                          "required": true,
                          "shape_name": "Key"
                        },
                        "cannedAcl": {
                          "type": "string",
                          "enum": [
                            "private",
                            "public-read",
                            "public-read-write",
                            "aws-exec-read",
                            "authenticated-read",
                            "bucket-owner-read",
                            "bucket-owner-full-control",
                            "log-delivery-write"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                          "shape_name": "CannedAccessControlList"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                      "shape_name": "S3Action"
                    },
                    "firehose": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "deliveryStreamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                          "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                          "required": true,
                          "shape_name": "DeliveryStreamName"
                        },
                        "separator": {
                          "type": "string",
                          "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                          "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                          "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                          "shape_name": "FirehoseSeparator"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                      "shape_name": "FirehoseAction"
                    },
                    "cloudwatchMetric": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "metricNamespace": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricUnit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                          "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricTimestamp": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                      "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                      "shape_name": "CloudwatchMetricAction"
                    },
                    "cloudwatchAlarm": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "alarmName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                          "required": true,
                          "shape_name": "AlarmName"
                        },
                        "stateReason": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                          "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                          "required": true,
                          "shape_name": "StateReason"
                        },
                        "stateValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                          "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                          "required": true,
                          "shape_name": "StateValue"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                      "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                      "shape_name": "CloudwatchAlarmAction"
                    },
                    "elasticsearch": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "endpoint": {
                          "type": "string",
                          "pattern": "https?://.*",
                          "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                          "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchEndpoint"
                        },
                        "index": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                          "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchIndex"
                        },
                        "type": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchType"
                        },
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchId"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                      "shape_name": "ElasticsearchAction"
                    },
                    "salesforce": {
                      "type": "structure",
                      "members": {
                        "token": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceToken",
                          "min_length": 40
                        },
                        "url": {
                          "type": "string",
                          "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                          "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceEndpoint",
                          "max_length": 2000
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                      "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                      "shape_name": "SalesforceAction"
                    },
                    "iotAnalytics": {
                      "type": "structure",
                      "members": {
                        "channelArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "channelName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "ChannelName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                      "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                      "shape_name": "IotAnalyticsAction"
                    },
                    "stepFunctions": {
                      "type": "structure",
                      "members": {
                        "executionNamePrefix": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                          "shape_name": "ExecutionNamePrefix"
                        },
                        "stateMachineName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                          "required": true,
                          "shape_name": "StateMachineName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                      "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                      "shape_name": "StepFunctionsAction"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the actions associated with a rule.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the actions associated with a rule.</p>\n      ",
                  "shape_name": "Action"
                }
              },
              "ruleDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Specifies whether the rule is disabled.</simpara>\n      ",
                "documentation": "\n         <p>Specifies whether the rule is disabled.</p>\n      ",
                "shape_name": "IsDisabled"
              },
              "awsIotSqlVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The version of the SQL rules engine to use when evaluating the rule.</simpara>\n      ",
                "documentation": "\n         <p>The version of the SQL rules engine to use when evaluating the rule.</p>\n      ",
                "shape_name": "AwsIotSqlVersion"
              },
              "errorAction": {
                "type": "structure",
                "members": {
                  "dynamoDB": {
                    "type": "structure",
                    "members": {
                      "tableName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "TableName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "operation": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                        "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                        "shape_name": "DynamoOperation"
                      },
                      "hashKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key name.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyField"
                      },
                      "hashKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key value.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyValue"
                      },
                      "hashKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "rangeKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                        "documentation": "\n         <p>The range key name.</p>\n      ",
                        "shape_name": "RangeKeyField"
                      },
                      "rangeKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                        "documentation": "\n         <p>The range key value.</p>\n      ",
                        "shape_name": "RangeKeyValue"
                      },
                      "rangeKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "payloadField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                        "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                        "shape_name": "PayloadField"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                    "shape_name": "DynamoDBAction"
                  },
                  "dynamoDBv2": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "putItem": {
                        "type": "structure",
                        "members": {
                          "tableName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                            "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                            "required": true,
                            "shape_name": "TableName"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                        "shape_name": "PutItemInput"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                    "shape_name": "DynamoDBv2Action"
                  },
                  "lambda": {
                    "type": "structure",
                    "members": {
                      "functionArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                        "required": true,
                        "shape_name": "FunctionArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                    "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                    "shape_name": "LambdaAction"
                  },
                  "sns": {
                    "type": "structure",
                    "members": {
                      "targetArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "messageFormat": {
                        "type": "string",
                        "enum": [
                          "RAW",
                          "JSON"
                        ],
                        "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                        "shape_name": "MessageFormat"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                    "shape_name": "SnsAction"
                  },
                  "sqs": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "queueUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                        "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                        "required": true,
                        "shape_name": "QueueUrl"
                      },
                      "useBase64": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                        "shape_name": "UseBase64"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                    "shape_name": "SqsAction"
                  },
                  "kinesis": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "StreamName"
                      },
                      "partitionKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                        "documentation": "\n         <p>The partition key.</p>\n      ",
                        "shape_name": "PartitionKey"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                    "shape_name": "KinesisAction"
                  },
                  "republish": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "topic": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                        "required": true,
                        "shape_name": "TopicPattern"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                    "shape_name": "RepublishAction"
                  },
                  "s3": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "bucketName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                        "required": true,
                        "shape_name": "BucketName"
                      },
                      "key": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                        "documentation": "\n         <p>The object key.</p>\n      ",
                        "required": true,
                        "shape_name": "Key"
                      },
                      "cannedAcl": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public-read",
                          "public-read-write",
                          "aws-exec-read",
                          "authenticated-read",
                          "bucket-owner-read",
                          "bucket-owner-full-control",
                          "log-delivery-write"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                        "shape_name": "CannedAccessControlList"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                    "shape_name": "S3Action"
                  },
                  "firehose": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "deliveryStreamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                        "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                        "required": true,
                        "shape_name": "DeliveryStreamName"
                      },
                      "separator": {
                        "type": "string",
                        "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                        "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                        "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                        "shape_name": "FirehoseSeparator"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                    "shape_name": "FirehoseAction"
                  },
                  "cloudwatchMetric": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "metricNamespace": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricUnit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                        "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricTimestamp": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                    "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                    "shape_name": "CloudwatchMetricAction"
                  },
                  "cloudwatchAlarm": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "alarmName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                        "required": true,
                        "shape_name": "AlarmName"
                      },
                      "stateReason": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                        "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                        "required": true,
                        "shape_name": "StateReason"
                      },
                      "stateValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                        "required": true,
                        "shape_name": "StateValue"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                    "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                    "shape_name": "CloudwatchAlarmAction"
                  },
                  "elasticsearch": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "endpoint": {
                        "type": "string",
                        "pattern": "https?://.*",
                        "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                        "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchEndpoint"
                      },
                      "index": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                        "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchIndex"
                      },
                      "type": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchType"
                      },
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchId"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                    "shape_name": "ElasticsearchAction"
                  },
                  "salesforce": {
                    "type": "structure",
                    "members": {
                      "token": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceToken",
                        "min_length": 40
                      },
                      "url": {
                        "type": "string",
                        "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                        "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceEndpoint",
                        "max_length": 2000
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                    "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                    "shape_name": "SalesforceAction"
                  },
                  "iotAnalytics": {
                    "type": "structure",
                    "members": {
                      "channelArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "channelName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "ChannelName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                        "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                    "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                    "shape_name": "IotAnalyticsAction"
                  },
                  "stepFunctions": {
                    "type": "structure",
                    "members": {
                      "executionNamePrefix": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                        "shape_name": "ExecutionNamePrefix"
                      },
                      "stateMachineName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                        "required": true,
                        "shape_name": "StateMachineName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                    "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                    "shape_name": "StepFunctionsAction"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The action to take when an error occurs.</simpara>\n      ",
                "documentation": "\n         <p>The action to take when an error occurs.</p>\n      ",
                "shape_name": "Action"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The rule payload.</simpara>\n      ",
            "documentation": "\n         <p>The rule payload.</p>\n      ",
            "required": true,
            "payload": true,
            "shape_name": "TopicRulePayload"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the CreateTopicRule operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the CreateTopicRule operation.</p>\n      ",
        "shape_name": "CreateTopicRuleRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The Rule-SQL expression can't be parsed correctly.</simpara>\n      ",
          "documentation": "\n         <p>The Rule-SQL expression can't be parsed correctly.</p>\n      ",
          "shape_name": "SqlParseException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create\n         rules will be able to access data processed by the rule.</p>\n      "
    },
    "GetTopicRule": {
      "name": "GetTopicRule",
      "http": {
        "method": "GET",
        "uri": "/rules/{ruleName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
            "documentation": "\n         <p>The name of the rule.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the GetTopicRule operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the GetTopicRule operation.</p>\n      ",
        "shape_name": "GetTopicRuleRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ruleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The rule ARN.</simpara>\n      ",
            "documentation": "\n         <p>The rule ARN.</p>\n      ",
            "shape_name": "RuleArn"
          },
          "rule": {
            "type": "structure",
            "members": {
              "ruleName": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_]+$",
                "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
                "documentation": "\n         <p>The name of the rule.</p>\n      ",
                "shape_name": "RuleName",
                "min_length": 1,
                "max_length": 128
              },
              "sql": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape\n         the newline characters.</simpara>\n      ",
                "documentation": "\n         <p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape\n         the newline characters.</p>\n      ",
                "shape_name": "SQL"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The description of the rule.</simpara>\n      ",
                "documentation": "\n         <p>The description of the rule.</p>\n      ",
                "shape_name": "Description"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The date and time the rule was created.</simpara>\n      ",
                "documentation": "\n         <p>The date and time the rule was created.</p>\n      ",
                "shape_name": "CreatedAtDate"
              },
              "actions": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>The actions associated with the rule.</simpara>\n      ",
                "documentation": "\n         <p>The actions associated with the rule.</p>\n      ",
                "shape_name": "ActionList",
                "min_length": 0,
                "max_length": 10,
                "members": {
                  "type": "structure",
                  "members": {
                    "dynamoDB": {
                      "type": "structure",
                      "members": {
                        "tableName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "TableName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "operation": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                          "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                          "shape_name": "DynamoOperation"
                        },
                        "hashKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key name.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyField"
                        },
                        "hashKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key value.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyValue"
                        },
                        "hashKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "rangeKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                          "documentation": "\n         <p>The range key name.</p>\n      ",
                          "shape_name": "RangeKeyField"
                        },
                        "rangeKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                          "documentation": "\n         <p>The range key value.</p>\n      ",
                          "shape_name": "RangeKeyValue"
                        },
                        "rangeKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "payloadField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                          "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                          "shape_name": "PayloadField"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                      "shape_name": "DynamoDBAction"
                    },
                    "dynamoDBv2": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "putItem": {
                          "type": "structure",
                          "members": {
                            "tableName": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                              "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                              "required": true,
                              "shape_name": "TableName"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                          "shape_name": "PutItemInput"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                      "shape_name": "DynamoDBv2Action"
                    },
                    "lambda": {
                      "type": "structure",
                      "members": {
                        "functionArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                          "required": true,
                          "shape_name": "FunctionArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                      "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                      "shape_name": "LambdaAction"
                    },
                    "sns": {
                      "type": "structure",
                      "members": {
                        "targetArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "messageFormat": {
                          "type": "string",
                          "enum": [
                            "RAW",
                            "JSON"
                          ],
                          "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                          "shape_name": "MessageFormat"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                      "shape_name": "SnsAction"
                    },
                    "sqs": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "queueUrl": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                          "required": true,
                          "shape_name": "QueueUrl"
                        },
                        "useBase64": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                          "shape_name": "UseBase64"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                      "shape_name": "SqsAction"
                    },
                    "kinesis": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "streamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "StreamName"
                        },
                        "partitionKey": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                          "documentation": "\n         <p>The partition key.</p>\n      ",
                          "shape_name": "PartitionKey"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                      "shape_name": "KinesisAction"
                    },
                    "republish": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "topic": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                          "required": true,
                          "shape_name": "TopicPattern"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                      "shape_name": "RepublishAction"
                    },
                    "s3": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "bucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                          "required": true,
                          "shape_name": "BucketName"
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                          "documentation": "\n         <p>The object key.</p>\n      ",
                          "required": true,
                          "shape_name": "Key"
                        },
                        "cannedAcl": {
                          "type": "string",
                          "enum": [
                            "private",
                            "public-read",
                            "public-read-write",
                            "aws-exec-read",
                            "authenticated-read",
                            "bucket-owner-read",
                            "bucket-owner-full-control",
                            "log-delivery-write"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                          "shape_name": "CannedAccessControlList"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                      "shape_name": "S3Action"
                    },
                    "firehose": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "deliveryStreamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                          "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                          "required": true,
                          "shape_name": "DeliveryStreamName"
                        },
                        "separator": {
                          "type": "string",
                          "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                          "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                          "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                          "shape_name": "FirehoseSeparator"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                      "shape_name": "FirehoseAction"
                    },
                    "cloudwatchMetric": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "metricNamespace": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricUnit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                          "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricTimestamp": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                      "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                      "shape_name": "CloudwatchMetricAction"
                    },
                    "cloudwatchAlarm": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "alarmName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                          "required": true,
                          "shape_name": "AlarmName"
                        },
                        "stateReason": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                          "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                          "required": true,
                          "shape_name": "StateReason"
                        },
                        "stateValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                          "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                          "required": true,
                          "shape_name": "StateValue"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                      "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                      "shape_name": "CloudwatchAlarmAction"
                    },
                    "elasticsearch": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "endpoint": {
                          "type": "string",
                          "pattern": "https?://.*",
                          "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                          "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchEndpoint"
                        },
                        "index": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                          "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchIndex"
                        },
                        "type": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchType"
                        },
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchId"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                      "shape_name": "ElasticsearchAction"
                    },
                    "salesforce": {
                      "type": "structure",
                      "members": {
                        "token": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceToken",
                          "min_length": 40
                        },
                        "url": {
                          "type": "string",
                          "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                          "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceEndpoint",
                          "max_length": 2000
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                      "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                      "shape_name": "SalesforceAction"
                    },
                    "iotAnalytics": {
                      "type": "structure",
                      "members": {
                        "channelArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "channelName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "ChannelName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                      "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                      "shape_name": "IotAnalyticsAction"
                    },
                    "stepFunctions": {
                      "type": "structure",
                      "members": {
                        "executionNamePrefix": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                          "shape_name": "ExecutionNamePrefix"
                        },
                        "stateMachineName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                          "required": true,
                          "shape_name": "StateMachineName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                      "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                      "shape_name": "StepFunctionsAction"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the actions associated with a rule.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the actions associated with a rule.</p>\n      ",
                  "shape_name": "Action"
                }
              },
              "ruleDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Specifies whether the rule is disabled.</simpara>\n      ",
                "documentation": "\n         <p>Specifies whether the rule is disabled.</p>\n      ",
                "shape_name": "IsDisabled"
              },
              "awsIotSqlVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The version of the SQL rules engine to use when evaluating the rule.</simpara>\n      ",
                "documentation": "\n         <p>The version of the SQL rules engine to use when evaluating the rule.</p>\n      ",
                "shape_name": "AwsIotSqlVersion"
              },
              "errorAction": {
                "type": "structure",
                "members": {
                  "dynamoDB": {
                    "type": "structure",
                    "members": {
                      "tableName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "TableName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "operation": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                        "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                        "shape_name": "DynamoOperation"
                      },
                      "hashKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key name.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyField"
                      },
                      "hashKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key value.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyValue"
                      },
                      "hashKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "rangeKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                        "documentation": "\n         <p>The range key name.</p>\n      ",
                        "shape_name": "RangeKeyField"
                      },
                      "rangeKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                        "documentation": "\n         <p>The range key value.</p>\n      ",
                        "shape_name": "RangeKeyValue"
                      },
                      "rangeKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "payloadField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                        "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                        "shape_name": "PayloadField"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                    "shape_name": "DynamoDBAction"
                  },
                  "dynamoDBv2": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "putItem": {
                        "type": "structure",
                        "members": {
                          "tableName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                            "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                            "required": true,
                            "shape_name": "TableName"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                        "shape_name": "PutItemInput"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                    "shape_name": "DynamoDBv2Action"
                  },
                  "lambda": {
                    "type": "structure",
                    "members": {
                      "functionArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                        "required": true,
                        "shape_name": "FunctionArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                    "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                    "shape_name": "LambdaAction"
                  },
                  "sns": {
                    "type": "structure",
                    "members": {
                      "targetArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "messageFormat": {
                        "type": "string",
                        "enum": [
                          "RAW",
                          "JSON"
                        ],
                        "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                        "shape_name": "MessageFormat"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                    "shape_name": "SnsAction"
                  },
                  "sqs": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "queueUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                        "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                        "required": true,
                        "shape_name": "QueueUrl"
                      },
                      "useBase64": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                        "shape_name": "UseBase64"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                    "shape_name": "SqsAction"
                  },
                  "kinesis": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "StreamName"
                      },
                      "partitionKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                        "documentation": "\n         <p>The partition key.</p>\n      ",
                        "shape_name": "PartitionKey"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                    "shape_name": "KinesisAction"
                  },
                  "republish": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "topic": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                        "required": true,
                        "shape_name": "TopicPattern"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                    "shape_name": "RepublishAction"
                  },
                  "s3": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "bucketName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                        "required": true,
                        "shape_name": "BucketName"
                      },
                      "key": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                        "documentation": "\n         <p>The object key.</p>\n      ",
                        "required": true,
                        "shape_name": "Key"
                      },
                      "cannedAcl": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public-read",
                          "public-read-write",
                          "aws-exec-read",
                          "authenticated-read",
                          "bucket-owner-read",
                          "bucket-owner-full-control",
                          "log-delivery-write"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                        "shape_name": "CannedAccessControlList"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                    "shape_name": "S3Action"
                  },
                  "firehose": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "deliveryStreamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                        "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                        "required": true,
                        "shape_name": "DeliveryStreamName"
                      },
                      "separator": {
                        "type": "string",
                        "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                        "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                        "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                        "shape_name": "FirehoseSeparator"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                    "shape_name": "FirehoseAction"
                  },
                  "cloudwatchMetric": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "metricNamespace": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricUnit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                        "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricTimestamp": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                    "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                    "shape_name": "CloudwatchMetricAction"
                  },
                  "cloudwatchAlarm": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "alarmName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                        "required": true,
                        "shape_name": "AlarmName"
                      },
                      "stateReason": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                        "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                        "required": true,
                        "shape_name": "StateReason"
                      },
                      "stateValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                        "required": true,
                        "shape_name": "StateValue"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                    "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                    "shape_name": "CloudwatchAlarmAction"
                  },
                  "elasticsearch": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "endpoint": {
                        "type": "string",
                        "pattern": "https?://.*",
                        "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                        "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchEndpoint"
                      },
                      "index": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                        "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchIndex"
                      },
                      "type": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchType"
                      },
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchId"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                    "shape_name": "ElasticsearchAction"
                  },
                  "salesforce": {
                    "type": "structure",
                    "members": {
                      "token": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceToken",
                        "min_length": 40
                      },
                      "url": {
                        "type": "string",
                        "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                        "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceEndpoint",
                        "max_length": 2000
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                    "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                    "shape_name": "SalesforceAction"
                  },
                  "iotAnalytics": {
                    "type": "structure",
                    "members": {
                      "channelArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "channelName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "ChannelName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                        "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                    "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                    "shape_name": "IotAnalyticsAction"
                  },
                  "stepFunctions": {
                    "type": "structure",
                    "members": {
                      "executionNamePrefix": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                        "shape_name": "ExecutionNamePrefix"
                      },
                      "stateMachineName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                        "required": true,
                        "shape_name": "StateMachineName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                    "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                    "shape_name": "StepFunctionsAction"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The action to perform when an error occurs.</simpara>\n      ",
                "documentation": "\n         <p>The action to perform when an error occurs.</p>\n      ",
                "shape_name": "Action"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The rule.</simpara>\n      ",
            "documentation": "\n         <p>The rule.</p>\n      ",
            "shape_name": "TopicRule"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the GetTopicRule operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the GetTopicRule operation.</p>\n      ",
        "shape_name": "GetTopicRuleResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Gets information about the rule.</p>\n      "
    },
    "ListTopicRules": {
      "name": "ListTopicRules",
      "http": {
        "method": "GET",
        "uri": "/rules?topic={topic}&maxResults={maxResults}&nextToken={nextToken}&ruleDisabled={ruleDisabled}"
      },
      "input": {
        "type": "structure",
        "members": {
          "topic": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The topic.</simpara>\n      ",
            "documentation": "\n         <p>The topic.</p>\n      ",
            "location": "uri",
            "shape_name": "Topic"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to return.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to return.</p>\n      ",
            "location": "uri",
            "shape_name": "GEMaxResults",
            "min_length": 1,
            "max_length": 10000
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used to retrieve the next value.</simpara>\n      ",
            "documentation": "\n         <p>A token used to retrieve the next value.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "ruleDisabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Specifies whether the rule is disabled.</simpara>\n      ",
            "documentation": "\n         <p>Specifies whether the rule is disabled.</p>\n      ",
            "location": "uri",
            "shape_name": "IsDisabled"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ListTopicRules operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ListTopicRules operation.</p>\n      ",
        "shape_name": "ListTopicRulesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "rules": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The rules.</simpara>\n      ",
            "documentation": "\n         <p>The rules.</p>\n      ",
            "shape_name": "TopicRuleList",
            "members": {
              "type": "structure",
              "members": {
                "ruleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The rule ARN.</simpara>\n      ",
                  "documentation": "\n         <p>The rule ARN.</p>\n      ",
                  "shape_name": "RuleArn"
                },
                "ruleName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the rule.</p>\n      ",
                  "shape_name": "RuleName",
                  "min_length": 1,
                  "max_length": 128
                },
                "topicPattern": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The pattern for the topic names that apply.</simpara>\n      ",
                  "documentation": "\n         <p>The pattern for the topic names that apply.</p>\n      ",
                  "shape_name": "TopicPattern"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The date and time the rule was created.</simpara>\n      ",
                  "documentation": "\n         <p>The date and time the rule was created.</p>\n      ",
                  "shape_name": "CreatedAtDate"
                },
                "ruleDisabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Specifies whether the rule is disabled.</simpara>\n      ",
                  "documentation": "\n         <p>Specifies whether the rule is disabled.</p>\n      ",
                  "shape_name": "IsDisabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a rule.</simpara>\n      ",
              "documentation": "\n         <p>Describes a rule.</p>\n      ",
              "shape_name": "TopicRuleListItem"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A token used to retrieve the next value.</simpara>\n      ",
            "documentation": "\n         <p>A token used to retrieve the next value.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the ListTopicRules operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the ListTopicRules operation.</p>\n      ",
        "shape_name": "ListTopicRulesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Lists the rules for the specific topic.</p>\n      "
    },
    "ReplaceTopicRule": {
      "name": "ReplaceTopicRule",
      "http": {
        "method": "PATCH",
        "uri": "/rules/{ruleName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
            "documentation": "\n         <p>The name of the rule.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          },
          "topicRulePayload": {
            "type": "structure",
            "members": {
              "sql": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The SQL statement used to query the topic. For more information, see <ulink type=\"documentation\" url=\"iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</ulink> in the\n            <emphasis>AWS IoT Developer Guide</emphasis>.</simpara>\n      ",
                "documentation": "\n         <p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the\n            <i>AWS IoT Developer Guide</i>.</p>\n      ",
                "required": true,
                "shape_name": "SQL"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The description of the rule.</simpara>\n      ",
                "documentation": "\n         <p>The description of the rule.</p>\n      ",
                "shape_name": "Description"
              },
              "actions": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>The actions associated with the rule.</simpara>\n      ",
                "documentation": "\n         <p>The actions associated with the rule.</p>\n      ",
                "required": true,
                "shape_name": "ActionList",
                "min_length": 0,
                "max_length": 10,
                "members": {
                  "type": "structure",
                  "members": {
                    "dynamoDB": {
                      "type": "structure",
                      "members": {
                        "tableName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "TableName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "operation": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                          "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                          "shape_name": "DynamoOperation"
                        },
                        "hashKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key name.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyField"
                        },
                        "hashKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                          "documentation": "\n         <p>The hash key value.</p>\n      ",
                          "required": true,
                          "shape_name": "HashKeyValue"
                        },
                        "hashKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "rangeKeyField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                          "documentation": "\n         <p>The range key name.</p>\n      ",
                          "shape_name": "RangeKeyField"
                        },
                        "rangeKeyValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                          "documentation": "\n         <p>The range key value.</p>\n      ",
                          "shape_name": "RangeKeyValue"
                        },
                        "rangeKeyType": {
                          "type": "string",
                          "enum": [
                            "STRING",
                            "NUMBER"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                          "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                          "shape_name": "DynamoKeyType"
                        },
                        "payloadField": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                          "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                          "shape_name": "PayloadField"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                      "shape_name": "DynamoDBAction"
                    },
                    "dynamoDBv2": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "putItem": {
                          "type": "structure",
                          "members": {
                            "tableName": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                              "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                              "required": true,
                              "shape_name": "TableName"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                          "shape_name": "PutItemInput"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                      "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                      "shape_name": "DynamoDBv2Action"
                    },
                    "lambda": {
                      "type": "structure",
                      "members": {
                        "functionArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                          "required": true,
                          "shape_name": "FunctionArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                      "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                      "shape_name": "LambdaAction"
                    },
                    "sns": {
                      "type": "structure",
                      "members": {
                        "targetArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "messageFormat": {
                          "type": "string",
                          "enum": [
                            "RAW",
                            "JSON"
                          ],
                          "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                          "shape_name": "MessageFormat"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                      "shape_name": "SnsAction"
                    },
                    "sqs": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "queueUrl": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                          "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                          "required": true,
                          "shape_name": "QueueUrl"
                        },
                        "useBase64": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                          "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                          "shape_name": "UseBase64"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                      "shape_name": "SqsAction"
                    },
                    "kinesis": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "streamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                          "required": true,
                          "shape_name": "StreamName"
                        },
                        "partitionKey": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                          "documentation": "\n         <p>The partition key.</p>\n      ",
                          "shape_name": "PartitionKey"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                      "shape_name": "KinesisAction"
                    },
                    "republish": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "topic": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                          "required": true,
                          "shape_name": "TopicPattern"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                      "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                      "shape_name": "RepublishAction"
                    },
                    "s3": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "bucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                          "required": true,
                          "shape_name": "BucketName"
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                          "documentation": "\n         <p>The object key.</p>\n      ",
                          "required": true,
                          "shape_name": "Key"
                        },
                        "cannedAcl": {
                          "type": "string",
                          "enum": [
                            "private",
                            "public-read",
                            "public-read-write",
                            "aws-exec-read",
                            "authenticated-read",
                            "bucket-owner-read",
                            "bucket-owner-full-control",
                            "log-delivery-write"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                          "shape_name": "CannedAccessControlList"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                      "shape_name": "S3Action"
                    },
                    "firehose": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "deliveryStreamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                          "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                          "required": true,
                          "shape_name": "DeliveryStreamName"
                        },
                        "separator": {
                          "type": "string",
                          "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                          "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                          "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                          "shape_name": "FirehoseSeparator"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                      "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                      "shape_name": "FirehoseAction"
                    },
                    "cloudwatchMetric": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "metricNamespace": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricUnit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                          "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "metricTimestamp": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                          "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                      "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                      "shape_name": "CloudwatchMetricAction"
                    },
                    "cloudwatchAlarm": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "alarmName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                          "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                          "required": true,
                          "shape_name": "AlarmName"
                        },
                        "stateReason": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                          "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                          "required": true,
                          "shape_name": "StateReason"
                        },
                        "stateValue": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                          "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                          "required": true,
                          "shape_name": "StateValue"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                      "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                      "shape_name": "CloudwatchAlarmAction"
                    },
                    "elasticsearch": {
                      "type": "structure",
                      "members": {
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                          "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        },
                        "endpoint": {
                          "type": "string",
                          "pattern": "https?://.*",
                          "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                          "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchEndpoint"
                        },
                        "index": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                          "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchIndex"
                        },
                        "type": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchType"
                        },
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                          "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                          "required": true,
                          "shape_name": "ElasticsearchId"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                      "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                      "shape_name": "ElasticsearchAction"
                    },
                    "salesforce": {
                      "type": "structure",
                      "members": {
                        "token": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceToken",
                          "min_length": 40
                        },
                        "url": {
                          "type": "string",
                          "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                          "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                          "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                          "required": true,
                          "shape_name": "SalesforceEndpoint",
                          "max_length": 2000
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                      "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                      "shape_name": "SalesforceAction"
                    },
                    "iotAnalytics": {
                      "type": "structure",
                      "members": {
                        "channelArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "AwsArn"
                        },
                        "channelName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                          "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                          "shape_name": "ChannelName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                      "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                      "shape_name": "IotAnalyticsAction"
                    },
                    "stepFunctions": {
                      "type": "structure",
                      "members": {
                        "executionNamePrefix": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                          "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                          "shape_name": "ExecutionNamePrefix"
                        },
                        "stateMachineName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                          "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                          "required": true,
                          "shape_name": "StateMachineName"
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                          "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                          "required": true,
                          "shape_name": "AwsArn"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                      "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                      "shape_name": "StepFunctionsAction"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Describes the actions associated with a rule.</simpara>\n      ",
                  "documentation": "\n         <p>Describes the actions associated with a rule.</p>\n      ",
                  "shape_name": "Action"
                }
              },
              "ruleDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Specifies whether the rule is disabled.</simpara>\n      ",
                "documentation": "\n         <p>Specifies whether the rule is disabled.</p>\n      ",
                "shape_name": "IsDisabled"
              },
              "awsIotSqlVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The version of the SQL rules engine to use when evaluating the rule.</simpara>\n      ",
                "documentation": "\n         <p>The version of the SQL rules engine to use when evaluating the rule.</p>\n      ",
                "shape_name": "AwsIotSqlVersion"
              },
              "errorAction": {
                "type": "structure",
                "members": {
                  "dynamoDB": {
                    "type": "structure",
                    "members": {
                      "tableName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "TableName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "operation": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</simpara>\n      ",
                        "documentation": "\n         <p>The type of operation to be performed. This follows the substitution template, so it can be\n            <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>,\n            <code>UPDATE</code>, or <code>DELETE</code>.</p>\n      ",
                        "shape_name": "DynamoOperation"
                      },
                      "hashKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key name.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key name.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyField"
                      },
                      "hashKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The hash key value.</simpara>\n      ",
                        "documentation": "\n         <p>The hash key value.</p>\n      ",
                        "required": true,
                        "shape_name": "HashKeyValue"
                      },
                      "hashKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "rangeKeyField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key name.</simpara>\n      ",
                        "documentation": "\n         <p>The range key name.</p>\n      ",
                        "shape_name": "RangeKeyField"
                      },
                      "rangeKeyValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The range key value.</simpara>\n      ",
                        "documentation": "\n         <p>The range key value.</p>\n      ",
                        "shape_name": "RangeKeyValue"
                      },
                      "rangeKeyType": {
                        "type": "string",
                        "enum": [
                          "STRING",
                          "NUMBER"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The range key type. Valid values are \"STRING\" or \"NUMBER\"</simpara>\n      ",
                        "documentation": "\n         <p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n      ",
                        "shape_name": "DynamoKeyType"
                      },
                      "payloadField": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The action payload. This name can be customized.</simpara>\n      ",
                        "documentation": "\n         <p>The action payload. This name can be customized.</p>\n      ",
                        "shape_name": "PayloadField"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table.</p>\n      ",
                    "shape_name": "DynamoDBAction"
                  },
                  "dynamoDBv2": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the DynamoDB table.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "putItem": {
                        "type": "structure",
                        "members": {
                          "tableName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <simpara>The table where the message data will be written</simpara>\n      ",
                            "documentation": "\n         <p>The table where the message data will be written</p>\n      ",
                            "required": true,
                            "shape_name": "TableName"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Specifies the DynamoDB table to which the message data will be written. For example:</simpara>\n         <simpara>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </simpara>\n         <simpara>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies the DynamoDB table to which the message data will be written. For example:</p>\n         <p>\n            <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code>\n         </p>\n         <p>Each attribute in the message payload will be written to a separate column in the DynamoDB\n         database.</p>\n      ",
                        "shape_name": "PutItemInput"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</simpara>\n      ",
                    "documentation": "\n         <p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each\n         attribute in an MQTT message payload into a separate DynamoDB column.</p>\n      ",
                    "shape_name": "DynamoDBv2Action"
                  },
                  "lambda": {
                    "type": "structure",
                    "members": {
                      "functionArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the Lambda function.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the Lambda function.</p>\n      ",
                        "required": true,
                        "shape_name": "FunctionArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Invoke a Lambda function.</simpara>\n      ",
                    "documentation": "\n         <p>Invoke a Lambda function.</p>\n      ",
                    "shape_name": "LambdaAction"
                  },
                  "sns": {
                    "type": "structure",
                    "members": {
                      "targetArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the SNS topic.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the SNS topic.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "messageFormat": {
                        "type": "string",
                        "enum": [
                          "RAW",
                          "JSON"
                        ],
                        "zonbookDocumentation": "\n         <simpara>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <ulink type=\"documentation\" url=\"sns/latest/dg/json-formats.html\"/> refer to their official\n         documentation.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default\n         value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and\n         relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see\n            <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official\n         documentation.</p>\n      ",
                        "shape_name": "MessageFormat"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SNS topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SNS topic.</p>\n      ",
                    "shape_name": "SnsAction"
                  },
                  "sqs": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "queueUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The URL of the Amazon SQS queue.</simpara>\n      ",
                        "documentation": "\n         <p>The URL of the Amazon SQS queue.</p>\n      ",
                        "required": true,
                        "shape_name": "QueueUrl"
                      },
                      "useBase64": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <simpara>Specifies whether to use Base64 encoding.</simpara>\n      ",
                        "documentation": "\n         <p>Specifies whether to use Base64 encoding.</p>\n      ",
                        "shape_name": "UseBase64"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to an Amazon SQS queue.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to an Amazon SQS queue.</p>\n      ",
                    "shape_name": "SqsAction"
                  },
                  "kinesis": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Amazon Kinesis stream.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Amazon Kinesis stream.</p>\n      ",
                        "required": true,
                        "shape_name": "StreamName"
                      },
                      "partitionKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The partition key.</simpara>\n      ",
                        "documentation": "\n         <p>The partition key.</p>\n      ",
                        "shape_name": "PartitionKey"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Kinesis stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Kinesis stream.</p>\n      ",
                    "shape_name": "KinesisAction"
                  },
                  "republish": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "topic": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the MQTT topic.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the MQTT topic.</p>\n      ",
                        "required": true,
                        "shape_name": "TopicPattern"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Publish to another MQTT topic.</simpara>\n      ",
                    "documentation": "\n         <p>Publish to another MQTT topic.</p>\n      ",
                    "shape_name": "RepublishAction"
                  },
                  "s3": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "bucketName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 bucket.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 bucket.</p>\n      ",
                        "required": true,
                        "shape_name": "BucketName"
                      },
                      "key": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The object key.</simpara>\n      ",
                        "documentation": "\n         <p>The object key.</p>\n      ",
                        "required": true,
                        "shape_name": "Key"
                      },
                      "cannedAcl": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public-read",
                          "public-read-write",
                          "aws-exec-read",
                          "authenticated-read",
                          "bucket-owner-read",
                          "bucket-owner-full-control",
                          "log-delivery-write"
                        ],
                        "zonbookDocumentation": "\n         <simpara>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <ulink type=\"documentation\" url=\"AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more\n         information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned\n            ACLs</a>.</p>\n      ",
                        "shape_name": "CannedAccessControlList"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon S3 bucket.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon S3 bucket.</p>\n      ",
                    "shape_name": "S3Action"
                  },
                  "firehose": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that grants access to the Amazon Kinesis Firehose stream.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "deliveryStreamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The delivery stream name.</simpara>\n      ",
                        "documentation": "\n         <p>The delivery stream name.</p>\n      ",
                        "required": true,
                        "shape_name": "DeliveryStreamName"
                      },
                      "separator": {
                        "type": "string",
                        "pattern": "([\\n\\t])|(\\r\\n)|(,)",
                        "zonbookDocumentation": "\n         <simpara>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</simpara>\n      ",
                        "documentation": "\n         <p>A character separator that will be used to separate records written to the Firehose stream. Valid values\n         are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n      ",
                        "shape_name": "FirehoseSeparator"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write to an Amazon Kinesis Firehose stream.</simpara>\n      ",
                    "documentation": "\n         <p>Write to an Amazon Kinesis Firehose stream.</p>\n      ",
                    "shape_name": "FirehoseAction"
                  },
                  "cloudwatchMetric": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch metric.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch metric.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "metricNamespace": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric namespace name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric namespace name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric name.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch metric value.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch metric value.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricUnit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</ulink> supported by\n         CloudWatch.</simpara>\n      ",
                        "documentation": "\n         <p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by\n         CloudWatch.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "metricTimestamp": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>An optional <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</ulink>.</simpara>\n      ",
                        "documentation": "\n         <p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix\n         timestamp</a>.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Capture a CloudWatch metric.</simpara>\n      ",
                    "documentation": "\n         <p>Capture a CloudWatch metric.</p>\n      ",
                    "shape_name": "CloudwatchMetricAction"
                  },
                  "cloudwatchAlarm": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role that allows access to the CloudWatch alarm.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role that allows access to the CloudWatch alarm.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "alarmName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The CloudWatch alarm name.</simpara>\n      ",
                        "documentation": "\n         <p>The CloudWatch alarm name.</p>\n      ",
                        "required": true,
                        "shape_name": "AlarmName"
                      },
                      "stateReason": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The reason for the alarm change.</simpara>\n      ",
                        "documentation": "\n         <p>The reason for the alarm change.</p>\n      ",
                        "required": true,
                        "shape_name": "StateReason"
                      },
                      "stateValue": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n      ",
                        "required": true,
                        "shape_name": "StateValue"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Change the state of a CloudWatch alarm.</simpara>\n      ",
                    "documentation": "\n         <p>Change the state of a CloudWatch alarm.</p>\n      ",
                    "shape_name": "CloudwatchAlarmAction"
                  },
                  "elasticsearch": {
                    "type": "structure",
                    "members": {
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The IAM role ARN that has access to Elasticsearch.</simpara>\n      ",
                        "documentation": "\n         <p>The IAM role ARN that has access to Elasticsearch.</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      },
                      "endpoint": {
                        "type": "string",
                        "pattern": "https?://.*",
                        "zonbookDocumentation": "\n         <simpara>The endpoint of your Elasticsearch domain.</simpara>\n      ",
                        "documentation": "\n         <p>The endpoint of your Elasticsearch domain.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchEndpoint"
                      },
                      "index": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Elasticsearch index where you want to store your data.</simpara>\n      ",
                        "documentation": "\n         <p>The Elasticsearch index where you want to store your data.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchIndex"
                      },
                      "type": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The type of document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchType"
                      },
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unique identifier for the document you are storing.</simpara>\n      ",
                        "documentation": "\n         <p>The unique identifier for the document you are storing.</p>\n      ",
                        "required": true,
                        "shape_name": "ElasticsearchId"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Write data to an Amazon Elasticsearch Service domain.</simpara>\n      ",
                    "documentation": "\n         <p>Write data to an Amazon Elasticsearch Service domain.</p>\n      ",
                    "shape_name": "ElasticsearchAction"
                  },
                  "salesforce": {
                    "type": "structure",
                    "members": {
                      "token": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available\n         from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceToken",
                        "min_length": 40
                      },
                      "url": {
                        "type": "string",
                        "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
                        "zonbookDocumentation": "\n         <simpara>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</simpara>\n      ",
                        "documentation": "\n         <p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT\n         Cloud platform after creation of the Input Stream.</p>\n      ",
                        "required": true,
                        "shape_name": "SalesforceEndpoint",
                        "max_length": 2000
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Send a message to a Salesforce IoT Cloud Input Stream.</simpara>\n      ",
                    "documentation": "\n         <p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n      ",
                    "shape_name": "SalesforceAction"
                  },
                  "iotAnalytics": {
                    "type": "structure",
                    "members": {
                      "channelArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "AwsArn"
                      },
                      "channelName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The name of the IoT Analytics channel to which message data will be sent.</para>\n      ",
                        "documentation": "\n         <p>The name of the IoT Analytics channel to which message data will be sent.</p>\n      ",
                        "shape_name": "ChannelName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</para>\n      ",
                        "documentation": "\n         <p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data\n          via IoT Analytics (iotanalytics:BatchPutMessage).</p>\n      ",
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Sends message data to an AWS IoT Analytics channel.</para>\n      ",
                    "documentation": "\n         <p>Sends message data to an AWS IoT Analytics channel.</p>\n      ",
                    "shape_name": "IotAnalyticsAction"
                  },
                  "stepFunctions": {
                    "type": "structure",
                    "members": {
                      "executionNamePrefix": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</simpara>\n      ",
                        "documentation": "\n         <p>(Optional) A name will be given to the state machine execution consisting\n         of this prefix followed by a UUID. Step Functions automatically creates a unique name for each \n         state machine execution if one is not provided.</p>\n      ",
                        "shape_name": "ExecutionNamePrefix"
                      },
                      "stateMachineName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the Step Functions state machine whose execution will be started.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the Step Functions state machine whose execution will be started.</p>\n      ",
                        "required": true,
                        "shape_name": "StateMachineName"
                      },
                      "roleArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</simpara>\n      ",
                        "documentation": "\n         <p>The ARN of the role that grants IoT permission to start execution of a state machine \n         (\"Action\":\"states:StartExecution\").</p>\n      ",
                        "required": true,
                        "shape_name": "AwsArn"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Starts execution of a Step Functions state machine.</simpara>\n      ",
                    "documentation": "\n         <p>Starts execution of a Step Functions state machine.</p>\n      ",
                    "shape_name": "StepFunctionsAction"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The action to take when an error occurs.</simpara>\n      ",
                "documentation": "\n         <p>The action to take when an error occurs.</p>\n      ",
                "shape_name": "Action"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The rule payload.</simpara>\n      ",
            "documentation": "\n         <p>The rule payload.</p>\n      ",
            "required": true,
            "payload": true,
            "shape_name": "TopicRulePayload"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the ReplaceTopicRule operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the ReplaceTopicRule operation.</p>\n      ",
        "shape_name": "ReplaceTopicRuleRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The Rule-SQL expression can't be parsed correctly.</simpara>\n      ",
          "documentation": "\n         <p>The Rule-SQL expression can't be parsed correctly.</p>\n      ",
          "shape_name": "SqlParseException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Replaces the rule. You must specify all parameters for the new rule. Creating rules is an\n         administrator-level action. Any user who has permission to create rules will be able to access data processed\n         by the rule.</p>\n      "
    },
    "DeleteTopicRule": {
      "name": "DeleteTopicRule",
      "http": {
        "method": "DELETE",
        "uri": "/rules/{ruleName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the rule.</simpara>\n      ",
            "documentation": "\n         <p>The name of the rule.</p>\n      ",
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DeleteTopicRule operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DeleteTopicRule operation.</p>\n      ",
        "shape_name": "DeleteTopicRuleRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Deletes the rule.</p>\n      "
    },
    "EnableTopicRule": {
      "name": "EnableTopicRule",
      "http": {
        "method": "POST",
        "uri": "/rules/{ruleName}/enable"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the topic rule to enable.</simpara>\n      ",
            "documentation": "\n         <p>The name of the topic rule to enable.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the EnableTopicRuleRequest operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the EnableTopicRuleRequest operation.</p>\n      ",
        "shape_name": "EnableTopicRuleRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Enables the rule.</p>\n      "
    },
    "DisableTopicRule": {
      "name": "DisableTopicRule",
      "http": {
        "method": "POST",
        "uri": "/rules/{ruleName}/disable"
      },
      "input": {
        "type": "structure",
        "members": {
          "ruleName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <simpara>The name of the rule to disable.</simpara>\n      ",
            "documentation": "\n         <p>The name of the rule to disable.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "RuleName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DisableTopicRuleRequest operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DisableTopicRuleRequest operation.</p>\n      ",
        "shape_name": "DisableTopicRuleRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Disables the rule.</p>\n      "
    },
    "SetLoggingOptions": {
      "name": "SetLoggingOptions",
      "http": {
        "method": "POST",
        "uri": "/loggingOptions"
      },
      "input": {
        "type": "structure",
        "members": {
          "loggingOptionsPayload": {
            "type": "structure",
            "members": {
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
                "required": true,
                "shape_name": "AwsArn"
              },
              "logLevel": {
                "type": "string",
                "enum": [
                  "DEBUG",
                  "INFO",
                  "ERROR",
                  "WARN",
                  "DISABLED"
                ],
                "zonbookDocumentation": "\n         <simpara>The log level.</simpara>\n      ",
                "documentation": "\n         <p>The log level.</p>\n      ",
                "shape_name": "LogLevel"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The logging options payload.</simpara>\n      ",
            "documentation": "\n         <p>The logging options payload.</p>\n      ",
            "payload": true,
            "required": true,
            "shape_name": "LoggingOptionsPayload"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the SetLoggingOptions operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the SetLoggingOptions operation.</p>\n      ",
        "shape_name": "SetLoggingOptionsRequest"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Sets the logging options.</p>\n         <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code> instead.</p>\n      "
    },
    "GetLoggingOptions": {
      "name": "GetLoggingOptions",
      "http": {
        "method": "GET",
        "uri": "/loggingOptions"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The input for the GetLoggingOptions operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the GetLoggingOptions operation.</p>\n      ",
        "shape_name": "GetLoggingOptionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the IAM role that grants access.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the IAM role that grants access.</p>\n      ",
            "shape_name": "AwsArn"
          },
          "logLevel": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "ERROR",
              "WARN",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <simpara>The logging level.</simpara>\n      ",
            "documentation": "\n         <p>The logging level.</p>\n      ",
            "shape_name": "LogLevel"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the GetLoggingOptions operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the GetLoggingOptions operation.</p>\n      ",
        "shape_name": "GetLoggingOptionsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Gets the logging options.</p>\n         <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code> instead.</p>\n      "
    },
    "SetV2LoggingOptions": {
      "name": "SetV2LoggingOptions",
      "http": {
        "method": "POST",
        "uri": "/v2LoggingOptions"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the role that allows IoT to write to Cloudwatch logs.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the role that allows IoT to write to Cloudwatch logs.</p>\n      ",
            "shape_name": "AwsArn"
          },
          "defaultLogLevel": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "ERROR",
              "WARN",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <simpara>The default logging level.</simpara>\n      ",
            "documentation": "\n         <p>The default logging level.</p>\n      ",
            "shape_name": "LogLevel"
          },
          "disableAllLogs": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>If true all logs are disabled. The default is false.</simpara>\n      ",
            "documentation": "\n         <p>If true all logs are disabled. The default is false.</p>\n      ",
            "shape_name": "DisableAllLogs"
          }
        },
        "shape_name": "SetV2LoggingOptionsRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Sets the logging options for the V2 logging service.</p>\n      "
    },
    "GetV2LoggingOptions": {
      "name": "GetV2LoggingOptions",
      "http": {
        "method": "GET",
        "uri": "/v2LoggingOptions"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "GetV2LoggingOptionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\n         <simpara>The IAM role ARN AWS IoT uses to write to your CloudWatch logs.</simpara>\n\n      ",
            "documentation": "\n\n         <p>The IAM role ARN AWS IoT uses to write to your CloudWatch logs.</p>\n\n      ",
            "shape_name": "AwsArn"
          },
          "defaultLogLevel": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "ERROR",
              "WARN",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <simpara>The default log level.</simpara>\n      ",
            "documentation": "\n         <p>The default log level.</p>\n      ",
            "shape_name": "LogLevel"
          },
          "disableAllLogs": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Disables all logs.</simpara>\n      ",
            "documentation": "\n         <p>Disables all logs.</p>\n      ",
            "shape_name": "DisableAllLogs"
          }
        },
        "shape_name": "GetV2LoggingOptionsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not configured.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not configured.</p>\n      ",
          "shape_name": "NotConfiguredException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Gets the fine grained logging options.</p>\n      "
    },
    "SetV2LoggingLevel": {
      "name": "SetV2LoggingLevel",
      "http": {
        "method": "POST",
        "uri": "/v2LoggingLevel"
      },
      "input": {
        "type": "structure",
        "members": {
          "logTarget": {
            "type": "structure",
            "members": {
              "targetType": {
                "type": "string",
                "enum": [
                  "DEFAULT",
                  "THING_GROUP"
                ],
                "zonbookDocumentation": "\n         <simpara>The target type.</simpara>\n      ",
                "documentation": "\n         <p>The target type.</p>\n      ",
                "required": true,
                "shape_name": "LogTargetType"
              },
              "targetName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The target name.</simpara>\n      ",
                "documentation": "\n         <p>The target name.</p>\n      ",
                "shape_name": "LogTargetName"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The log target.</simpara>\n      ",
            "documentation": "\n         <p>The log target.</p>\n      ",
            "required": true,
            "shape_name": "LogTarget"
          },
          "logLevel": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "ERROR",
              "WARN",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <simpara>The log level.</simpara>\n      ",
            "documentation": "\n         <p>The log level.</p>\n      ",
            "required": true,
            "shape_name": "LogLevel"
          }
        },
        "shape_name": "SetV2LoggingLevelRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not configured.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not configured.</p>\n      ",
          "shape_name": "NotConfiguredException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Sets the logging level.</p>\n      "
    },
    "ListV2LoggingLevels": {
      "name": "ListV2LoggingLevels",
      "http": {
        "method": "GET",
        "uri": "/v2LoggingLevel?maxResults={maxResults}&nextToken={nextToken}&targetType={targetType}"
      },
      "input": {
        "type": "structure",
        "members": {
          "targetType": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "THING_GROUP"
            ],
            "zonbookDocumentation": "\n         <simpara>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</simpara>\n      ",
            "documentation": "\n         <p>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</p>\n      ",
            "location": "uri",
            "shape_name": "LogTargetType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n         additional results.</simpara>\n      ",
            "documentation": "\n         <p>The token used to get the next set of results, or <b>null</b> if there are no\n         additional results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of results to return at one time.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "SkyfallMaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListV2LoggingLevelsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "logTargetConfigurations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The logging configuration for a target.</simpara>\n      ",
            "documentation": "\n         <p>The logging configuration for a target.</p>\n      ",
            "shape_name": "LogTargetConfigurations",
            "members": {
              "type": "structure",
              "members": {
                "logTarget": {
                  "type": "structure",
                  "members": {
                    "targetType": {
                      "type": "string",
                      "enum": [
                        "DEFAULT",
                        "THING_GROUP"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The target type.</simpara>\n      ",
                      "documentation": "\n         <p>The target type.</p>\n      ",
                      "required": true,
                      "shape_name": "LogTargetType"
                    },
                    "targetName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The target name.</simpara>\n      ",
                      "documentation": "\n         <p>The target name.</p>\n      ",
                      "shape_name": "LogTargetName"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A log target</simpara>\n      ",
                  "documentation": "\n         <p>A log target</p>\n      ",
                  "shape_name": "LogTarget"
                },
                "logLevel": {
                  "type": "string",
                  "enum": [
                    "DEBUG",
                    "INFO",
                    "ERROR",
                    "WARN",
                    "DISABLED"
                  ],
                  "zonbookDocumentation": "\n         <simpara>The logging level.</simpara>\n      ",
                  "documentation": "\n         <p>The logging level.</p>\n      ",
                  "shape_name": "LogLevel"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The target configuration.</simpara>\n      ",
              "documentation": "\n         <p>The target configuration.</p>\n      ",
              "shape_name": "LogTargetConfiguration"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n         additional results.</simpara>\n      ",
            "documentation": "\n         <p>The token used to get the next set of results, or <b>null</b> if there are no\n         additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListV2LoggingLevelsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource is not configured.</simpara>\n      ",
          "documentation": "\n         <p>The resource is not configured.</p>\n      ",
          "shape_name": "NotConfiguredException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Lists logging levels.</p>\n      "
    },
    "DeleteV2LoggingLevel": {
      "name": "DeleteV2LoggingLevel",
      "http": {
        "method": "DELETE",
        "uri": "/v2LoggingLevel?targetName={targetName}&targetType={targetType}"
      },
      "input": {
        "type": "structure",
        "members": {
          "targetType": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "THING_GROUP"
            ],
            "zonbookDocumentation": "\n         <simpara>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</simpara>\n      ",
            "documentation": "\n         <p>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "LogTargetType"
          },
          "targetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the resource for which you are configuring logging.</simpara>\n      ",
            "documentation": "\n         <p>The name of the resource for which you are configuring logging.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "LogTargetName"
          }
        },
        "shape_name": "DeleteV2LoggingLevelRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Deletes a logging level.</p>\n      "
    },
    "DescribeEndpoint": {
      "name": "DescribeEndpoint",
      "http": {
        "method": "GET",
        "uri": "/endpoint?endpointType={endpointType}"
      },
      "input": {
        "type": "structure",
        "members": {
          "endpointType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The endpoint type. Valid endpoint types include:</simpara>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</para>\n            </listitem>\n         </itemizedlist>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</para>\n            </listitem>\n         </itemizedlist>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>iot:CredentialProvider</code> - Returns an AWS IoT credentials provider API endpoint.</para>\n            </listitem>\n         </itemizedlist>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>iot:Jobs</code> - Returns an AWS IoT device management Jobs API endpoint.</para>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The endpoint type. Valid endpoint types include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</p>\n            </li>\n         </ul>\n         <ul>\n            <li>\n               <p>\n                  <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</p>\n            </li>\n         </ul>\n         <ul>\n            <li>\n               <p>\n                  <code>iot:CredentialProvider</code> - Returns an AWS IoT credentials provider API endpoint.</p>\n            </li>\n         </ul>\n         <ul>\n            <li>\n               <p>\n                  <code>iot:Jobs</code> - Returns an AWS IoT device management Jobs API endpoint.</p>\n            </li>\n         </ul>\n      ",
            "location": "uri",
            "shape_name": "EndpointType"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input for the DescribeEndpoint operation.</simpara>\n      ",
        "documentation": "\n         <p>The input for the DescribeEndpoint operation.</p>\n      ",
        "shape_name": "DescribeEndpointRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "endpointAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The endpoint. The format of the endpoint is as follows:\n            <emphasis>identifier</emphasis>.iot.<emphasis>region</emphasis>.amazonaws.com.</simpara>\n      ",
            "documentation": "\n         <p>The endpoint. The format of the endpoint is as follows:\n            <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n      ",
            "shape_name": "EndpointAddress"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The output from the DescribeEndpoint operation.</simpara>\n      ",
        "documentation": "\n         <p>The output from the DescribeEndpoint operation.</p>\n      ",
        "shape_name": "DescribeEndpointResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Returns a unique endpoint specific to the AWS account making the call.</p>\n      "
    },
    "CreateThing": {
      "name": "CreateThing",
      "http": {
        "method": "POST",
        "uri": "/things/{thingName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing to create.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing to create.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type associated with the new thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type associated with the new thing.</p>\n\t     ",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "attributePayload": {
            "type": "structure",
            "members": {
              "attributes": {
                "type": "map",
                "zonbookDocumentation": "\n\t\t       <simpara>A JSON string containing up to three key-value pair in JSON format. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
                "documentation": "\n\t\t       <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
                "shape_name": "Attributes",
                "keys": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                  "shape_name": "AttributeName",
                  "documentation": null,
                  "max_length": 128
                },
                "members": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                  "shape_name": "AttributeValue",
                  "documentation": null,
                  "max_length": 800
                }
              },
              "merge": {
                "type": "boolean",
                "zonbookDocumentation": "\n\t\t       <simpara>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</simpara>\n\t\t       <simpara>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</simpara>\n\t\t       </note>\n\t     ",
                "documentation": "\n\t\t       <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</p>\n\t\t       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>\n\t\t       <note>\n\t\t\t         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n\t\t       </note>\n\t     ",
                "shape_name": "Flag"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The attribute payload, which consists of up to three name/value pairs in a JSON document. For\n\t\t\texample:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For\n\t\t\texample:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
            "shape_name": "AttributePayload"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the CreateThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the CreateThing operation.</p>\n\t     ",
        "shape_name": "CreateThingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the new thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the new thing.</p>\n\t     ",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ARN of the new thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the new thing.</p>\n\t     ",
            "shape_name": "ThingArn"
          },
          "thingId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing ID.</p>\n\t     ",
            "shape_name": "ThingId"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output of the CreateThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output of the CreateThing operation.</p>\n\t     ",
        "shape_name": "CreateThingResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a thing record in the registry.</p>\n\t\t       <note>\n            <p>This is a control plane operation. See <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/authorization.html\">Authorization</a> for \n\t\tinformation about authorizing control plane actions.</p>\n         </note>\n\t     "
    },
    "DeleteThing": {
      "name": "DeleteThing",
      "http": {
        "method": "DELETE",
        "uri": "/things/{thingName}?expectedVersion={expectedVersion}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing to delete.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing to delete.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The expected version of the thing record in the registry. If the version of the record in the registry\n\t\t\tdoes not match the expected version specified in the request, the <code>DeleteThing</code> request is\n\t\t\trejected with a <code>VersionConflictException</code>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The expected version of the thing record in the registry. If the version of the record in the registry\n\t\t\tdoes not match the expected version specified in the request, the <code>DeleteThing</code> request is\n\t\t\trejected with a <code>VersionConflictException</code>.</p>\n\t     ",
            "location": "uri",
            "shape_name": "OptionalVersion"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DeleteThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DeleteThing operation.</p>\n\t     ",
        "shape_name": "DeleteThingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output of the DeleteThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output of the DeleteThing operation.</p>\n\t     ",
        "shape_name": "DeleteThingResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes the specified thing.</p>\n\t     "
    },
    "ListThings": {
      "name": "ListThings",
      "http": {
        "method": "GET",
        "uri": "/things?maxResults={maxResults}&nextToken={nextToken}&attributeName={attributeName}&attributeValue={attributeValue}&thingTypeName={thingTypeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return in this operation.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return in this operation.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "attributeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_.,@/:#-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The attribute name used to search for things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The attribute name used to search for things.</p>\n\t     ",
            "location": "uri",
            "shape_name": "AttributeName",
            "max_length": 128
          },
          "attributeValue": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_.,@/:#-]*",
            "zonbookDocumentation": "\n\t\t       <simpara>The attribute value used to search for things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The attribute value used to search for things.</p>\n\t     ",
            "location": "uri",
            "shape_name": "AttributeValue",
            "max_length": 800
          },
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type used to search for things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type used to search for things.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the ListThings operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the ListThings operation.</p>\n\t     ",
        "shape_name": "ListThingsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "things": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The things.</p>\n\t     ",
            "shape_name": "ThingAttributeList",
            "members": {
              "type": "structure",
              "members": {
                "thingName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
                  "shape_name": "ThingName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingTypeName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type, if the thing has been associated with a type.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the thing type, if the thing has been associated with a type.</p>\n\t     ",
                  "shape_name": "ThingTypeName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The thing ARN.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing ARN.</p>\n\t     ",
                  "shape_name": "ThingArn"
                },
                "attributes": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <simpara>A list of thing attributes which are name-value pairs.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>A list of thing attributes which are name-value pairs.</p>\n\t     ",
                  "shape_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                    "shape_name": "AttributeName",
                    "documentation": null,
                    "max_length": 128
                  },
                  "members": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                    "shape_name": "AttributeValue",
                    "documentation": null,
                    "max_length": 800
                  }
                },
                "version": {
                  "type": "long",
                  "zonbookDocumentation": "\n\t\t       <simpara>The version of the thing record in the registry.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The version of the thing record in the registry.</p>\n\t     ",
                  "shape_name": "Version"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>The properties of the thing, including thing name, thing type name, and a list of thing\n\t\t\tattributes.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The properties of the thing, including thing name, thing type name, and a list of thing\n\t\t\tattributes.</p>\n\t     ",
              "shape_name": "ThingAttribute"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the ListThings operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the ListThings operation.</p>\n\t     ",
        "shape_name": "ListThingsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling\n\t\t\t\t<code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the\n\t\t\tregistry that contain an attribute <b>Color</b> with the value <b>Red</b>. </p>\n\t     "
    },
    "AttachThingPrincipal": {
      "name": "AttachThingPrincipal",
      "http": {
        "method": "PUT",
        "uri": "/things/{thingName}/principals"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The principal, such as a certificate or other credential.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The principal, such as a certificate or other credential.</p>\n\t     ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-principal"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the AttachThingPrincipal operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the AttachThingPrincipal operation.</p>\n\t     ",
        "shape_name": "AttachThingPrincipalRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the AttachThingPrincipal operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the AttachThingPrincipal operation.</p>\n\t     ",
        "shape_name": "AttachThingPrincipalResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Attaches the specified principal to the specified thing.</p>\n\t     "
    },
    "DetachThingPrincipal": {
      "name": "DetachThingPrincipal",
      "http": {
        "method": "DELETE",
        "uri": "/things/{thingName}/principals"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an\n\t\t\tAmazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an\n\t\t\tAmazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n\t     ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-principal"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DetachThingPrincipal operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DetachThingPrincipal operation.</p>\n\t     ",
        "shape_name": "DetachThingPrincipalRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the DetachThingPrincipal operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the DetachThingPrincipal operation.</p>\n\t     ",
        "shape_name": "DetachThingPrincipalResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Detaches the specified principal from the specified thing.</p>\n\t     "
    },
    "ListThingPrincipals": {
      "name": "ListThingPrincipals",
      "http": {
        "method": "GET",
        "uri": "/things/{thingName}/principals"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the ListThingPrincipal operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the ListThingPrincipal operation.</p>\n\t     ",
        "shape_name": "ListThingPrincipalsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "principals": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The principals associated with the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The principals associated with the thing.</p>\n\t     ",
            "shape_name": "Principals",
            "members": {
              "type": "string",
              "shape_name": "PrincipalArn",
              "documentation": null
            }
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the ListThingPrincipals operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the ListThingPrincipals operation.</p>\n\t     ",
        "shape_name": "ListThingPrincipalsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the principals associated with the specified thing.</p>\n\t     "
    },
    "ListPrincipalThings": {
      "name": "ListPrincipalThings",
      "http": {
        "method": "GET",
        "uri": "/principals/things?maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return in this operation.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return in this operation.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "principal": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The principal.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The principal.</p>\n\t     ",
            "required": true,
            "location": "header",
            "shape_name": "Principal",
            "location_name": "x-amzn-principal"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the ListPrincipalThings operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the ListPrincipalThings operation.</p>\n\t     ",
        "shape_name": "ListPrincipalThingsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "things": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The things.</p>\n\t     ",
            "shape_name": "ThingNameList",
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "ThingName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the ListPrincipalThings operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the ListPrincipalThings operation.</p>\n\t     ",
        "shape_name": "ListPrincipalThingsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the things associated with the specified principal.</p>\n\t     "
    },
    "DescribeThing": {
      "name": "DescribeThing",
      "http": {
        "method": "GET",
        "uri": "/things/{thingName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DescribeThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DescribeThing operation.</p>\n\t     ",
        "shape_name": "DescribeThingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "defaultClientId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The default client ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The default client ID.</p>\n\t     ",
            "shape_name": "ClientId"
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing.</p>\n\t     ",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ID of the thing to describe.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the thing to describe.</p>\n\t     ",
            "shape_name": "ThingId"
          },
          "thingArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ARN of the thing to describe.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the thing to describe.</p>\n\t     ",
            "shape_name": "ThingArn"
          },
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing type name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing type name.</p>\n\t     ",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "attributes": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing attributes.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing attributes.</p>\n\t     ",
            "shape_name": "Attributes",
            "keys": {
              "type": "string",
              "pattern": "[a-zA-Z0-9_.,@/:#-]+",
              "shape_name": "AttributeName",
              "documentation": null,
              "max_length": 128
            },
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9_.,@/:#-]*",
              "shape_name": "AttributeValue",
              "documentation": null,
              "max_length": 800
            }
          },
          "version": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The current version of the thing record in the registry.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>To avoid unintentional changes to the information in the registry, you can pass the version\n\t\t\t\tinformation in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and\n\t\t\t\t\t<code>DeleteThing</code> calls.</simpara>\n\t\t       </note>\n\t     ",
            "documentation": "\n\t\t       <p>The current version of the thing record in the registry.</p>\n\t\t       <note>\n\t\t\t         <p>To avoid unintentional changes to the information in the registry, you can pass the version\n\t\t\t\tinformation in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and\n\t\t\t\t\t<code>DeleteThing</code> calls.</p>\n\t\t       </note>\n\t     ",
            "shape_name": "Version"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the DescribeThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the DescribeThing operation.</p>\n\t     ",
        "shape_name": "DescribeThingResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about the specified thing.</p>\n\t     "
    },
    "UpdateThing": {
      "name": "UpdateThing",
      "http": {
        "method": "PATCH",
        "uri": "/things/{thingName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing to update.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing to update.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "attributePayload": {
            "type": "structure",
            "members": {
              "attributes": {
                "type": "map",
                "zonbookDocumentation": "\n\t\t       <simpara>A JSON string containing up to three key-value pair in JSON format. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
                "documentation": "\n\t\t       <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
                "shape_name": "Attributes",
                "keys": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                  "shape_name": "AttributeName",
                  "documentation": null,
                  "max_length": 128
                },
                "members": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                  "shape_name": "AttributeValue",
                  "documentation": null,
                  "max_length": 800
                }
              },
              "merge": {
                "type": "boolean",
                "zonbookDocumentation": "\n\t\t       <simpara>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</simpara>\n\t\t       <simpara>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</simpara>\n\t\t       </note>\n\t     ",
                "documentation": "\n\t\t       <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</p>\n\t\t       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>\n\t\t       <note>\n\t\t\t         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n\t\t       </note>\n\t     ",
                "shape_name": "Flag"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>A list of thing attributes, a JSON string containing name-value pairs. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code>\n\t\t       </simpara>\n\t\t       <simpara>This data is used to add new attributes or update existing attributes.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code>\n\t\t       </p>\n\t\t       <p>This data is used to add new attributes or update existing attributes.</p>\n\t     ",
            "shape_name": "AttributePayload"
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The expected version of the thing record in the registry. If the version of the record in the registry\n\t\t\tdoes not match the expected version specified in the request, the <code>UpdateThing</code> request is\n\t\t\trejected with a <code>VersionConflictException</code>.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The expected version of the thing record in the registry. If the version of the record in the registry\n\t\t\tdoes not match the expected version specified in the request, the <code>UpdateThing</code> request is\n\t\t\trejected with a <code>VersionConflictException</code>.</p>\n\t     ",
            "shape_name": "OptionalVersion"
          },
          "removeThingType": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <simpara>Remove a thing type association. If <emphasis role=\"bold\">true</emphasis>, the association is\n\t\t\tremoved.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Remove a thing type association. If <b>true</b>, the association is\n\t\t\tremoved.</p>\n\t     ",
            "shape_name": "RemoveThingType"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the UpdateThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the UpdateThing operation.</p>\n\t     ",
        "shape_name": "UpdateThingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output from the UpdateThing operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output from the UpdateThing operation.</p>\n\t     ",
        "shape_name": "UpdateThingResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates the data for a thing.</p>\n\t     "
    },
    "CreateThingType": {
      "name": "CreateThingType",
      "http": {
        "method": "POST",
        "uri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "thingTypeProperties": {
            "type": "structure",
            "members": {
              "thingTypeDescription": {
                "type": "string",
                "pattern": "[\\p{Graph}\\x20]*",
                "zonbookDocumentation": "\n\t\t       <simpara>The description of the thing type.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The description of the thing type.</p>\n\t     ",
                "shape_name": "ThingTypeDescription",
                "max_length": 2028
              },
              "searchableAttributes": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <simpara>A list of searchable thing attribute names.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>A list of searchable thing attribute names.</p>\n\t     ",
                "shape_name": "SearchableAttributes",
                "members": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                  "shape_name": "AttributeName",
                  "documentation": null,
                  "max_length": 128
                }
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The ThingTypeProperties for the thing type to create. It contains information about the new thing type\n\t\t\tincluding a description, and a list of searchable thing attribute names.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type\n\t\t\tincluding a description, and a list of searchable thing attribute names.</p>\n\t     ",
            "shape_name": "ThingTypeProperties"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the CreateThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the CreateThingType operation.</p>\n\t     ",
        "shape_name": "CreateThingTypeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "thingTypeArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The Amazon Resource Name (ARN) of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the thing type.</p>\n\t     ",
            "shape_name": "ThingTypeArn"
          },
          "thingTypeId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing type ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing type ID.</p>\n\t     ",
            "shape_name": "ThingTypeId"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output of the CreateThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output of the CreateThingType operation.</p>\n\t     ",
        "shape_name": "CreateThingTypeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a new thing type.</p>\n\t     "
    },
    "DescribeThingType": {
      "name": "DescribeThingType",
      "http": {
        "method": "GET",
        "uri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DescribeThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DescribeThingType operation.</p>\n\t     ",
        "shape_name": "DescribeThingTypeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "thingTypeId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing type ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing type ID.</p>\n\t     ",
            "shape_name": "ThingTypeId"
          },
          "thingTypeArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing type ARN.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing type ARN.</p>\n\t     ",
            "shape_name": "ThingTypeArn"
          },
          "thingTypeProperties": {
            "type": "structure",
            "members": {
              "thingTypeDescription": {
                "type": "string",
                "pattern": "[\\p{Graph}\\x20]*",
                "zonbookDocumentation": "\n\t\t       <simpara>The description of the thing type.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The description of the thing type.</p>\n\t     ",
                "shape_name": "ThingTypeDescription",
                "max_length": 2028
              },
              "searchableAttributes": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <simpara>A list of searchable thing attribute names.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>A list of searchable thing attribute names.</p>\n\t     ",
                "shape_name": "SearchableAttributes",
                "members": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                  "shape_name": "AttributeName",
                  "documentation": null,
                  "max_length": 128
                }
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The ThingTypeProperties contains information about the thing type including description, and a list of\n\t\t\tsearchable thing attribute names.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ThingTypeProperties contains information about the thing type including description, and a list of\n\t\t\tsearchable thing attribute names.</p>\n\t     ",
            "shape_name": "ThingTypeProperties"
          },
          "thingTypeMetadata": {
            "type": "structure",
            "members": {
              "deprecated": {
                "type": "boolean",
                "zonbookDocumentation": "\n\t\t       <simpara>Whether the thing type is deprecated. If <emphasis role=\"bold\">true</emphasis>, no new things could be\n\t\t\tassociated with this type.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>Whether the thing type is deprecated. If <b>true</b>, no new things could be\n\t\t\tassociated with this type.</p>\n\t     ",
                "shape_name": "Boolean"
              },
              "deprecationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <simpara>The date and time when the thing type was deprecated.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time when the thing type was deprecated.</p>\n\t     ",
                "shape_name": "DeprecationDate"
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <simpara>The date and time when the thing type was created.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time when the thing type was created.</p>\n\t     ",
                "shape_name": "CreationDate"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The ThingTypeMetadata contains additional information about the thing type including: creation date and\n\t\t\ttime, a value indicating whether the thing type is deprecated, and a date and time when it was\n\t\t\tdeprecated.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ThingTypeMetadata contains additional information about the thing type including: creation date and\n\t\t\ttime, a value indicating whether the thing type is deprecated, and a date and time when it was\n\t\t\tdeprecated.</p>\n\t     ",
            "shape_name": "ThingTypeMetadata"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output for the DescribeThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output for the DescribeThingType operation.</p>\n\t     ",
        "shape_name": "DescribeThingTypeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about the specified thing type.</p>\n\t     "
    },
    "DeprecateThingType": {
      "name": "DeprecateThingType",
      "http": {
        "method": "POST",
        "uri": "/thing-types/{thingTypeName}/deprecate"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type to deprecate.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type to deprecate.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          },
          "undoDeprecate": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <simpara>Whether to undeprecate a deprecated thing type. If <emphasis role=\"bold\">true</emphasis>, the thing\n\t\t\ttype will not be deprecated anymore and you can associate it with things.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing\n\t\t\ttype will not be deprecated anymore and you can associate it with things.</p>\n\t     ",
            "shape_name": "UndoDeprecate"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DeprecateThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DeprecateThingType operation.</p>\n\t     ",
        "shape_name": "DeprecateThingTypeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output for the DeprecateThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output for the DeprecateThingType operation.</p>\n\t     ",
        "shape_name": "DeprecateThingTypeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Deprecates a thing type. You can not associate new things with deprecated thing type.</p>\n\t     "
    },
    "DeleteThingType": {
      "name": "DeleteThingType",
      "http": {
        "method": "DELETE",
        "uri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the DeleteThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the DeleteThingType operation.</p>\n\t     ",
        "shape_name": "DeleteThingTypeRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output for the DeleteThingType operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output for the DeleteThingType operation.</p>\n\t     ",
        "shape_name": "DeleteThingTypeResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes the specified thing type . You cannot delete a thing type if it has things associated with it.\n\t\t\tTo delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then\n\t\t\tremove any associated things by calling <a>UpdateThing</a> to change the thing type on any\n\t\t\tassociated thing, and finally use <a>DeleteThingType</a> to delete the thing type.</p>\n\t     "
    },
    "ListThingTypes": {
      "name": "ListThingTypes",
      "http": {
        "method": "GET",
        "uri": "/thing-types?maxResults={maxResults}&nextToken={nextToken}&thingTypeName={thingTypeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return in this operation.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return in this operation.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "thingTypeName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ThingTypeName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The input for the ListThingTypes operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The input for the ListThingTypes operation.</p>\n\t     ",
        "shape_name": "ListThingTypesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "thingTypes": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing types.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing types.</p>\n\t     ",
            "shape_name": "ThingTypeList",
            "members": {
              "type": "structure",
              "members": {
                "thingTypeName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing type.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the thing type.</p>\n\t     ",
                  "shape_name": "ThingTypeName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingTypeArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The thing type ARN.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing type ARN.</p>\n\t     ",
                  "shape_name": "ThingTypeArn"
                },
                "thingTypeProperties": {
                  "type": "structure",
                  "members": {
                    "thingTypeDescription": {
                      "type": "string",
                      "pattern": "[\\p{Graph}\\x20]*",
                      "zonbookDocumentation": "\n\t\t       <simpara>The description of the thing type.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The description of the thing type.</p>\n\t     ",
                      "shape_name": "ThingTypeDescription",
                      "max_length": 2028
                    },
                    "searchableAttributes": {
                      "type": "list",
                      "zonbookDocumentation": "\n\t\t       <simpara>A list of searchable thing attribute names.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>A list of searchable thing attribute names.</p>\n\t     ",
                      "shape_name": "SearchableAttributes",
                      "members": {
                        "type": "string",
                        "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "max_length": 128
                      }
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <simpara>The ThingTypeProperties for the thing type.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The ThingTypeProperties for the thing type.</p>\n\t     ",
                  "shape_name": "ThingTypeProperties"
                },
                "thingTypeMetadata": {
                  "type": "structure",
                  "members": {
                    "deprecated": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n\t\t       <simpara>Whether the thing type is deprecated. If <emphasis role=\"bold\">true</emphasis>, no new things could be\n\t\t\tassociated with this type.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>Whether the thing type is deprecated. If <b>true</b>, no new things could be\n\t\t\tassociated with this type.</p>\n\t     ",
                      "shape_name": "Boolean"
                    },
                    "deprecationDate": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n\t\t       <simpara>The date and time when the thing type was deprecated.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The date and time when the thing type was deprecated.</p>\n\t     ",
                      "shape_name": "DeprecationDate"
                    },
                    "creationDate": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n\t\t       <simpara>The date and time when the thing type was created.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The date and time when the thing type was created.</p>\n\t     ",
                      "shape_name": "CreationDate"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <simpara>The ThingTypeMetadata contains additional information about the thing type including: creation date and\n\t\t\ttime, a value indicating whether the thing type is deprecated, and a date and time when it was\n\t\t\tdeprecated.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The ThingTypeMetadata contains additional information about the thing type including: creation date and\n\t\t\ttime, a value indicating whether the thing type is deprecated, and a date and time when it was\n\t\t\tdeprecated.</p>\n\t     ",
                  "shape_name": "ThingTypeMetadata"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>The definition of the thing type, including thing type name and description.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The definition of the thing type, including thing type name and description.</p>\n\t     ",
              "shape_name": "ThingTypeDefinition"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token for the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token for the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "zonbookDocumentation": "\n\t\t       <simpara>The output for the ListThingTypes operation.</simpara>\n\t     ",
        "documentation": "\n\t\t       <p>The output for the ListThingTypes operation.</p>\n\t     ",
        "shape_name": "ListThingTypesResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the existing thing types.</p>\n\t     "
    },
    "CreateThingGroup": {
      "name": "CreateThingGroup",
      "http": {
        "method": "POST",
        "uri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group name to create.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group name to create.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "parentGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the parent thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the parent thing group.</p>\n\t     ",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupProperties": {
            "type": "structure",
            "members": {
              "thingGroupDescription": {
                "type": "string",
                "pattern": "[\\p{Graph}\\x20]*",
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group description.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group description.</p>\n\t     ",
                "shape_name": "ThingGroupDescription",
                "max_length": 2028
              },
              "attributePayload": {
                "type": "structure",
                "members": {
                  "attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n\t\t       <simpara>A JSON string containing up to three key-value pair in JSON format. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
                    "shape_name": "Attributes",
                    "keys": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "max_length": 128
                    },
                    "members": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "max_length": 800
                    }
                  },
                  "merge": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n\t\t       <simpara>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</simpara>\n\t\t       <simpara>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</simpara>\n\t\t       </note>\n\t     ",
                    "documentation": "\n\t\t       <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</p>\n\t\t       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>\n\t\t       <note>\n\t\t\t         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n\t\t       </note>\n\t     ",
                    "shape_name": "Flag"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group attributes in JSON format.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group attributes in JSON format.</p>\n\t     ",
                "shape_name": "AttributePayload"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group properties.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group properties.</p>\n\t     ",
            "shape_name": "ThingGroupProperties"
          }
        },
        "shape_name": "CreateThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group name.</p>\n\t     ",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group ARN.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group ARN.</p>\n\t     ",
            "shape_name": "ThingGroupArn"
          },
          "thingGroupId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group ID.</p>\n\t     ",
            "shape_name": "ThingGroupId",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "CreateThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Create a thing group.</p>\n\t\t       <note>\n            <p>This is a control plane operation. See <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/authorization.html\">Authorization</a> for \n\t\t\tinformation about authorizing control plane actions.</p>\n         </note>\n\t     "
    },
    "DescribeThingGroup": {
      "name": "DescribeThingGroup",
      "http": {
        "method": "GET",
        "uri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing group.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing group.</p>\n\t     ",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group ID.</p>\n\t     ",
            "shape_name": "ThingGroupId",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group ARN.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group ARN.</p>\n\t     ",
            "shape_name": "ThingGroupArn"
          },
          "version": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The version of the thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The version of the thing group.</p>\n\t     ",
            "shape_name": "Version"
          },
          "thingGroupProperties": {
            "type": "structure",
            "members": {
              "thingGroupDescription": {
                "type": "string",
                "pattern": "[\\p{Graph}\\x20]*",
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group description.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group description.</p>\n\t     ",
                "shape_name": "ThingGroupDescription",
                "max_length": 2028
              },
              "attributePayload": {
                "type": "structure",
                "members": {
                  "attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n\t\t       <simpara>A JSON string containing up to three key-value pair in JSON format. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
                    "shape_name": "Attributes",
                    "keys": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "max_length": 128
                    },
                    "members": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "max_length": 800
                    }
                  },
                  "merge": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n\t\t       <simpara>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</simpara>\n\t\t       <simpara>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</simpara>\n\t\t       </note>\n\t     ",
                    "documentation": "\n\t\t       <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</p>\n\t\t       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>\n\t\t       <note>\n\t\t\t         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n\t\t       </note>\n\t     ",
                    "shape_name": "Flag"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group attributes in JSON format.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group attributes in JSON format.</p>\n\t     ",
                "shape_name": "AttributePayload"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group properties.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group properties.</p>\n\t     ",
            "shape_name": "ThingGroupProperties"
          },
          "thingGroupMetadata": {
            "type": "structure",
            "members": {
              "parentGroupName": {
                "type": "string",
                "pattern": "[a-zA-Z0-9:_-]+",
                "zonbookDocumentation": "\n\t\t       <simpara>The parent thing group name.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The parent thing group name.</p>\n\t     ",
                "shape_name": "ThingGroupName",
                "min_length": 1,
                "max_length": 128
              },
              "rootToParentThingGroups": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <simpara>The root parent thing group.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The root parent thing group.</p>\n\t     ",
                "shape_name": "ThingGroupNameAndArnList",
                "members": {
                  "type": "structure",
                  "members": {
                    "groupName": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9:_-]+",
                      "zonbookDocumentation": "\n\t\t       <simpara>The group name.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The group name.</p>\n\t     ",
                      "shape_name": "ThingGroupName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "groupArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <simpara>The group ARN.</simpara>\n\t     ",
                      "documentation": "\n\t\t       <p>The group ARN.</p>\n\t     ",
                      "shape_name": "ThingGroupArn"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <simpara>The name and ARN of a group.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The name and ARN of a group.</p>\n\t     ",
                  "shape_name": "GroupNameAndArn"
                }
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <simpara>The UNIX timestamp of when the thing group was created.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The UNIX timestamp of when the thing group was created.</p>\n\t     ",
                "shape_name": "CreationDate"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>Thing group metadata.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Thing group metadata.</p>\n\t     ",
            "shape_name": "ThingGroupMetadata"
          }
        },
        "shape_name": "DescribeThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Describe a thing group.</p>\n\t     "
    },
    "UpdateThingGroup": {
      "name": "UpdateThingGroup",
      "http": {
        "method": "PATCH",
        "uri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group to update.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group to update.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupProperties": {
            "type": "structure",
            "members": {
              "thingGroupDescription": {
                "type": "string",
                "pattern": "[\\p{Graph}\\x20]*",
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group description.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group description.</p>\n\t     ",
                "shape_name": "ThingGroupDescription",
                "max_length": 2028
              },
              "attributePayload": {
                "type": "structure",
                "members": {
                  "attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n\t\t       <simpara>A JSON string containing up to three key-value pair in JSON format. For example:</simpara>\n\t\t       <simpara>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </simpara>\n\t     ",
                    "documentation": "\n\t\t       <p>A JSON string containing up to three key-value pair in JSON format. For example:</p>\n\t\t       <p>\n\t\t\t         <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n\t\t       </p>\n\t     ",
                    "shape_name": "Attributes",
                    "keys": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "max_length": 128
                    },
                    "members": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "max_length": 800
                    }
                  },
                  "merge": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n\t\t       <simpara>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</simpara>\n\t\t       <simpara>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</simpara>\n\t\t       <note>\n\t\t\t         <simpara>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</simpara>\n\t\t       </note>\n\t     ",
                    "documentation": "\n\t\t       <p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with\n\t\t\tthe attributes stored in the registry, instead of overwriting them.</p>\n\t\t       <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p>\n\t\t       <note>\n\t\t\t         <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n\t\t       </note>\n\t     ",
                    "shape_name": "Flag"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <simpara>The thing group attributes in JSON format.</simpara>\n\t     ",
                "documentation": "\n\t\t       <p>The thing group attributes in JSON format.</p>\n\t     ",
                "shape_name": "AttributePayload"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group properties.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group properties.</p>\n\t     ",
            "required": true,
            "shape_name": "ThingGroupProperties"
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The expected version of the thing group. If this does not match the version of the thing group being\n\t\t\tupdated, the update will fail.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The expected version of the thing group. If this does not match the version of the thing group being\n\t\t\tupdated, the update will fail.</p>\n\t     ",
            "shape_name": "OptionalVersion"
          }
        },
        "shape_name": "UpdateThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "version": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The version of the updated thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The version of the updated thing group.</p>\n\t     ",
            "shape_name": "Version"
          }
        },
        "shape_name": "UpdateThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Update a thing group.</p>\n\t     "
    },
    "DeleteThingGroup": {
      "name": "DeleteThingGroup",
      "http": {
        "method": "DELETE",
        "uri": "/thing-groups/{thingGroupName}?expectedVersion={expectedVersion}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing group to delete.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing group to delete.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n\t\t       <simpara>The expected version of the thing group to delete.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The expected version of the thing group to delete.</p>\n\t     ",
            "location": "uri",
            "shape_name": "OptionalVersion"
          }
        },
        "shape_name": "DeleteThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes a thing group.</p>\n\t     "
    },
    "AddThingToThingGroup": {
      "name": "AddThingToThingGroup",
      "http": {
        "method": "PUT",
        "uri": "/thing-groups/addThingToThingGroup"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the group to which you are adding a thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the group to which you are adding a thing.</p>\n\t     ",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ARN of the group to which you are adding a thing.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the group to which you are adding a thing.</p>\n\t     ",
            "shape_name": "ThingGroupArn"
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing to add to a group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing to add to a group.</p>\n\t     ",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ARN of the thing to add to a group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the thing to add to a group.</p>\n\t     ",
            "shape_name": "ThingArn"
          }
        },
        "shape_name": "AddThingToThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AddThingToThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Adds a thing to a thing group.</p>\n\t     "
    },
    "RemoveThingFromThingGroup": {
      "name": "RemoveThingFromThingGroup",
      "http": {
        "method": "PUT",
        "uri": "/thing-groups/removeThingFromThingGroup"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The group name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The group name.</p>\n\t     ",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The group ARN.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The group ARN.</p>\n\t     ",
            "shape_name": "ThingGroupArn"
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the thing to remove from the group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the thing to remove from the group.</p>\n\t     ",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The ARN of the thing to remove from the group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the thing to remove from the group.</p>\n\t     ",
            "shape_name": "ThingArn"
          }
        },
        "shape_name": "RemoveThingFromThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RemoveThingFromThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Remove the specified thing from the specified group.</p>\n\t     "
    },
    "ListThingGroups": {
      "name": "ListThingGroups",
      "http": {
        "method": "GET",
        "uri": "/thing-groups?maxResults={maxResults}&nextToken={nextToken}&parentGroup={parentGroup}&namePrefixFilter={namePrefixFilter}&recursive={recursive}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "parentGroup": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <para>A filter that limits the results to those with the specified parent group.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A filter that limits the results to those with the specified parent group.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "namePrefixFilter": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <para>A filter that limits the results to those with the specified name prefix.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A filter that limits the results to those with the specified name prefix.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "recursive": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>If true, return child groups as well.</para>\n\t     ",
            "documentation": "\n\t\t       <p>If true, return child groups as well.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RecursiveWithoutDefault"
          }
        },
        "shape_name": "ListThingGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "thingGroups": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing groups.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing groups.</p>\n\t     ",
            "shape_name": "ThingGroupNameAndArnList",
            "members": {
              "type": "structure",
              "members": {
                "groupName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The group name.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The group name.</p>\n\t     ",
                  "shape_name": "ThingGroupName",
                  "min_length": 1,
                  "max_length": 128
                },
                "groupArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The group ARN.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The group ARN.</p>\n\t     ",
                  "shape_name": "ThingGroupArn"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>The name and ARN of a group.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The name and ARN of a group.</p>\n\t     ",
              "shape_name": "GroupNameAndArn"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListThingGroupsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>List the thing groups in your account.</p>\n\t     "
    },
    "ListThingsInThingGroup": {
      "name": "ListThingsInThingGroup",
      "http": {
        "method": "GET",
        "uri": "/thing-groups/{thingGroupName}/things?recursive={recursive}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing group name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing group name.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "recursive": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <simpara>When true, list things in this thing group and in all child groups as well.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>When true, list things in this thing group and in all child groups as well.</p>\n\t     ",
            "location": "uri",
            "shape_name": "Recursive"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListThingsInThingGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "things": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The things in the specified thing group.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The things in the specified thing group.</p>\n\t     ",
            "shape_name": "ThingNameList",
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "ThingName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListThingsInThingGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the things in the specified group.</p>\n\t     "
    },
    "ListThingGroupsForThing": {
      "name": "ListThingGroupsForThing",
      "http": {
        "method": "GET",
        "uri": "/things/{thingName}/thing-groups?maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing name.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListThingGroupsForThingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "thingGroups": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The thing groups.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The thing groups.</p>\n\t     ",
            "shape_name": "ThingGroupNameAndArnList",
            "members": {
              "type": "structure",
              "members": {
                "groupName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The group name.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The group name.</p>\n\t     ",
                  "shape_name": "ThingGroupName",
                  "min_length": 1,
                  "max_length": 128
                },
                "groupArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The group ARN.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The group ARN.</p>\n\t     ",
                  "shape_name": "ThingGroupArn"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>The name and ARN of a group.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The name and ARN of a group.</p>\n\t     ",
              "shape_name": "GroupNameAndArn"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListThingGroupsForThingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>List the thing groups to which the specified thing belongs.</p>\n\t     "
    },
    "UpdateThingGroupsForThing": {
      "name": "UpdateThingGroupsForThing",
      "http": {
        "method": "PUT",
        "uri": "/thing-groups/updateThingGroupsForThing"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The thing whose group memberships will be updated.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The thing whose group memberships will be updated.</p>\n\t     ",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupsToAdd": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The groups to which the thing will be added.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The groups to which the thing will be added.</p>\n\t     ",
            "shape_name": "ThingGroupList",
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "ThingGroupName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "thingGroupsToRemove": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The groups from which the thing will be removed.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The groups from which the thing will be removed.</p>\n\t     ",
            "shape_name": "ThingGroupList",
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "ThingGroupName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          }
        },
        "shape_name": "UpdateThingGroupsForThingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateThingGroupsForThingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates the groups to which the thing belongs.</p>\n\t     "
    },
    "DescribeEventConfigurations": {
      "name": "DescribeEventConfigurations",
      "http": {
        "method": "GET",
        "uri": "/event-configurations"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DescribeEventConfigurationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "eventConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <simpara>The event configurations.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The event configurations.</p>\n\t     ",
            "shape_name": "EventConfigurations",
            "keys": {
              "type": "string",
              "enum": [
                "THING",
                "THING_GROUP",
                "THING_TYPE",
                "THING_GROUP_MEMBERSHIP",
                "THING_GROUP_HIERARCHY",
                "THING_TYPE_ASSOCIATION",
                "JOB",
                "JOB_EXECUTION",
                "POLICY",
                "CERTIFICATE",
                "CA_CERTIFICATE"
              ],
              "shape_name": "EventType",
              "documentation": null
            },
            "members": {
              "type": "structure",
              "members": {
                "Enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>True to enable the configuration.</simpara>\n      ",
                  "documentation": "\n         <p>True to enable the configuration.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Configuration.</simpara>\n      ",
              "documentation": "\n         <p>Configuration.</p>\n      ",
              "shape_name": "Configuration"
            }
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The creation date of the event configuration.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The creation date of the event configuration.</p>\n\t     ",
            "shape_name": "CreationDate"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The date the event configurations were last modified.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The date the event configurations were last modified.</p>\n\t     ",
            "shape_name": "LastModifiedDate"
          }
        },
        "shape_name": "DescribeEventConfigurationsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Describes event configurations.</p>\n\t     "
    },
    "UpdateEventConfigurations": {
      "name": "UpdateEventConfigurations",
      "http": {
        "method": "PATCH",
        "uri": "/event-configurations"
      },
      "input": {
        "type": "structure",
        "members": {
          "eventConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <simpara>The new event configuration values.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The new event configuration values.</p>\n\t     ",
            "shape_name": "EventConfigurations",
            "keys": {
              "type": "string",
              "enum": [
                "THING",
                "THING_GROUP",
                "THING_TYPE",
                "THING_GROUP_MEMBERSHIP",
                "THING_GROUP_HIERARCHY",
                "THING_TYPE_ASSOCIATION",
                "JOB",
                "JOB_EXECUTION",
                "POLICY",
                "CERTIFICATE",
                "CA_CERTIFICATE"
              ],
              "shape_name": "EventType",
              "documentation": null
            },
            "members": {
              "type": "structure",
              "members": {
                "Enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>True to enable the configuration.</simpara>\n      ",
                  "documentation": "\n         <p>True to enable the configuration.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Configuration.</simpara>\n      ",
              "documentation": "\n         <p>Configuration.</p>\n      ",
              "shape_name": "Configuration"
            }
          }
        },
        "shape_name": "UpdateEventConfigurationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateEventConfigurationsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates the event configurations.</p>\n\t     "
    },
    "CreateJob": {
      "name": "CreateJob",
      "http": {
        "method": "PUT",
        "uri": "/jobs/{jobId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>A job identifier which must be unique for your AWS account. We recommend using a UUID. Alpha-numeric\n            characters, \"-\" and \"_\" are valid for use here.</simpara>\n      ",
            "documentation": "\n        <p>A job identifier which must be unique for your AWS account. We recommend using a UUID. Alpha-numeric\n            characters, \"-\" and \"_\" are valid for use here.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "targets": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of things and thing groups to which the job should be sent.</simpara>\n      ",
            "documentation": "\n        <p>A list of things and thing groups to which the job should be sent.</p>\n      ",
            "required": true,
            "shape_name": "JobTargets",
            "min_length": 1,
            "members": {
              "type": "string",
              "shape_name": "TargetArn",
              "documentation": null
            }
          },
          "documentSource": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An S3 link to the job document.</simpara>\n      ",
            "documentation": "\n        <p>An S3 link to the job document.</p>\n      ",
            "shape_name": "JobDocumentSource",
            "min_length": 1,
            "max_length": 1350
          },
          "document": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job document.</simpara>\n      ",
            "documentation": "\n        <p>The job document.</p>\n      ",
            "shape_name": "JobDocument",
            "max_length": 32768
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>A short text description of the job.</simpara>\n      ",
            "documentation": "\n        <p>A short text description of the job.</p>\n      ",
            "shape_name": "JobDescription",
            "max_length": 2028
          },
          "presignedUrlConfig": {
            "type": "structure",
            "members": {
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job\n            data/updates are stored. The role must also grant permission for IoT to download the files.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job\n            data/updates are stored. The role must also grant permission for IoT to download the files.</p>\n      ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              },
              "expiresInSec": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600\n            seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</simpara>\n      ",
                "documentation": "\n        <p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600\n            seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</p>\n      ",
                "shape_name": "ExpiresInSec",
                "min_length": 60,
                "max_length": 3600
              }
            },
            "zonbookDocumentation": "\n        <simpara>Configuration information for pre-signed S3 URLs.</simpara>\n      ",
            "documentation": "\n        <p>Configuration information for pre-signed S3 URLs.</p>\n      ",
            "shape_name": "PresignedUrlConfig"
          },
          "targetSelection": {
            "type": "string",
            "enum": [
              "CONTINUOUS",
              "SNAPSHOT"
            ],
            "zonbookDocumentation": "\n        <simpara>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group.</simpara>\n      ",
            "documentation": "\n        <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group.</p>\n      ",
            "shape_name": "TargetSelection"
          },
          "jobExecutionsRolloutConfig": {
            "type": "structure",
            "members": {
              "maximumPerMinute": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The maximum number of things that will be notified of a pending job, per minute.\n        This parameter allows you to create a staged rollout.</simpara>\n      ",
                "documentation": "\n         <p>The maximum number of things that will be notified of a pending job, per minute.\n        This parameter allows you to create a staged rollout.</p>\n      ",
                "shape_name": "MaxJobExecutionsPerMin",
                "min_length": 1,
                "max_length": 1000
              }
            },
            "zonbookDocumentation": "\n        <simpara>Allows you to create a staged rollout of the job.</simpara>\n      ",
            "documentation": "\n        <p>Allows you to create a staged rollout of the job.</p>\n      ",
            "shape_name": "JobExecutionsRolloutConfig"
          },
          "timeoutConfig": {
            "type": "structure",
            "members": {
              "inProgressTimeoutInMinutes": {
                "type": "long",
                "zonbookDocumentation": "\n         <para>Specifies the amount of time, in minutes, this device has to finish execution of this job.  \n           A timer is started, or restarted, whenever this job's execution status is specified as \n           <code>IN_PROGRESS</code> with this field populated. If the job execution status is not set \n           to a terminal state before the timer expires, or before another job execution status update \n           is sent with this field populated, the status will be automatically set to <code>TIMED_OUT</code>. \n           Note that setting/resetting this timer has no effect on the job execution timeout timer which \n           may have been specified when the job was created (<code>CreateJobExecution</code> using the \n           field <code>timeoutConfig</code>).</para>\n      ",
                "documentation": "\n         <p>Specifies the amount of time, in minutes, this device has to finish execution of this job.  \n           A timer is started, or restarted, whenever this job's execution status is specified as \n           <code>IN_PROGRESS</code> with this field populated. If the job execution status is not set \n           to a terminal state before the timer expires, or before another job execution status update \n           is sent with this field populated, the status will be automatically set to <code>TIMED_OUT</code>. \n           Note that setting/resetting this timer has no effect on the job execution timeout timer which \n           may have been specified when the job was created (<code>CreateJobExecution</code> using the \n           field <code>timeoutConfig</code>).</p>\n      ",
                "shape_name": "InProgressTimeoutInMinutes"
              }
            },
            "zonbookDocumentation": "\n         <para>Specifies the amount of time each device has to finish its execution of the job. The timer \n           is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job \n           execution status is not set to another terminal state before the time expires, it will be \n           automatically set to <code>TIMED_OUT</code>.</para>\n      ",
            "documentation": "\n         <p>Specifies the amount of time each device has to finish its execution of the job. The timer \n           is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job \n           execution status is not set to another terminal state before the time expires, it will be \n           automatically set to <code>TIMED_OUT</code>.</p>\n      ",
            "shape_name": "TimeoutConfig"
          }
        },
        "shape_name": "CreateJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job ARN.</simpara>\n      ",
            "documentation": "\n        <p>The job ARN.</p>\n      ",
            "shape_name": "JobArn"
          },
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job.</p>\n      ",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>The job description.</simpara>\n      ",
            "documentation": "\n        <p>The job description.</p>\n      ",
            "shape_name": "JobDescription",
            "max_length": 2028
          }
        },
        "shape_name": "CreateJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Creates a job.</p>\n      "
    },
    "DeleteJob": {
      "name": "DeleteJob",
      "http": {
        "method": "DELETE",
        "uri": "/jobs/{jobId}?force={force}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the job to be deleted.</simpara>\n         <simpara>After a job deletion is completed, you may reuse this jobId when you create a new job. \n        However, this is not recommended, and you must ensure that your devices are not using the \n        jobId to refer to the deleted job.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job to be deleted.</p>\n         <p>After a job deletion is completed, you may reuse this jobId when you create a new job. \n        However, this is not recommended, and you must ensure that your devices are not using the \n        jobId to refer to the deleted job.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>(Optional) When true, you can delete a job which is \"IN_PROGRESS\". Otherwise, you can\n        only delete a job which is in a terminal state (\"COMPLETED\" or \"CANCELED\") or an exception \n        will occur. The default is false.</simpara>\n         <note>\n            <simpara>Deleting a job which is \"IN_PROGRESS\", will cause a device which is executing \n        the job to be unable to access job information or update the job execution status.\n        Use caution and ensure that each device executing a job which is deleted is able to recover to \n        a valid state.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>(Optional) When true, you can delete a job which is \"IN_PROGRESS\". Otherwise, you can\n        only delete a job which is in a terminal state (\"COMPLETED\" or \"CANCELED\") or an exception \n        will occur. The default is false.</p>\n         <note>\n            <p>Deleting a job which is \"IN_PROGRESS\", will cause a device which is executing \n        the job to be unable to access job information or update the job execution status.\n        Use caution and ensure that each device executing a job which is deleted is able to recover to \n        a valid state.</p>\n         </note>\n      ",
            "location": "uri",
            "shape_name": "ForceFlag"
          }
        },
        "shape_name": "DeleteJobRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</simpara>\n      ",
          "documentation": "\n         <p>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</p>\n      ",
          "shape_name": "InvalidStateTransitionException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Deletes a job and its related job executions.</p>\n         <p>Deleting a job may take time, depending on the number of job\n        executions created for the job and various other factors. While the job\n        is being deleted, the status of the job will be shown as \n        \"DELETION_IN_PROGRESS\". Attempting to delete or cancel a job whose status \n        is already \"DELETION_IN_PROGRESS\" will result in an error.</p>\n         <p>Only 10 jobs may have status \"DELETION_IN_PROGRESS\" at the same time, or\n        a LimitExceededException will occur.</p>\n      "
    },
    "DeleteJobExecution": {
      "name": "DeleteJobExecution",
      "http": {
        "method": "DELETE",
        "uri": "/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}?force={force}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the job whose execution on a particular device will be deleted.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job whose execution on a particular device will be deleted.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the thing whose job execution will be deleted.</simpara>\n      ",
            "documentation": "\n         <p>The name of the thing whose job execution will be deleted.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "executionNumber": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the \n        execution of a particular job on a particular device.</simpara>\n         <simpara>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused \n        by IoT, so be sure you get and use the correct value here.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the \n        execution of a particular job on a particular device.</p>\n         <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused \n        by IoT, so be sure you get and use the correct value here.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ExecutionNumber"
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>(Optional) When true, you can delete a job execution which is \"IN_PROGRESS\". Otherwise, \n        you can only delete a job execution which is in a terminal state (\"SUCCEEDED\", \"FAILED\",\n        \"REJECTED\", \"REMOVED\" or \"CANCELED\") or an exception will occur. The default is false.</simpara>\n         <note>\n            <simpara>Deleting a job execution which is \"IN_PROGRESS\", will cause the device \n        to be unable to access job information or update the job execution status.\n        Use caution and ensure that the device is able to recover to a valid state.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>(Optional) When true, you can delete a job execution which is \"IN_PROGRESS\". Otherwise, \n        you can only delete a job execution which is in a terminal state (\"SUCCEEDED\", \"FAILED\",\n        \"REJECTED\", \"REMOVED\" or \"CANCELED\") or an exception will occur. The default is false.</p>\n         <note>\n            <p>Deleting a job execution which is \"IN_PROGRESS\", will cause the device \n        to be unable to access job information or update the job execution status.\n        Use caution and ensure that the device is able to recover to a valid state.</p>\n         </note>\n      ",
            "location": "uri",
            "shape_name": "ForceFlag"
          }
        },
        "shape_name": "DeleteJobExecutionRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</simpara>\n      ",
          "documentation": "\n         <p>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</p>\n      ",
          "shape_name": "InvalidStateTransitionException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>Deletes a job execution.</p>\n      "
    },
    "GetJobDocument": {
      "name": "GetJobDocument",
      "http": {
        "method": "GET",
        "uri": "/jobs/{jobId}/job-document"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "GetJobDocumentRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "document": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job document content.</simpara>\n      ",
            "documentation": "\n        <p>The job document content.</p>\n      ",
            "shape_name": "JobDocument",
            "max_length": 32768
          }
        },
        "shape_name": "GetJobDocumentResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Gets a job document.</p>\n      "
    },
    "DescribeJob": {
      "name": "DescribeJob",
      "http": {
        "method": "GET",
        "uri": "/jobs/{jobId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "DescribeJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "documentSource": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An S3 link to the job document.</simpara>\n      ",
            "documentation": "\n        <p>An S3 link to the job document.</p>\n      ",
            "shape_name": "JobDocumentSource",
            "min_length": 1,
            "max_length": 1350
          },
          "job": {
            "type": "structure",
            "members": {
              "jobArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>An ARN identifying the job with format \"arn:aws:iot:region:account:job/jobId\".</simpara>\n      ",
                "documentation": "\n        <p>An ARN identifying the job with format \"arn:aws:iot:region:account:job/jobId\".</p>\n      ",
                "shape_name": "JobArn"
              },
              "jobId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
                "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
                "shape_name": "JobId",
                "min_length": 1,
                "max_length": 64
              },
              "targetSelection": {
                "type": "string",
                "enum": [
                  "CONTINUOUS",
                  "SNAPSHOT"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a device when the thing representing\n            the device is added to a target group, even after the job was completed by all things originally in the \n            group. </simpara>\n      ",
                "documentation": "\n        <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a device when the thing representing\n            the device is added to a target group, even after the job was completed by all things originally in the \n            group. </p>\n      ",
                "shape_name": "TargetSelection"
              },
              "status": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "CANCELED",
                  "COMPLETED",
                  "DELETION_IN_PROGRESS"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, \n            <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. </simpara>\n      ",
                "documentation": "\n        <p>The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, \n            <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. </p>\n      ",
                "shape_name": "JobStatus"
              },
              "forceCanceled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to \n          <code>true</code>.</simpara>\n      ",
                "documentation": "\n         <p>Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to \n          <code>true</code>.</p>\n      ",
                "shape_name": "Forced"
              },
              "comment": {
                "type": "string",
                "pattern": "[^\\p{C}]+",
                "zonbookDocumentation": "\n        <simpara>If the job was updated, describes the reason for the update.</simpara>\n      ",
                "documentation": "\n        <p>If the job was updated, describes the reason for the update.</p>\n      ",
                "shape_name": "Comment",
                "max_length": 2028
              },
              "targets": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of IoT things and thing groups to which the job should be sent.</simpara>\n      ",
                "documentation": "\n        <p>A list of IoT things and thing groups to which the job should be sent.</p>\n      ",
                "shape_name": "JobTargets",
                "min_length": 1,
                "members": {
                  "type": "string",
                  "shape_name": "TargetArn",
                  "documentation": null
                }
              },
              "description": {
                "type": "string",
                "pattern": "[^\\p{C}]+",
                "zonbookDocumentation": "\n        <simpara>A short text description of the job.</simpara>\n      ",
                "documentation": "\n        <p>A short text description of the job.</p>\n      ",
                "shape_name": "JobDescription",
                "max_length": 2028
              },
              "presignedUrlConfig": {
                "type": "structure",
                "members": {
                  "roleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job\n            data/updates are stored. The role must also grant permission for IoT to download the files.</simpara>\n      ",
                    "documentation": "\n        <p>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job\n            data/updates are stored. The role must also grant permission for IoT to download the files.</p>\n      ",
                    "shape_name": "RoleArn",
                    "min_length": 20,
                    "max_length": 2048
                  },
                  "expiresInSec": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600\n            seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</simpara>\n      ",
                    "documentation": "\n        <p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600\n            seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</p>\n      ",
                    "shape_name": "ExpiresInSec",
                    "min_length": 60,
                    "max_length": 3600
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Configuration for pre-signed S3 URLs.</simpara>\n      ",
                "documentation": "\n        <p>Configuration for pre-signed S3 URLs.</p>\n      ",
                "shape_name": "PresignedUrlConfig"
              },
              "jobExecutionsRolloutConfig": {
                "type": "structure",
                "members": {
                  "maximumPerMinute": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The maximum number of things that will be notified of a pending job, per minute.\n        This parameter allows you to create a staged rollout.</simpara>\n      ",
                    "documentation": "\n         <p>The maximum number of things that will be notified of a pending job, per minute.\n        This parameter allows you to create a staged rollout.</p>\n      ",
                    "shape_name": "MaxJobExecutionsPerMin",
                    "min_length": 1,
                    "max_length": 1000
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Allows you to create a staged rollout of a job.</simpara>\n      ",
                "documentation": "\n        <p>Allows you to create a staged rollout of a job.</p>\n      ",
                "shape_name": "JobExecutionsRolloutConfig"
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job was created.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job was created.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastUpdatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job was last updated.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job was last updated.</p>\n      ",
                "shape_name": "DateType"
              },
              "completedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job was completed.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job was completed.</p>\n      ",
                "shape_name": "DateType"
              },
              "jobProcessDetails": {
                "type": "structure",
                "members": {
                  "processingTargets": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.</simpara>\n      ",
                    "documentation": "\n        <p>The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.</p>\n      ",
                    "shape_name": "ProcessingTargetNameList",
                    "members": {
                      "type": "string",
                      "shape_name": "ProcessingTargetName",
                      "documentation": null
                    }
                  },
                  "numberOfCanceledThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things that cancelled the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things that cancelled the job.</p>\n      ",
                    "shape_name": "CanceledThings"
                  },
                  "numberOfSucceededThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The number of things which successfully completed the job.</simpara>\n      ",
                    "documentation": "\n         <p>The number of things which successfully completed the job.</p>\n      ",
                    "shape_name": "SucceededThings"
                  },
                  "numberOfFailedThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things that failed executing the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things that failed executing the job.</p>\n      ",
                    "shape_name": "FailedThings"
                  },
                  "numberOfRejectedThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things that rejected the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things that rejected the job.</p>\n      ",
                    "shape_name": "RejectedThings"
                  },
                  "numberOfQueuedThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things that are awaiting execution of the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things that are awaiting execution of the job.</p>\n      ",
                    "shape_name": "QueuedThings"
                  },
                  "numberOfInProgressThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things currently executing the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things currently executing the job.</p>\n      ",
                    "shape_name": "InProgressThings"
                  },
                  "numberOfRemovedThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of things that are no longer scheduled to execute the job because they have been deleted or\n            have been removed from the group that was a target of the job.</simpara>\n      ",
                    "documentation": "\n        <p>The number of things that are no longer scheduled to execute the job because they have been deleted or\n            have been removed from the group that was a target of the job.</p>\n      ",
                    "shape_name": "RemovedThings"
                  },
                  "numberOfTimedOutThings": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>The number of things whose job execution status is <code>TIMED_OUT</code>.</para>\n      ",
                    "documentation": "\n         <p>The number of things whose job execution status is <code>TIMED_OUT</code>.</p>\n      ",
                    "shape_name": "TimedOutThings"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Details about the job process.</simpara>\n      ",
                "documentation": "\n        <p>Details about the job process.</p>\n      ",
                "shape_name": "JobProcessDetails"
              },
              "timeoutConfig": {
                "type": "structure",
                "members": {
                  "inProgressTimeoutInMinutes": {
                    "type": "long",
                    "zonbookDocumentation": "\n         <para>Specifies the amount of time, in minutes, this device has to finish execution of this job.  \n           A timer is started, or restarted, whenever this job's execution status is specified as \n           <code>IN_PROGRESS</code> with this field populated. If the job execution status is not set \n           to a terminal state before the timer expires, or before another job execution status update \n           is sent with this field populated, the status will be automatically set to <code>TIMED_OUT</code>. \n           Note that setting/resetting this timer has no effect on the job execution timeout timer which \n           may have been specified when the job was created (<code>CreateJobExecution</code> using the \n           field <code>timeoutConfig</code>).</para>\n      ",
                    "documentation": "\n         <p>Specifies the amount of time, in minutes, this device has to finish execution of this job.  \n           A timer is started, or restarted, whenever this job's execution status is specified as \n           <code>IN_PROGRESS</code> with this field populated. If the job execution status is not set \n           to a terminal state before the timer expires, or before another job execution status update \n           is sent with this field populated, the status will be automatically set to <code>TIMED_OUT</code>. \n           Note that setting/resetting this timer has no effect on the job execution timeout timer which \n           may have been specified when the job was created (<code>CreateJobExecution</code> using the \n           field <code>timeoutConfig</code>).</p>\n      ",
                    "shape_name": "InProgressTimeoutInMinutes"
                  }
                },
                "zonbookDocumentation": "\n         <para>Specifies the amount of time each device has to finish its execution of the job.  A timer \n           is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job \n           execution status is not set to another terminal state before the timer expires, it will\n           be automatically set to <code>TIMED_OUT</code>.</para>\n      ",
                "documentation": "\n         <p>Specifies the amount of time each device has to finish its execution of the job.  A timer \n           is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job \n           execution status is not set to another terminal state before the timer expires, it will\n           be automatically set to <code>TIMED_OUT</code>.</p>\n      ",
                "shape_name": "TimeoutConfig"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the job.</simpara>\n      ",
            "documentation": "\n        <p>Information about the job.</p>\n      ",
            "shape_name": "Job"
          }
        },
        "shape_name": "DescribeJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Describes a job.</p>\n      "
    },
    "CancelJob": {
      "name": "CancelJob",
      "http": {
        "method": "PUT",
        "uri": "/jobs/{jobId}/cancel?force={force}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "comment": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>An optional comment string describing why the job was canceled.</simpara>\n      ",
            "documentation": "\n        <p>An optional comment string describing why the job was canceled.</p>\n      ",
            "shape_name": "Comment",
            "max_length": 2028
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>(Optional) If <code>true</code> job executions with status \"IN_PROGRESS\" and \"QUEUED\" \n          are canceled, otherwise only job executions with status \"QUEUED\" are canceled. The default \n          is <code>false</code>.</simpara>\n        <simpara>Canceling a job which is \"IN_PROGRESS\", will cause a device which is executing \n          the job to be unable to update the job execution status.  Use caution and ensure that each \n          device executing a job which is canceled is able to recover to a valid state.</simpara>\n      ",
            "documentation": "\n         <p>(Optional) If <code>true</code> job executions with status \"IN_PROGRESS\" and \"QUEUED\" \n          are canceled, otherwise only job executions with status \"QUEUED\" are canceled. The default \n          is <code>false</code>.</p>\n        <p>Canceling a job which is \"IN_PROGRESS\", will cause a device which is executing \n          the job to be unable to update the job execution status.  Use caution and ensure that each \n          device executing a job which is canceled is able to recover to a valid state.</p>\n      ",
            "location": "uri",
            "shape_name": "ForceFlag"
          }
        },
        "shape_name": "CancelJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job ARN.</simpara>\n      ",
            "documentation": "\n        <p>The job ARN.</p>\n      ",
            "shape_name": "JobArn"
          },
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>A short text description of the job.</simpara>\n      ",
            "documentation": "\n        <p>A short text description of the job.</p>\n      ",
            "shape_name": "JobDescription",
            "max_length": 2028
          }
        },
        "shape_name": "CancelJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Cancels a job.</p>\n      "
    },
    "CancelJobExecution": {
      "name": "CancelJobExecution",
      "http": {
        "method": "PUT",
        "uri": "/things/{thingName}/jobs/{jobId}/cancel?force={force}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n         <simpara>The ID of the job to be canceled.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job to be canceled.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <simpara>The name of the thing whose execution of the job will be canceled.</simpara>\n      ",
            "documentation": "\n         <p>The name of the thing whose execution of the job will be canceled.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "force": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>(Optional) If <code>true</code> the job execution will be canceled if it has status \n          IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status \n          QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set \n          <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code> \n          will be thrown. The default is <code>false</code>.</simpara>\n        <simpara>Canceling a job execution which is \"IN_PROGRESS\", will cause the device to be unable \n          to update the job execution status.  Use caution and ensure that the device is able to \n          recover to a valid state.</simpara>\n      ",
            "documentation": "\n         <p>(Optional) If <code>true</code> the job execution will be canceled if it has status \n          IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status \n          QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set \n          <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code> \n          will be thrown. The default is <code>false</code>.</p>\n        <p>Canceling a job execution which is \"IN_PROGRESS\", will cause the device to be unable \n          to update the job execution status.  Use caution and ensure that the device is able to \n          recover to a valid state.</p>\n      ",
            "location": "uri",
            "shape_name": "ForceFlag"
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>(Optional) The expected current version of the job execution. Each time you update the job \n          execution, its version is incremented. If the version of the job execution stored in Jobs does \n          not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that \n          contains the current job execution status data is returned. (This makes it unnecessary to \n          perform a separate DescribeJobExecution request in order to obtain the job execution status \n          data.)</simpara>\n      ",
            "documentation": "\n         <p>(Optional) The expected current version of the job execution. Each time you update the job \n          execution, its version is incremented. If the version of the job execution stored in Jobs does \n          not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that \n          contains the current job execution status data is returned. (This makes it unnecessary to \n          perform a separate DescribeJobExecution request in order to obtain the job execution status \n          data.)</p>\n      ",
            "shape_name": "ExpectedVersion"
          },
          "statusDetails": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>A collection of name/value pairs that describe the status of the job execution. If not \n          specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.</simpara>\n      ",
            "documentation": "\n         <p>A collection of name/value pairs that describe the status of the job execution. If not \n          specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.</p>\n      ",
            "shape_name": "DetailsMap",
            "keys": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "DetailsKey",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            },
            "members": {
              "type": "string",
              "pattern": "[^\\p{C}]*+",
              "shape_name": "DetailsValue",
              "documentation": null,
              "min_length": 1,
              "max_length": 1024
            }
          }
        },
        "shape_name": "CancelJobExecutionRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</simpara>\n      ",
          "documentation": "\n         <p>An attempt was made to change to an invalid state, for example by deleting a\n        job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> \n        parameter.</p>\n      ",
          "shape_name": "InvalidStateTransitionException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        }
      ],
      "documentation": "\n         <p>Cancels the execution of a job for a given thing.</p>\n      "
    },
    "ListJobs": {
      "name": "ListJobs",
      "http": {
        "method": "GET",
        "uri": "/jobs?status={status}&targetSelection={targetSelection}&maxResults={maxResults}&nextToken={nextToken}&thingGroupName={thingGroupName}&thingGroupId={thingGroupId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "CANCELED",
              "COMPLETED",
              "DELETION_IN_PROGRESS"
            ],
            "zonbookDocumentation": "\n        <simpara>An optional filter that lets you search for jobs that have the specified status.</simpara>\n      ",
            "documentation": "\n        <p>An optional filter that lets you search for jobs that have the specified status.</p>\n      ",
            "location": "uri",
            "shape_name": "JobStatus"
          },
          "targetSelection": {
            "type": "string",
            "enum": [
              "CONTINUOUS",
              "SNAPSHOT"
            ],
            "zonbookDocumentation": "\n        <simpara>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group. </simpara>\n      ",
            "documentation": "\n        <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group. </p>\n      ",
            "location": "uri",
            "shape_name": "TargetSelection"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to return per request.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to return per request.</p>\n      ",
            "location": "uri",
            "shape_name": "LaserMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token to retrieve the next set of results.</simpara>\n      ",
            "documentation": "\n        <p>The token to retrieve the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "thingGroupName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <simpara>A filter that limits the returned jobs to those for the specified group.</simpara>\n      ",
            "documentation": "\n         <p>A filter that limits the returned jobs to those for the specified group.</p>\n      ",
            "location": "uri",
            "shape_name": "ThingGroupName",
            "min_length": 1,
            "max_length": 128
          },
          "thingGroupId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n         <simpara>A filter that limits the returned jobs to those for the specified group.</simpara>\n      ",
            "documentation": "\n         <p>A filter that limits the returned jobs to those for the specified group.</p>\n      ",
            "location": "uri",
            "shape_name": "ThingGroupId",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "ListJobsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobs": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of jobs.</simpara>\n      ",
            "documentation": "\n        <p>A list of jobs.</p>\n      ",
            "shape_name": "JobSummaryList",
            "members": {
              "type": "structure",
              "members": {
                "jobArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The job ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The job ARN.</p>\n      ",
                  "shape_name": "JobArn"
                },
                "jobId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_-]+",
                  "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
                  "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
                  "shape_name": "JobId",
                  "min_length": 1,
                  "max_length": 64
                },
                "thingGroupId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n        <simpara>The ID of the thing group.</simpara>\n      ",
                  "documentation": "\n        <p>The ID of the thing group.</p>\n      ",
                  "shape_name": "ThingGroupId",
                  "min_length": 1,
                  "max_length": 128
                },
                "targetSelection": {
                  "type": "string",
                  "enum": [
                    "CONTINUOUS",
                    "SNAPSHOT"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group.</simpara>\n      ",
                  "documentation": "\n        <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things\n            specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing\n            when a change is detected in a target. For example, a job will run on a thing when the thing is added to a\n            target group, even after the job was completed by all things originally in the group.</p>\n      ",
                  "shape_name": "TargetSelection"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_PROGRESS",
                    "CANCELED",
                    "COMPLETED",
                    "DELETION_IN_PROGRESS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The job summary status.</simpara>\n      ",
                  "documentation": "\n        <p>The job summary status.</p>\n      ",
                  "shape_name": "JobStatus"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job was created.</simpara>\n      ",
                  "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job was created.</p>\n      ",
                  "shape_name": "DateType"
                },
                "lastUpdatedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job was last updated.</simpara>\n      ",
                  "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job was last updated.</p>\n      ",
                  "shape_name": "DateType"
                },
                "completedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job completed.</simpara>\n      ",
                  "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job completed.</p>\n      ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n        <simpara>The job summary.</simpara>\n      ",
              "documentation": "\n        <p>The job summary.</p>\n      ",
              "shape_name": "JobSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token for the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n            additional results.</simpara>\n      ",
            "documentation": "\n        <p>The token for the next set of results, or <b>null</b> if there are no\n            additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListJobsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Lists jobs.</p>\n      "
    },
    "ListJobExecutionsForJob": {
      "name": "ListJobExecutionsForJob",
      "http": {
        "method": "GET",
        "uri": "/jobs/{jobId}/things?status={status}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "IN_PROGRESS",
              "SUCCEEDED",
              "FAILED",
              "TIMED_OUT",
              "REJECTED",
              "REMOVED",
              "CANCELED"
            ],
            "zonbookDocumentation": "\n        <simpara>The status of the job.</simpara>\n      ",
            "documentation": "\n        <p>The status of the job.</p>\n      ",
            "location": "uri",
            "shape_name": "JobExecutionStatus"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to be returned per request.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to be returned per request.</p>\n      ",
            "location": "uri",
            "shape_name": "LaserMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token to retrieve the next set of results.</simpara>\n      ",
            "documentation": "\n        <p>The token to retrieve the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListJobExecutionsForJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "executionSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of job execution summaries.</simpara>\n      ",
            "documentation": "\n        <p>A list of job execution summaries.</p>\n      ",
            "shape_name": "JobExecutionSummaryForJobList",
            "members": {
              "type": "structure",
              "members": {
                "thingArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The ARN of the thing on which the job execution is running.</simpara>\n      ",
                  "documentation": "\n        <p>The ARN of the thing on which the job execution is running.</p>\n      ",
                  "shape_name": "ThingArn"
                },
                "jobExecutionSummary": {
                  "type": "structure",
                  "members": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "QUEUED",
                        "IN_PROGRESS",
                        "SUCCEEDED",
                        "FAILED",
                        "TIMED_OUT",
                        "REJECTED",
                        "REMOVED",
                        "CANCELED"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The status of the job execution.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the job execution.</p>\n      ",
                      "shape_name": "JobExecutionStatus"
                    },
                    "queuedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was queued.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was queued.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "startedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution started.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution started.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "lastUpdatedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was last updated.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was last updated.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "executionNumber": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used later in commands which return or update job execution\n            information.</simpara>\n      ",
                      "documentation": "\n        <p>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used later in commands which return or update job execution\n            information.</p>\n      ",
                      "shape_name": "ExecutionNumber"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Contains a subset of information about a job execution.</simpara>\n      ",
                  "documentation": "\n        <p>Contains a subset of information about a job execution.</p>\n      ",
                  "shape_name": "JobExecutionSummary"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Contains a summary of information about job executions for a specific job.</simpara>\n      ",
              "documentation": "\n        <p>Contains a summary of information about job executions for a specific job.</p>\n      ",
              "shape_name": "JobExecutionSummaryForJob"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token for the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n            additional results.</simpara>\n      ",
            "documentation": "\n        <p>The token for the next set of results, or <b>null</b> if there are no\n            additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListJobExecutionsForJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Lists the job executions for a job.</p>\n      "
    },
    "ListJobExecutionsForThing": {
      "name": "ListJobExecutionsForThing",
      "http": {
        "method": "GET",
        "uri": "/things/{thingName}/jobs?status={status}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n        <simpara>The thing name.</simpara>\n      ",
            "documentation": "\n        <p>The thing name.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "IN_PROGRESS",
              "SUCCEEDED",
              "FAILED",
              "TIMED_OUT",
              "REJECTED",
              "REMOVED",
              "CANCELED"
            ],
            "zonbookDocumentation": "\n        <simpara>An optional filter that lets you search for jobs that have the specified status.</simpara>\n      ",
            "documentation": "\n        <p>An optional filter that lets you search for jobs that have the specified status.</p>\n      ",
            "location": "uri",
            "shape_name": "JobExecutionStatus"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to be returned per request.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to be returned per request.</p>\n      ",
            "location": "uri",
            "shape_name": "LaserMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token to retrieve the next set of results.</simpara>\n      ",
            "documentation": "\n        <p>The token to retrieve the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListJobExecutionsForThingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "executionSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of job execution summaries.</simpara>\n      ",
            "documentation": "\n        <p>A list of job execution summaries.</p>\n      ",
            "shape_name": "JobExecutionSummaryForThingList",
            "members": {
              "type": "structure",
              "members": {
                "jobId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_-]+",
                  "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
                  "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
                  "shape_name": "JobId",
                  "min_length": 1,
                  "max_length": 64
                },
                "jobExecutionSummary": {
                  "type": "structure",
                  "members": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "QUEUED",
                        "IN_PROGRESS",
                        "SUCCEEDED",
                        "FAILED",
                        "TIMED_OUT",
                        "REJECTED",
                        "REMOVED",
                        "CANCELED"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The status of the job execution.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the job execution.</p>\n      ",
                      "shape_name": "JobExecutionStatus"
                    },
                    "queuedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was queued.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was queued.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "startedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution started.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution started.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "lastUpdatedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was last updated.</simpara>\n      ",
                      "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was last updated.</p>\n      ",
                      "shape_name": "DateType"
                    },
                    "executionNumber": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used later in commands which return or update job execution\n            information.</simpara>\n      ",
                      "documentation": "\n        <p>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used later in commands which return or update job execution\n            information.</p>\n      ",
                      "shape_name": "ExecutionNumber"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Contains a subset of information about a job execution.</simpara>\n      ",
                  "documentation": "\n        <p>Contains a subset of information about a job execution.</p>\n      ",
                  "shape_name": "JobExecutionSummary"
                }
              },
              "zonbookDocumentation": "\n        <simpara>The job execution summary for a thing.</simpara>\n      ",
              "documentation": "\n        <p>The job execution summary for a thing.</p>\n      ",
              "shape_name": "JobExecutionSummaryForThing"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token for the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n            additional results.</simpara>\n      ",
            "documentation": "\n        <p>The token for the next set of results, or <b>null</b> if there are no\n            additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListJobExecutionsForThingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Lists the job executions for the specified thing.</p>\n      "
    },
    "DescribeJobExecution": {
      "name": "DescribeJobExecution",
      "http": {
        "method": "GET",
        "uri": "/things/{thingName}/jobs/{jobId}?executionNumber={executionNumber}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n        <simpara>The name of the thing on which the job execution is running.</simpara>\n      ",
            "documentation": "\n        <p>The name of the thing on which the job execution is running.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "executionNumber": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>A string (consisting of the digits \"0\" through \"9\" which is used to specify a particular job execution\n            on a particular device.</simpara>\n      ",
            "documentation": "\n        <p>A string (consisting of the digits \"0\" through \"9\" which is used to specify a particular job execution\n            on a particular device.</p>\n      ",
            "location": "uri",
            "shape_name": "ExecutionNumber"
          }
        },
        "shape_name": "DescribeJobExecutionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "execution": {
            "type": "structure",
            "members": {
              "jobId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to the job when it was created.</simpara>\n      ",
                "documentation": "\n        <p>The unique identifier you assigned to the job when it was created.</p>\n      ",
                "shape_name": "JobId",
                "min_length": 1,
                "max_length": 64
              },
              "status": {
                "type": "string",
                "enum": [
                  "QUEUED",
                  "IN_PROGRESS",
                  "SUCCEEDED",
                  "FAILED",
                  "TIMED_OUT",
                  "REJECTED",
                  "REMOVED",
                  "CANCELED"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, \n            CANCELED, or REJECTED).</simpara>\n      ",
                "documentation": "\n        <p>The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, \n            CANCELED, or REJECTED).</p>\n      ",
                "shape_name": "JobExecutionStatus"
              },
              "forceCanceled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> \n          parameter set to <code>true</code>.</simpara>\n      ",
                "documentation": "\n         <p>Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> \n          parameter set to <code>true</code>.</p>\n      ",
                "shape_name": "Forced"
              },
              "statusDetails": {
                "type": "structure",
                "members": {
                  "detailsMap": {
                    "type": "map",
                    "zonbookDocumentation": "\n         <simpara>The job execution status.</simpara>\n      ",
                    "documentation": "\n         <p>The job execution status.</p>\n      ",
                    "shape_name": "DetailsMap",
                    "keys": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9:_-]+",
                      "shape_name": "DetailsKey",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 128
                    },
                    "members": {
                      "type": "string",
                      "pattern": "[^\\p{C}]*+",
                      "shape_name": "DetailsValue",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 1024
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>A collection of name/value pairs that describe the status of the job execution.</simpara>\n      ",
                "documentation": "\n        <p>A collection of name/value pairs that describe the status of the job execution.</p>\n      ",
                "shape_name": "JobExecutionStatusDetails"
              },
              "thingArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of the thing on which the job execution is running.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of the thing on which the job execution is running.</p>\n      ",
                "shape_name": "ThingArn"
              },
              "queuedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was queued.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was queued.</p>\n      ",
                "shape_name": "DateType"
              },
              "startedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution started.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution started.</p>\n      ",
                "shape_name": "DateType"
              },
              "lastUpdatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The time, in milliseconds since the epoch, when the job execution was last updated.</simpara>\n      ",
                "documentation": "\n        <p>The time, in milliseconds since the epoch, when the job execution was last updated.</p>\n      ",
                "shape_name": "DateType"
              },
              "executionNumber": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used in commands which return or update job execution information.\n        </simpara>\n      ",
                "documentation": "\n        <p>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on\n            this particular device. It can be used in commands which return or update job execution information.\n        </p>\n      ",
                "shape_name": "ExecutionNumber"
              },
              "versionNumber": {
                "type": "long",
                "zonbookDocumentation": "\n         <simpara>The version of the job execution. Job execution versions are incremented each time they are updated\n      by a device.</simpara>\n      ",
                "documentation": "\n         <p>The version of the job execution. Job execution versions are incremented each time they are updated\n      by a device.</p>\n      ",
                "shape_name": "VersionNumber"
              },
              "approximateSecondsBeforeTimedOut": {
                "type": "long",
                "zonbookDocumentation": "\n         <para>The estimated number of seconds that remain before the job execution status will be\n           changed to <code>TIMED_OUT</code>.</para>\n      ",
                "documentation": "\n         <p>The estimated number of seconds that remain before the job execution status will be\n           changed to <code>TIMED_OUT</code>.</p>\n      ",
                "shape_name": "ApproximateSecondsBeforeTimedOut"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the job execution.</simpara>\n      ",
            "documentation": "\n        <p>Information about the job execution.</p>\n      ",
            "shape_name": "JobExecution"
          }
        },
        "shape_name": "DescribeJobExecutionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Describes a job execution.</p>\n      "
    },
    "AssociateTargetsWithJob": {
      "name": "AssociateTargetsWithJob",
      "http": {
        "method": "POST",
        "uri": "/jobs/{jobId}/targets"
      },
      "input": {
        "type": "structure",
        "members": {
          "targets": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of thing group ARNs that define the targets of the job.</simpara>\n      ",
            "documentation": "\n        <p>A list of thing group ARNs that define the targets of the job.</p>\n      ",
            "required": true,
            "shape_name": "JobTargets",
            "min_length": 1,
            "members": {
              "type": "string",
              "shape_name": "TargetArn",
              "documentation": null
            }
          },
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "comment": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>An optional comment string describing why the job was associated with the targets.</simpara>\n      ",
            "documentation": "\n        <p>An optional comment string describing why the job was associated with the targets.</p>\n      ",
            "shape_name": "Comment",
            "max_length": 2028
          }
        },
        "shape_name": "AssociateTargetsWithJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An ARN identifying the job.</simpara>\n      ",
            "documentation": "\n        <p>An ARN identifying the job.</p>\n      ",
            "shape_name": "JobArn"
          },
          "jobId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n        <simpara>The unique identifier you assigned to this job when it was created.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifier you assigned to this job when it was created.</p>\n      ",
            "shape_name": "JobId",
            "min_length": 1,
            "max_length": 64
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n        <simpara>A short text description of the job.</simpara>\n      ",
            "documentation": "\n        <p>A short text description of the job.</p>\n      ",
            "shape_name": "JobDescription",
            "max_length": 2028
          }
        },
        "shape_name": "AssociateTargetsWithJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n        <p>Associates a group with a continuous job. The following criteria must be met: </p>\n        <ul>\n            <li>\n                <p>The job must have been created with the <code>targetSelection</code> field set to\n                    \"CONTINUOUS\".</p>\n            </li>\n            <li>\n                <p>The job status must currently be \"IN_PROGRESS\".</p>\n            </li>\n            <li>\n                <p>The total number of targets associated with a job must not exceed 100.</p>\n            </li>\n         </ul>\n      "
    },
    "DescribeIndex": {
      "name": "DescribeIndex",
      "http": {
        "method": "GET",
        "uri": "/indices/{indexName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "indexName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The index name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The index name.</p>\n\t     ",
            "location": "uri",
            "required": true,
            "shape_name": "IndexName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeIndexRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "indexName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The index name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The index name.</p>\n\t     ",
            "shape_name": "IndexName",
            "min_length": 1,
            "max_length": 128
          },
          "indexStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "BUILDING",
              "REBUILDING"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The index status.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The index status.</p>\n\t     ",
            "shape_name": "IndexStatus"
          },
          "schema": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>Contains a value that specifies the type of indexing performed. Valid values are:</simpara>\n\t\t       <orderedlist>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY – Your thing index will contain only registry data.</simpara>\n\t\t\t         </listitem>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</simpara>\n\t\t\t         </listitem>\n\t\t       </orderedlist>\n\t     ",
            "documentation": "\n\t\t       <p>Contains a value that specifies the type of indexing performed. Valid values are:</p>\n\t\t       <ol>\n            <li>\n\t\t\t\t           <p>REGISTRY – Your thing index will contain only registry data.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</p>\n\t\t\t         </li>\n         </ol>\n\t     ",
            "shape_name": "IndexSchema"
          }
        },
        "shape_name": "DescribeIndexResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Describes a search index.</p>\n\t     "
    },
    "ListIndices": {
      "name": "ListIndices",
      "http": {
        "method": "GET",
        "uri": "/indices?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "QueryMaxResults",
            "min_length": 1,
            "max_length": 500
          }
        },
        "shape_name": "ListIndicesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "indexNames": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The index names.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The index names.</p>\n\t     ",
            "shape_name": "IndexNamesList",
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9:_-]+",
              "shape_name": "IndexName",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListIndicesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the search indices.</p>\n\t     "
    },
    "SearchIndex": {
      "name": "SearchIndex",
      "http": {
        "method": "POST",
        "uri": "/indices/search"
      },
      "input": {
        "type": "structure",
        "members": {
          "indexName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The search index name.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The search index name.</p>\n\t     ",
            "shape_name": "IndexName",
            "min_length": 1,
            "max_length": 128
          },
          "queryString": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The search query string.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The search query string.</p>\n\t     ",
            "required": true,
            "shape_name": "QueryString",
            "min_length": 1
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "shape_name": "QueryMaxResults",
            "min_length": 1,
            "max_length": 500
          },
          "queryVersion": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The query version.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The query version.</p>\n\t     ",
            "shape_name": "QueryVersion"
          }
        },
        "shape_name": "SearchIndexRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          },
          "things": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>The things that match the search query.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The things that match the search query.</p>\n\t     ",
            "shape_name": "ThingDocumentList",
            "members": {
              "type": "structure",
              "members": {
                "thingName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The thing name.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing name.</p>\n\t     ",
                  "shape_name": "ThingName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The thing ID.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing ID.</p>\n\t     ",
                  "shape_name": "ThingId"
                },
                "thingTypeName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <simpara>The thing type name.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing type name.</p>\n\t     ",
                  "shape_name": "ThingTypeName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingGroupNames": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <simpara>Thing group names.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>Thing group names.</p>\n\t     ",
                  "shape_name": "ThingGroupNameList",
                  "members": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9:_-]+",
                    "shape_name": "ThingGroupName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "attributes": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <simpara>The attributes.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The attributes.</p>\n\t     ",
                  "shape_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                    "shape_name": "AttributeName",
                    "documentation": null,
                    "max_length": 128
                  },
                  "members": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                    "shape_name": "AttributeValue",
                    "documentation": null,
                    "max_length": 800
                  }
                },
                "shadow": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <simpara>The shadow.</simpara>\n\t     ",
                  "documentation": "\n\t\t       <p>The shadow.</p>\n\t     ",
                  "shape_name": "JsonDocument"
                }
              },
              "zonbookDocumentation": "\n\t\t       <simpara>The thing search index document.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The thing search index document.</p>\n\t     ",
              "shape_name": "ThingDocument"
            }
          },
          "thingGroups": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The thing groups that match the search query.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The thing groups that match the search query.</p>\n\t     ",
            "shape_name": "ThingGroupDocumentList",
            "members": {
              "type": "structure",
              "members": {
                "thingGroupName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n\t\t       <para>The thing group name.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing group name.</p>\n\t     ",
                  "shape_name": "ThingGroupName",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingGroupId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n\t\t       <para>The thing group ID.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing group ID.</p>\n\t     ",
                  "shape_name": "ThingGroupId",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingGroupDescription": {
                  "type": "string",
                  "pattern": "[\\p{Graph}\\x20]*",
                  "zonbookDocumentation": "\n\t\t       <para>The thing group description.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing group description.</p>\n\t     ",
                  "shape_name": "ThingGroupDescription",
                  "max_length": 2028
                },
                "attributes": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <para>The thing group attributes.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The thing group attributes.</p>\n\t     ",
                  "shape_name": "Attributes",
                  "keys": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]+",
                    "shape_name": "AttributeName",
                    "documentation": null,
                    "max_length": 128
                  },
                  "members": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9_.,@/:#-]*",
                    "shape_name": "AttributeValue",
                    "documentation": null,
                    "max_length": 800
                  }
                },
                "parentGroupNames": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>Parent group names.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Parent group names.</p>\n\t     ",
                  "shape_name": "ThingGroupNameList",
                  "members": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9:_-]+",
                    "shape_name": "ThingGroupName",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 128
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>The thing group search index document.</para>\n\t     ",
              "documentation": "\n\t\t       <p>The thing group search index document.</p>\n\t     ",
              "shape_name": "ThingGroupDocument"
            }
          }
        },
        "shape_name": "SearchIndexResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara>The message for the exception.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The message for the exception.</p>\n\t     ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The query is invalid.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The query is invalid.</p>\n\t     ",
          "shape_name": "InvalidQueryException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <simpara>The message for the exception.</simpara>\n\t     ",
              "documentation": "\n\t\t       <p>The message for the exception.</p>\n\t     ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n\t\t       <simpara>The index is not ready.</simpara>\n\t     ",
          "documentation": "\n\t\t       <p>The index is not ready.</p>\n\t     ",
          "shape_name": "IndexNotReadyException"
        }
      ],
      "documentation": "\n\t\t       <p>The query search index.</p>\n\t     "
    },
    "UpdateIndexingConfiguration": {
      "name": "UpdateIndexingConfiguration",
      "http": {
        "method": "POST",
        "uri": "/indexing/config"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingIndexingConfiguration": {
            "type": "structure",
            "members": {
              "thingIndexingMode": {
                "type": "string",
                "enum": [
                  "OFF",
                  "REGISTRY",
                  "REGISTRY_AND_SHADOW"
                ],
                "zonbookDocumentation": "\n\t\t       <simpara>Thing indexing mode. Valid values are: </simpara>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY – Your thing index will contain only registry data.</simpara>\n\t\t\t         </listitem>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</simpara>\n\t\t\t         </listitem>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>OFF - Thing indexing is disabled.</simpara>\n\t\t\t         </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Thing indexing mode. Valid values are: </p>\n\t\t       <ul>\n            <li>\n\t\t\t\t           <p>REGISTRY – Your thing index will contain only registry data.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>OFF - Thing indexing is disabled.</p>\n\t\t\t         </li>\n         </ul>\n\t     ",
                "required": true,
                "shape_name": "ThingIndexingMode"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>Thing indexing configuration.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Thing indexing configuration.</p>\n\t     ",
            "shape_name": "ThingIndexingConfiguration"
          },
          "thingGroupIndexingConfiguration": {
            "type": "structure",
            "members": {
              "thingGroupIndexingMode": {
                "type": "string",
                "enum": [
                  "OFF",
                  "ON"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Thing group indexing mode.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Thing group indexing mode.</p>\n\t     ",
                "required": true,
                "shape_name": "ThingGroupIndexingMode"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Thing group indexing configuration.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Thing group indexing configuration.</p>\n\t     ",
            "shape_name": "ThingGroupIndexingConfiguration"
          }
        },
        "shape_name": "UpdateIndexingConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateIndexingConfigurationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates the search configuration.</p>\n\t     "
    },
    "GetIndexingConfiguration": {
      "name": "GetIndexingConfiguration",
      "http": {
        "method": "GET",
        "uri": "/indexing/config"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "GetIndexingConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "thingIndexingConfiguration": {
            "type": "structure",
            "members": {
              "thingIndexingMode": {
                "type": "string",
                "enum": [
                  "OFF",
                  "REGISTRY",
                  "REGISTRY_AND_SHADOW"
                ],
                "zonbookDocumentation": "\n\t\t       <simpara>Thing indexing mode. Valid values are: </simpara>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY – Your thing index will contain only registry data.</simpara>\n\t\t\t         </listitem>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</simpara>\n\t\t\t         </listitem>\n\t\t\t         <listitem>\n\t\t\t\t           <simpara>OFF - Thing indexing is disabled.</simpara>\n\t\t\t         </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Thing indexing mode. Valid values are: </p>\n\t\t       <ul>\n            <li>\n\t\t\t\t           <p>REGISTRY – Your thing index will contain only registry data.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>OFF - Thing indexing is disabled.</p>\n\t\t\t         </li>\n         </ul>\n\t     ",
                "required": true,
                "shape_name": "ThingIndexingMode"
              }
            },
            "zonbookDocumentation": "\n\t\t       <simpara>Thing indexing configuration.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>Thing indexing configuration.</p>\n\t     ",
            "shape_name": "ThingIndexingConfiguration"
          },
          "thingGroupIndexingConfiguration": {
            "type": "structure",
            "members": {
              "thingGroupIndexingMode": {
                "type": "string",
                "enum": [
                  "OFF",
                  "ON"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Thing group indexing mode.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Thing group indexing mode.</p>\n\t     ",
                "required": true,
                "shape_name": "ThingGroupIndexingMode"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The index configuration.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The index configuration.</p>\n\t     ",
            "shape_name": "ThingGroupIndexingConfiguration"
          }
        },
        "shape_name": "GetIndexingConfigurationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets the search configuration.</p>\n\t     "
    },
    "RegisterThing": {
      "name": "RegisterThing",
      "http": {
        "method": "POST",
        "uri": "/things"
      },
      "input": {
        "type": "structure",
        "members": {
          "templateBody": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The provisioning template.  See <ulink type=\"documentation\" url=\"iot/latest/developerguide/programmatic-provisioning.html\">Programmatic Provisioning</ulink> for more \n            information.</simpara>\n      ",
            "documentation": "\n         <p>The provisioning template.  See <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html\">Programmatic Provisioning</a> for more \n            information.</p>\n      ",
            "required": true,
            "shape_name": "TemplateBody"
          },
          "parameters": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>The parameters for provisioning a thing.  See <ulink type=\"documentation\" url=\"iot/latest/developerguide/programmatic-provisioning.html\">Programmatic Provisioning</ulink> for more \n            information.</simpara>\n      ",
            "documentation": "\n         <p>The parameters for provisioning a thing.  See <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html\">Programmatic Provisioning</a> for more \n            information.</p>\n      ",
            "shape_name": "Parameters",
            "keys": {
              "type": "string",
              "shape_name": "Parameter",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "Value",
              "documentation": null
            }
          }
        },
        "shape_name": "RegisterThingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "certificatePem": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>.</simpara>\n      ",
            "documentation": "\n         <p>.</p>\n      ",
            "shape_name": "CertificatePem",
            "min_length": 1,
            "max_length": 65536
          },
          "resourceArns": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>ARNs for the generated resources.</simpara>\n      ",
            "documentation": "\n         <p>ARNs for the generated resources.</p>\n      ",
            "shape_name": "ResourceArns",
            "keys": {
              "type": "string",
              "shape_name": "ResourceLogicalId",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "ResourceArn",
              "documentation": null
            }
          }
        },
        "shape_name": "RegisterThingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A conflicting resource update exception. This exception is thrown when two pending updates cause a\n         conflict.</simpara>\n      ",
          "documentation": "\n         <p>A conflicting resource update exception. This exception is thrown when two pending updates cause a\n         conflict.</p>\n      ",
          "shape_name": "ConflictingResourceUpdateException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The resource registration failed.</para>\n      ",
          "documentation": "\n         <p>The resource registration failed.</p>\n      ",
          "shape_name": "ResourceRegistrationFailureException"
        }
      ],
      "documentation": "\n         <p>Provisions a thing.</p>\n      "
    },
    "StartThingRegistrationTask": {
      "name": "StartThingRegistrationTask",
      "http": {
        "method": "POST",
        "uri": "/thing-registration-tasks"
      },
      "input": {
        "type": "structure",
        "members": {
          "templateBody": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The provisioning template.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The provisioning template.</p>\n\t     ",
            "required": true,
            "shape_name": "TemplateBody"
          },
          "inputFileBucket": {
            "type": "string",
            "pattern": "[a-zA-Z0-9._-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The S3 bucket that contains the input file.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The S3 bucket that contains the input file.</p>\n\t     ",
            "required": true,
            "shape_name": "RegistryS3BucketName",
            "min_length": 3,
            "max_length": 256
          },
          "inputFileKey": {
            "type": "string",
            "pattern": "[a-zA-Z0-9!_.*'()-\\/]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each\n\t\t\tline contains the parameter values to provision one device (thing).</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each\n\t\t\tline contains the parameter values to provision one device (thing).</p>\n\t     ",
            "required": true,
            "shape_name": "RegistryS3KeyName",
            "min_length": 1,
            "max_length": 1024
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The IAM role ARN that grants permission the input file.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The IAM role ARN that grants permission the input file.</p>\n\t     ",
            "required": true,
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          }
        },
        "shape_name": "StartThingRegistrationTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The bulk thing provisioning task ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The bulk thing provisioning task ID.</p>\n\t     ",
            "shape_name": "TaskId",
            "max_length": 40
          }
        },
        "shape_name": "StartThingRegistrationTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a bulk thing provisioning task.</p>\n\t     "
    },
    "DescribeThingRegistrationTask": {
      "name": "DescribeThingRegistrationTask",
      "http": {
        "method": "GET",
        "uri": "/thing-registration-tasks/{taskId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The task ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The task ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "TaskId",
            "max_length": 40
          }
        },
        "shape_name": "DescribeThingRegistrationTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The task ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The task ID.</p>\n\t     ",
            "shape_name": "TaskId",
            "max_length": 40
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The task creation date.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The task creation date.</p>\n\t     ",
            "shape_name": "CreationDate"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <simpara>The date when the task was last modified.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The date when the task was last modified.</p>\n\t     ",
            "shape_name": "LastModifiedDate"
          },
          "templateBody": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The task's template.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The task's template.</p>\n\t     ",
            "shape_name": "TemplateBody"
          },
          "inputFileBucket": {
            "type": "string",
            "pattern": "[a-zA-Z0-9._-]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The S3 bucket that contains the input file.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The S3 bucket that contains the input file.</p>\n\t     ",
            "shape_name": "RegistryS3BucketName",
            "min_length": 3,
            "max_length": 256
          },
          "inputFileKey": {
            "type": "string",
            "pattern": "[a-zA-Z0-9!_.*'()-\\/]+",
            "zonbookDocumentation": "\n\t\t       <simpara>The input file key.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The input file key.</p>\n\t     ",
            "shape_name": "RegistryS3KeyName",
            "min_length": 1,
            "max_length": 1024
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The role ARN that grants access to the input file bucket.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The role ARN that grants access to the input file bucket.</p>\n\t     ",
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "status": {
            "type": "string",
            "enum": [
              "InProgress",
              "Completed",
              "Failed",
              "Cancelled",
              "Cancelling"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The status of the bulk thing provisioning task.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The status of the bulk thing provisioning task.</p>\n\t     ",
            "shape_name": "Status"
          },
          "message": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The message.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The message.</p>\n\t     ",
            "shape_name": "ErrorMessage",
            "max_length": 2048
          },
          "successCount": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The number of things successfully provisioned.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The number of things successfully provisioned.</p>\n\t     ",
            "shape_name": "Count"
          },
          "failureCount": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The number of things that failed to be provisioned.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The number of things that failed to be provisioned.</p>\n\t     ",
            "shape_name": "Count"
          },
          "percentageProgress": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The progress of the bulk provisioning task expressed as a percentage.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The progress of the bulk provisioning task expressed as a percentage.</p>\n\t     ",
            "shape_name": "Percentage",
            "min_length": 0,
            "max_length": 100
          }
        },
        "shape_name": "DescribeThingRegistrationTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Describes a bulk thing provisioning task.</p>\n\t     "
    },
    "ListThingRegistrationTasks": {
      "name": "ListThingRegistrationTasks",
      "http": {
        "method": "GET",
        "uri": "/thing-registration-tasks?maxResults={maxResults}&nextToken={nextToken}&status={status}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <simpara>The token to retrieve the next set of results.</simpara>\n\t     ",
            "documentation": "\n          <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <simpara>The maximum number of results to return at one time.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "status": {
            "type": "string",
            "enum": [
              "InProgress",
              "Completed",
              "Failed",
              "Cancelled",
              "Cancelling"
            ],
            "zonbookDocumentation": "\n\t\t       <simpara>The status of the bulk thing provisioning task.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The status of the bulk thing provisioning task.</p>\n\t     ",
            "location": "uri",
            "shape_name": "Status"
          }
        },
        "shape_name": "ListThingRegistrationTasksRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "taskIds": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <simpara>A list of bulk thing provisioning task IDs.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>A list of bulk thing provisioning task IDs.</p>\n\t     ",
            "shape_name": "TaskIdList",
            "members": {
              "type": "string",
              "shape_name": "TaskId",
              "documentation": null,
              "max_length": 40
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListThingRegistrationTasksResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>List bulk thing provisioning tasks.</p>\n\t     "
    },
    "StopThingRegistrationTask": {
      "name": "StopThingRegistrationTask",
      "http": {
        "method": "PUT",
        "uri": "/thing-registration-tasks/{taskId}/cancel"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <simpara>The bulk thing provisioning task ID.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The bulk thing provisioning task ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "TaskId",
            "max_length": 40
          }
        },
        "shape_name": "StopThingRegistrationTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "StopThingRegistrationTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Cancels a bulk thing provisioning task.</p>\n\t     "
    },
    "ListThingRegistrationTaskReports": {
      "name": "ListThingRegistrationTaskReports",
      "http": {
        "method": "GET",
        "uri": "/thing-registration-tasks/{taskId}/reports?reportType={reportType}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The id of the task.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The id of the task.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "TaskId",
            "max_length": 40
          },
          "reportType": {
            "type": "string",
            "enum": [
              "ERRORS",
              "RESULTS"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The type of task report.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The type of task report.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ReportType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The token to retrieve the next set of results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The token to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of results to return per request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return per request.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RegistryMaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListThingRegistrationTaskReportsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resourceLinks": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>Links to the task resources.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Links to the task resources.</p>\n\t     ",
            "shape_name": "S3FileUrlList",
            "members": {
              "type": "string",
              "shape_name": "S3FileUrl",
              "documentation": null,
              "max_length": 65535
            }
          },
          "reportType": {
            "type": "string",
            "enum": [
              "ERRORS",
              "RESULTS"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The type of task report.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The type of task report.</p>\n\t     ",
            "shape_name": "ReportType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The token used to get the next set of results, or <emphasis role=\"bold\">null</emphasis> if there are no\n\t\t\tadditional results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The token used to get the next set of results, or <b>null</b> if there are no\n\t\t\tadditional results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListThingRegistrationTaskReportsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Information about the thing registration tasks.</p>\n\t     "
    },
    "CreateStream": {
      "name": "CreateStream",
      "http": {
        "method": "POST",
        "uri": "/streams/{streamId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n\t\t       <para>A description of the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A description of the stream.</p>\n\t     ",
            "shape_name": "StreamDescription",
            "max_length": 2028
          },
          "files": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The files to stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The files to stream.</p>\n\t     ",
            "required": true,
            "shape_name": "StreamFiles",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "fileId": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The file ID.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The file ID.</p>\n\t     ",
                  "shape_name": "FileId",
                  "min_length": 0,
                  "max_length": 255
                },
                "s3Location": {
                  "type": "structure",
                  "members": {
                    "bucket": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 bucket.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 bucket.</p>\n\t     ",
                      "shape_name": "S3Bucket",
                      "min_length": 1
                    },
                    "key": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 key.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 key.</p>\n\t     ",
                      "shape_name": "S3Key",
                      "min_length": 1
                    },
                    "version": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 bucket version.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 bucket version.</p>\n\t     ",
                      "shape_name": "S3Version"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The location of the file in S3.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The location of the file in S3.</p>\n\t     ",
                  "shape_name": "S3Location"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Represents a file to stream.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Represents a file to stream.</p>\n\t     ",
              "shape_name": "StreamFile"
            }
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>An IAM role that allows the IoT service principal assumes to access your S3 files.</para>\n\t     ",
            "documentation": "\n\t\t       <p>An IAM role that allows the IoT service principal assumes to access your S3 files.</p>\n\t     ",
            "required": true,
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          }
        },
        "shape_name": "CreateStreamRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          },
          "streamArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The stream ARN.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ARN.</p>\n\t     ",
            "shape_name": "StreamArn"
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n\t\t       <para>A description of the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A description of the stream.</p>\n\t     ",
            "shape_name": "StreamDescription",
            "max_length": 2028
          },
          "streamVersion": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The version of the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The version of the stream.</p>\n\t     ",
            "shape_name": "StreamVersion",
            "min_length": 0,
            "max_length": 65535
          }
        },
        "shape_name": "CreateStreamResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data\n\t\t\tbytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files\n\t\t\tassociated with a stream. The total size of a file associated with the stream cannot exceed more than 2 MB.\n\t\t\tThe stream will be created with version 0. If a stream is created with the same streamID as a stream that\n\t\t\texisted and was deleted within last 90 days, we will resurrect that old stream by incrementing the version\n\t\t\tby 1.</p>\n\t     "
    },
    "UpdateStream": {
      "name": "UpdateStream",
      "http": {
        "method": "PUT",
        "uri": "/streams/{streamId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n\t\t       <para>The description of the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The description of the stream.</p>\n\t     ",
            "shape_name": "StreamDescription",
            "max_length": 2028
          },
          "files": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The files associated with the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The files associated with the stream.</p>\n\t     ",
            "shape_name": "StreamFiles",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "fileId": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The file ID.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The file ID.</p>\n\t     ",
                  "shape_name": "FileId",
                  "min_length": 0,
                  "max_length": 255
                },
                "s3Location": {
                  "type": "structure",
                  "members": {
                    "bucket": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 bucket.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 bucket.</p>\n\t     ",
                      "shape_name": "S3Bucket",
                      "min_length": 1
                    },
                    "key": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 key.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 key.</p>\n\t     ",
                      "shape_name": "S3Key",
                      "min_length": 1
                    },
                    "version": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The S3 bucket version.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The S3 bucket version.</p>\n\t     ",
                      "shape_name": "S3Version"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The location of the file in S3.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The location of the file in S3.</p>\n\t     ",
                  "shape_name": "S3Location"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Represents a file to stream.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Represents a file to stream.</p>\n\t     ",
              "shape_name": "StreamFile"
            }
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>An IAM role that allows the IoT service principal assumes to access your S3 files.</para>\n\t     ",
            "documentation": "\n\t\t       <p>An IAM role that allows the IoT service principal assumes to access your S3 files.</p>\n\t     ",
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          }
        },
        "shape_name": "UpdateStreamRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          },
          "streamArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The stream ARN.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ARN.</p>\n\t     ",
            "shape_name": "StreamArn"
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n\t\t       <para>A description of the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A description of the stream.</p>\n\t     ",
            "shape_name": "StreamDescription",
            "max_length": 2028
          },
          "streamVersion": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The stream version.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream version.</p>\n\t     ",
            "shape_name": "StreamVersion",
            "min_length": 0,
            "max_length": 65535
          }
        },
        "shape_name": "UpdateStreamResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates an existing stream. The stream version will be incremented by one.</p>\n\t     "
    },
    "DeleteStream": {
      "name": "DeleteStream",
      "http": {
        "method": "DELETE",
        "uri": "/streams/{streamId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteStreamRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteStreamResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You can't delete the resource because it is attached to one or more resources.</simpara>\n      ",
          "documentation": "\n         <p>You can't delete the resource because it is attached to one or more resources.</p>\n      ",
          "shape_name": "DeleteConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes a stream.</p>\n\t     "
    },
    "DescribeStream": {
      "name": "DescribeStream",
      "http": {
        "method": "GET",
        "uri": "/streams/{streamId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "streamId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "StreamId",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeStreamRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "streamInfo": {
            "type": "structure",
            "members": {
              "streamId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
                "shape_name": "StreamId",
                "min_length": 1,
                "max_length": 128
              },
              "streamArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The stream ARN.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The stream ARN.</p>\n\t     ",
                "shape_name": "StreamArn"
              },
              "streamVersion": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The stream version.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The stream version.</p>\n\t     ",
                "shape_name": "StreamVersion",
                "min_length": 0,
                "max_length": 65535
              },
              "description": {
                "type": "string",
                "pattern": "[^\\p{C}]+",
                "zonbookDocumentation": "\n\t\t       <para>The description of the stream.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The description of the stream.</p>\n\t     ",
                "shape_name": "StreamDescription",
                "max_length": 2028
              },
              "files": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The files to stream.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The files to stream.</p>\n\t     ",
                "shape_name": "StreamFiles",
                "min_length": 1,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "fileId": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The file ID.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The file ID.</p>\n\t     ",
                      "shape_name": "FileId",
                      "min_length": 0,
                      "max_length": 255
                    },
                    "s3Location": {
                      "type": "structure",
                      "members": {
                        "bucket": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 bucket.</p>\n\t     ",
                          "shape_name": "S3Bucket",
                          "min_length": 1
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 key.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 key.</p>\n\t     ",
                          "shape_name": "S3Key",
                          "min_length": 1
                        },
                        "version": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 bucket version.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 bucket version.</p>\n\t     ",
                          "shape_name": "S3Version"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The location of the file in S3.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The location of the file in S3.</p>\n\t     ",
                      "shape_name": "S3Location"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>Represents a file to stream.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Represents a file to stream.</p>\n\t     ",
                  "shape_name": "StreamFile"
                }
              },
              "createdAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <para>The date when the stream was created.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date when the stream was created.</p>\n\t     ",
                "shape_name": "DateType"
              },
              "lastUpdatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <para>The date when the stream was last updated.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date when the stream was last updated.</p>\n\t     ",
                "shape_name": "DateType"
              },
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>An IAM role AWS IoT assumes to access your S3 files.</para>\n\t     ",
                "documentation": "\n\t\t       <p>An IAM role AWS IoT assumes to access your S3 files.</p>\n\t     ",
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the stream.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the stream.</p>\n\t     ",
            "shape_name": "StreamInfo"
          }
        },
        "shape_name": "DescribeStreamResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about a stream.</p>\n\t     "
    },
    "ListStreams": {
      "name": "ListStreams",
      "http": {
        "method": "GET",
        "uri": "/streams?maxResults={maxResults}&nextToken={nextToken}&isAscendingOrder={ascendingOrder}"
      },
      "input": {
        "type": "structure",
        "members": {
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of results to return at a time.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at a time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A token used to get the next set of results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A token used to get the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "ascendingOrder": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>Set to true to return the list of streams in ascending order.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Set to true to return the list of streams in ascending order.</p>\n\t     ",
            "location": "uri",
            "shape_name": "AscendingOrder"
          }
        },
        "shape_name": "ListStreamsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "streams": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of streams.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of streams.</p>\n\t     ",
            "shape_name": "StreamsSummary",
            "members": {
              "type": "structure",
              "members": {
                "streamId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_-]+",
                  "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
                  "shape_name": "StreamId",
                  "min_length": 1,
                  "max_length": 128
                },
                "streamArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The stream ARN.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The stream ARN.</p>\n\t     ",
                  "shape_name": "StreamArn"
                },
                "streamVersion": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The stream version.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The stream version.</p>\n\t     ",
                  "shape_name": "StreamVersion",
                  "min_length": 0,
                  "max_length": 65535
                },
                "description": {
                  "type": "string",
                  "pattern": "[^\\p{C}]+",
                  "zonbookDocumentation": "\n\t\t       <para>A description of the stream.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A description of the stream.</p>\n\t     ",
                  "shape_name": "StreamDescription",
                  "max_length": 2028
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>A summary of a stream.</para>\n\t     ",
              "documentation": "\n\t\t       <p>A summary of a stream.</p>\n\t     ",
              "shape_name": "StreamSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A token used to get the next set of results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A token used to get the next set of results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListStreamsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists all of the streams in your AWS account.</p>\n\t     "
    },
    "CreateOTAUpdate": {
      "name": "CreateOTAUpdate",
      "http": {
        "method": "POST",
        "uri": "/otaUpdates/{otaUpdateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "otaUpdateId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the OTA update to be created.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the OTA update to be created.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "OTAUpdateId",
            "min_length": 1,
            "max_length": 128
          },
          "description": {
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "zonbookDocumentation": "\n\t\t       <para>The description of the OTA update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The description of the OTA update.</p>\n\t     ",
            "shape_name": "OTAUpdateDescription",
            "max_length": 2028
          },
          "targets": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The targeted devices to receive OTA updates.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The targeted devices to receive OTA updates.</p>\n\t     ",
            "required": true,
            "shape_name": "Targets",
            "min_length": 1,
            "members": {
              "type": "string",
              "shape_name": "Target",
              "documentation": null
            }
          },
          "targetSelection": {
            "type": "string",
            "enum": [
              "CONTINUOUS",
              "SNAPSHOT"
            ],
            "zonbookDocumentation": "\n\t\t       <para>Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things\n\t\t\tspecified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a\n\t\t\tthing when a change is detected in a target. For example, an update will run on a thing when the thing is\n\t\t\tadded to a target group, even after the update was completed by all things originally in the group. Valid\n\t\t\tvalues: CONTINUOUS | SNAPSHOT.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things\n\t\t\tspecified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a\n\t\t\tthing when a change is detected in a target. For example, an update will run on a thing when the thing is\n\t\t\tadded to a target group, even after the update was completed by all things originally in the group. Valid\n\t\t\tvalues: CONTINUOUS | SNAPSHOT.</p>\n\t     ",
            "shape_name": "TargetSelection"
          },
          "awsJobExecutionsRolloutConfig": {
            "type": "structure",
            "members": {
              "maximumPerMinute": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The maximum number of OTA update job executions started per minute.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The maximum number of OTA update job executions started per minute.</p>\n\t     ",
                "shape_name": "MaximumPerMinute",
                "min_length": 1,
                "max_length": 1000
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Configuration for the rollout of OTA updates.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Configuration for the rollout of OTA updates.</p>\n\t     ",
            "shape_name": "AwsJobExecutionsRolloutConfig"
          },
          "files": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The files to be streamed by the OTA update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The files to be streamed by the OTA update.</p>\n\t     ",
            "required": true,
            "shape_name": "OTAUpdateFiles",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "fileName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The name of the file.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the file.</p>\n\t     ",
                  "shape_name": "FileName"
                },
                "fileVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The file version.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The file version.</p>\n\t     ",
                  "shape_name": "OTAUpdateFileVersion"
                },
                "fileLocation": {
                  "type": "structure",
                  "members": {
                    "stream": {
                      "type": "structure",
                      "members": {
                        "streamId": {
                          "type": "string",
                          "pattern": "[a-zA-Z0-9_-]+",
                          "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
                          "shape_name": "StreamId",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "fileId": {
                          "type": "integer",
                          "zonbookDocumentation": "\n\t\t       <para>The ID of a file associated with a stream.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The ID of a file associated with a stream.</p>\n\t     ",
                          "shape_name": "FileId",
                          "min_length": 0,
                          "max_length": 255
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The stream that contains the OTA update.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The stream that contains the OTA update.</p>\n\t     ",
                      "shape_name": "Stream"
                    },
                    "s3Location": {
                      "type": "structure",
                      "members": {
                        "bucket": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 bucket.</p>\n\t     ",
                          "shape_name": "S3Bucket",
                          "min_length": 1
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 key.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 key.</p>\n\t     ",
                          "shape_name": "S3Key",
                          "min_length": 1
                        },
                        "version": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The S3 bucket version.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The S3 bucket version.</p>\n\t     ",
                          "shape_name": "S3Version"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The location of the updated firmware in S3.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The location of the updated firmware in S3.</p>\n\t     ",
                      "shape_name": "S3Location"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The location of the updated firmware.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The location of the updated firmware.</p>\n\t     ",
                  "shape_name": "FileLocation"
                },
                "codeSigning": {
                  "type": "structure",
                  "members": {
                    "awsSignerJobId": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The ID of the AWSSignerJob which was created to sign the file.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The ID of the AWSSignerJob which was created to sign the file.</p>\n\t     ",
                      "shape_name": "SigningJobId"
                    },
                    "startSigningJobParameter": {
                      "type": "structure",
                      "members": {
                        "signingProfileParameter": {
                          "type": "structure",
                          "members": {
                            "certificateArn": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>Certificate ARN.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>Certificate ARN.</p>\n\t     ",
                              "shape_name": "CertificateArn"
                            },
                            "platform": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The hardware platform of your device.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The hardware platform of your device.</p>\n\t     ",
                              "shape_name": "Platform"
                            },
                            "certificatePathOnDevice": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The location of the code-signing certificate on your device.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The location of the code-signing certificate on your device.</p>\n\t     ",
                              "shape_name": "CertificatePathOnDevice"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>Describes the code-signing profile.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Describes the code-signing profile.</p>\n\t     ",
                          "shape_name": "SigningProfileParameter"
                        },
                        "signingProfileName": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The code-signing profile name.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The code-signing profile name.</p>\n\t     ",
                          "shape_name": "SigningProfileName"
                        },
                        "destination": {
                          "type": "structure",
                          "members": {
                            "s3Destination": {
                              "type": "structure",
                              "members": {
                                "bucket": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>The S3 bucket that contains the updated firmware.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>The S3 bucket that contains the updated firmware.</p>\n\t     ",
                                  "shape_name": "S3Bucket",
                                  "min_length": 1
                                },
                                "prefix": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>The S3 prefix.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>The S3 prefix.</p>\n\t     ",
                                  "shape_name": "Prefix"
                                }
                              },
                              "zonbookDocumentation": "\n\t\t       <para>Describes the location in S3 of the updated firmware.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>Describes the location in S3 of the updated firmware.</p>\n\t     ",
                              "shape_name": "S3Destination"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>The location to write the code-signed file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The location to write the code-signed file.</p>\n\t     ",
                          "shape_name": "Destination"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>Describes the code-signing job.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>Describes the code-signing job.</p>\n\t     ",
                      "shape_name": "StartSigningJobParameter"
                    },
                    "customCodeSigning": {
                      "type": "structure",
                      "members": {
                        "signature": {
                          "type": "structure",
                          "members": {
                            "inlineDocument": {
                              "type": "blob",
                              "zonbookDocumentation": "\n\t\t       <para>A base64 encoded binary representation of the code signing signature.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>A base64 encoded binary representation of the code signing signature.</p>\n\t     ",
                              "shape_name": "Signature"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>The signature for the file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The signature for the file.</p>\n\t     ",
                          "shape_name": "CodeSigningSignature"
                        },
                        "certificateChain": {
                          "type": "structure",
                          "members": {
                            "certificateName": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The name of the certificate.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The name of the certificate.</p>\n\t     ",
                              "shape_name": "CertificateName"
                            },
                            "inlineDocument": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>A base64 encoded binary representation of the code signing certificate chain.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>A base64 encoded binary representation of the code signing certificate chain.</p>\n\t     ",
                              "shape_name": "InlineDocument"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>The certificate chain.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The certificate chain.</p>\n\t     ",
                          "shape_name": "CodeSigningCertificateChain"
                        },
                        "hashAlgorithm": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The hash algorithm used to code sign the file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The hash algorithm used to code sign the file.</p>\n\t     ",
                          "shape_name": "HashAlgorithm"
                        },
                        "signatureAlgorithm": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The signature algorithm used to code sign the file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The signature algorithm used to code sign the file.</p>\n\t     ",
                          "shape_name": "SignatureAlgorithm"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>A custom method for code signing a file.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>A custom method for code signing a file.</p>\n\t     ",
                      "shape_name": "CustomCodeSigning"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The code signing method of the file.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The code signing method of the file.</p>\n\t     ",
                  "shape_name": "CodeSigning"
                },
                "attributes": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <para>A list of name/attribute pairs.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A list of name/attribute pairs.</p>\n\t     ",
                  "shape_name": "AttributesMap",
                  "keys": {
                    "type": "string",
                    "shape_name": "AttributeKey",
                    "documentation": null
                  },
                  "members": {
                    "type": "string",
                    "shape_name": "Value",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Describes a file to be associated with an OTA update.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Describes a file to be associated with an OTA update.</p>\n\t     ",
              "shape_name": "OTAUpdateFile"
            }
          },
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The IAM role that allows access to the AWS IoT Jobs service.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IAM role that allows access to the AWS IoT Jobs service.</p>\n\t     ",
            "required": true,
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "additionalParameters": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <para>A list of additional OTA update parameters which are name-value pairs.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of additional OTA update parameters which are name-value pairs.</p>\n\t     ",
            "shape_name": "AdditionalParameterMap",
            "keys": {
              "type": "string",
              "shape_name": "AttributeKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "Value",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateOTAUpdateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "otaUpdateId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The OTA update ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update ID.</p>\n\t     ",
            "shape_name": "OTAUpdateId",
            "min_length": 1,
            "max_length": 128
          },
          "awsIotJobId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The AWS IoT job ID associated with the OTA update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The AWS IoT job ID associated with the OTA update.</p>\n\t     ",
            "shape_name": "AwsIotJobId"
          },
          "otaUpdateArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The OTA update ARN.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update ARN.</p>\n\t     ",
            "shape_name": "OTAUpdateArn"
          },
          "awsIotJobArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The AWS IoT job ARN associated with the OTA update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The AWS IoT job ARN associated with the OTA update.</p>\n\t     ",
            "shape_name": "AwsIotJobArn"
          },
          "otaUpdateStatus": {
            "type": "string",
            "enum": [
              "CREATE_PENDING",
              "CREATE_IN_PROGRESS",
              "CREATE_COMPLETE",
              "CREATE_FAILED"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The OTA update status.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update status.</p>\n\t     ",
            "shape_name": "OTAUpdateStatus"
          }
        },
        "shape_name": "CreateOTAUpdateResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates an AWS IoT OTAUpdate on a target group of things or groups.</p>\n\t     "
    },
    "GetOTAUpdate": {
      "name": "GetOTAUpdate",
      "http": {
        "method": "GET",
        "uri": "/otaUpdates/{otaUpdateId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "otaUpdateId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The OTA update ID.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update ID.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "OTAUpdateId",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "GetOTAUpdateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "otaUpdateInfo": {
            "type": "structure",
            "members": {
              "otaUpdateId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9_-]+",
                "zonbookDocumentation": "\n\t\t       <para>The OTA update ID.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The OTA update ID.</p>\n\t     ",
                "shape_name": "OTAUpdateId",
                "min_length": 1,
                "max_length": 128
              },
              "otaUpdateArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The OTA update ARN.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The OTA update ARN.</p>\n\t     ",
                "shape_name": "OTAUpdateArn"
              },
              "creationDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <para>The date when the OTA update was created.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date when the OTA update was created.</p>\n\t     ",
                "shape_name": "DateType"
              },
              "lastModifiedDate": {
                "type": "timestamp",
                "zonbookDocumentation": "\n\t\t       <para>The date when the OTA update was last updated.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date when the OTA update was last updated.</p>\n\t     ",
                "shape_name": "DateType"
              },
              "description": {
                "type": "string",
                "pattern": "[^\\p{C}]+",
                "zonbookDocumentation": "\n\t\t       <para>A description of the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A description of the OTA update.</p>\n\t     ",
                "shape_name": "OTAUpdateDescription",
                "max_length": 2028
              },
              "targets": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The targets of the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The targets of the OTA update.</p>\n\t     ",
                "shape_name": "Targets",
                "min_length": 1,
                "members": {
                  "type": "string",
                  "shape_name": "Target",
                  "documentation": null
                }
              },
              "awsJobExecutionsRolloutConfig": {
                "type": "structure",
                "members": {
                  "maximumPerMinute": {
                    "type": "integer",
                    "zonbookDocumentation": "\n\t\t       <para>The maximum number of OTA update job executions started per minute.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The maximum number of OTA update job executions started per minute.</p>\n\t     ",
                    "shape_name": "MaximumPerMinute",
                    "min_length": 1,
                    "max_length": 1000
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>Configuration for the rollout of OTA updates.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Configuration for the rollout of OTA updates.</p>\n\t     ",
                "shape_name": "AwsJobExecutionsRolloutConfig"
              },
              "targetSelection": {
                "type": "string",
                "enum": [
                  "CONTINUOUS",
                  "SNAPSHOT"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those\n\t\t\tthings specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also\n\t\t\tbe run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when\n\t\t\tthe thing is added to a target group, even after the OTA update was completed by all things originally in\n\t\t\tthe group. </para>\n\t     ",
                "documentation": "\n\t\t       <p>Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those\n\t\t\tthings specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also\n\t\t\tbe run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when\n\t\t\tthe thing is added to a target group, even after the OTA update was completed by all things originally in\n\t\t\tthe group. </p>\n\t     ",
                "shape_name": "TargetSelection"
              },
              "otaUpdateFiles": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>A list of files associated with the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A list of files associated with the OTA update.</p>\n\t     ",
                "shape_name": "OTAUpdateFiles",
                "min_length": 1,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "fileName": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The name of the file.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The name of the file.</p>\n\t     ",
                      "shape_name": "FileName"
                    },
                    "fileVersion": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The file version.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The file version.</p>\n\t     ",
                      "shape_name": "OTAUpdateFileVersion"
                    },
                    "fileLocation": {
                      "type": "structure",
                      "members": {
                        "stream": {
                          "type": "structure",
                          "members": {
                            "streamId": {
                              "type": "string",
                              "pattern": "[a-zA-Z0-9_-]+",
                              "zonbookDocumentation": "\n\t\t       <para>The stream ID.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The stream ID.</p>\n\t     ",
                              "shape_name": "StreamId",
                              "min_length": 1,
                              "max_length": 128
                            },
                            "fileId": {
                              "type": "integer",
                              "zonbookDocumentation": "\n\t\t       <para>The ID of a file associated with a stream.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The ID of a file associated with a stream.</p>\n\t     ",
                              "shape_name": "FileId",
                              "min_length": 0,
                              "max_length": 255
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>The stream that contains the OTA update.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The stream that contains the OTA update.</p>\n\t     ",
                          "shape_name": "Stream"
                        },
                        "s3Location": {
                          "type": "structure",
                          "members": {
                            "bucket": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The S3 bucket.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The S3 bucket.</p>\n\t     ",
                              "shape_name": "S3Bucket",
                              "min_length": 1
                            },
                            "key": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The S3 key.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The S3 key.</p>\n\t     ",
                              "shape_name": "S3Key",
                              "min_length": 1
                            },
                            "version": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The S3 bucket version.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The S3 bucket version.</p>\n\t     ",
                              "shape_name": "S3Version"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>The location of the updated firmware in S3.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The location of the updated firmware in S3.</p>\n\t     ",
                          "shape_name": "S3Location"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The location of the updated firmware.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The location of the updated firmware.</p>\n\t     ",
                      "shape_name": "FileLocation"
                    },
                    "codeSigning": {
                      "type": "structure",
                      "members": {
                        "awsSignerJobId": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>The ID of the AWSSignerJob which was created to sign the file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The ID of the AWSSignerJob which was created to sign the file.</p>\n\t     ",
                          "shape_name": "SigningJobId"
                        },
                        "startSigningJobParameter": {
                          "type": "structure",
                          "members": {
                            "signingProfileParameter": {
                              "type": "structure",
                              "members": {
                                "certificateArn": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>Certificate ARN.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>Certificate ARN.</p>\n\t     ",
                                  "shape_name": "CertificateArn"
                                },
                                "platform": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>The hardware platform of your device.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>The hardware platform of your device.</p>\n\t     ",
                                  "shape_name": "Platform"
                                },
                                "certificatePathOnDevice": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>The location of the code-signing certificate on your device.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>The location of the code-signing certificate on your device.</p>\n\t     ",
                                  "shape_name": "CertificatePathOnDevice"
                                }
                              },
                              "zonbookDocumentation": "\n\t\t       <para>Describes the code-signing profile.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>Describes the code-signing profile.</p>\n\t     ",
                              "shape_name": "SigningProfileParameter"
                            },
                            "signingProfileName": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The code-signing profile name.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The code-signing profile name.</p>\n\t     ",
                              "shape_name": "SigningProfileName"
                            },
                            "destination": {
                              "type": "structure",
                              "members": {
                                "s3Destination": {
                                  "type": "structure",
                                  "members": {
                                    "bucket": {
                                      "type": "string",
                                      "zonbookDocumentation": "\n\t\t       <para>The S3 bucket that contains the updated firmware.</para>\n\t     ",
                                      "documentation": "\n\t\t       <p>The S3 bucket that contains the updated firmware.</p>\n\t     ",
                                      "shape_name": "S3Bucket",
                                      "min_length": 1
                                    },
                                    "prefix": {
                                      "type": "string",
                                      "zonbookDocumentation": "\n\t\t       <para>The S3 prefix.</para>\n\t     ",
                                      "documentation": "\n\t\t       <p>The S3 prefix.</p>\n\t     ",
                                      "shape_name": "Prefix"
                                    }
                                  },
                                  "zonbookDocumentation": "\n\t\t       <para>Describes the location in S3 of the updated firmware.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>Describes the location in S3 of the updated firmware.</p>\n\t     ",
                                  "shape_name": "S3Destination"
                                }
                              },
                              "zonbookDocumentation": "\n\t\t       <para>The location to write the code-signed file.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The location to write the code-signed file.</p>\n\t     ",
                              "shape_name": "Destination"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>Describes the code-signing job.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Describes the code-signing job.</p>\n\t     ",
                          "shape_name": "StartSigningJobParameter"
                        },
                        "customCodeSigning": {
                          "type": "structure",
                          "members": {
                            "signature": {
                              "type": "structure",
                              "members": {
                                "inlineDocument": {
                                  "type": "blob",
                                  "zonbookDocumentation": "\n\t\t       <para>A base64 encoded binary representation of the code signing signature.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>A base64 encoded binary representation of the code signing signature.</p>\n\t     ",
                                  "shape_name": "Signature"
                                }
                              },
                              "zonbookDocumentation": "\n\t\t       <para>The signature for the file.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The signature for the file.</p>\n\t     ",
                              "shape_name": "CodeSigningSignature"
                            },
                            "certificateChain": {
                              "type": "structure",
                              "members": {
                                "certificateName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>The name of the certificate.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>The name of the certificate.</p>\n\t     ",
                                  "shape_name": "CertificateName"
                                },
                                "inlineDocument": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n\t\t       <para>A base64 encoded binary representation of the code signing certificate chain.</para>\n\t     ",
                                  "documentation": "\n\t\t       <p>A base64 encoded binary representation of the code signing certificate chain.</p>\n\t     ",
                                  "shape_name": "InlineDocument"
                                }
                              },
                              "zonbookDocumentation": "\n\t\t       <para>The certificate chain.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The certificate chain.</p>\n\t     ",
                              "shape_name": "CodeSigningCertificateChain"
                            },
                            "hashAlgorithm": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The hash algorithm used to code sign the file.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The hash algorithm used to code sign the file.</p>\n\t     ",
                              "shape_name": "HashAlgorithm"
                            },
                            "signatureAlgorithm": {
                              "type": "string",
                              "zonbookDocumentation": "\n\t\t       <para>The signature algorithm used to code sign the file.</para>\n\t     ",
                              "documentation": "\n\t\t       <p>The signature algorithm used to code sign the file.</p>\n\t     ",
                              "shape_name": "SignatureAlgorithm"
                            }
                          },
                          "zonbookDocumentation": "\n\t\t       <para>A custom method for code signing a file.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>A custom method for code signing a file.</p>\n\t     ",
                          "shape_name": "CustomCodeSigning"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The code signing method of the file.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The code signing method of the file.</p>\n\t     ",
                      "shape_name": "CodeSigning"
                    },
                    "attributes": {
                      "type": "map",
                      "zonbookDocumentation": "\n\t\t       <para>A list of name/attribute pairs.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>A list of name/attribute pairs.</p>\n\t     ",
                      "shape_name": "AttributesMap",
                      "keys": {
                        "type": "string",
                        "shape_name": "AttributeKey",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "Value",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>Describes a file to be associated with an OTA update.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Describes a file to be associated with an OTA update.</p>\n\t     ",
                  "shape_name": "OTAUpdateFile"
                }
              },
              "otaUpdateStatus": {
                "type": "string",
                "enum": [
                  "CREATE_PENDING",
                  "CREATE_IN_PROGRESS",
                  "CREATE_COMPLETE",
                  "CREATE_FAILED"
                ],
                "zonbookDocumentation": "\n\t\t       <para>The status of the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The status of the OTA update.</p>\n\t     ",
                "shape_name": "OTAUpdateStatus"
              },
              "awsIotJobId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The AWS IoT job ID associated with the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The AWS IoT job ID associated with the OTA update.</p>\n\t     ",
                "shape_name": "AwsIotJobId"
              },
              "awsIotJobArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The AWS IoT job ARN associated with the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The AWS IoT job ARN associated with the OTA update.</p>\n\t     ",
                "shape_name": "AwsIotJobArn"
              },
              "errorInfo": {
                "type": "structure",
                "members": {
                  "code": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>The error code.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The error code.</p>\n\t     ",
                    "shape_name": "Code"
                  },
                  "message": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>The error message.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The error message.</p>\n\t     ",
                    "shape_name": "OTAUpdateErrorMessage"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>Error information associated with the OTA update.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Error information associated with the OTA update.</p>\n\t     ",
                "shape_name": "ErrorInfo"
              },
              "additionalParameters": {
                "type": "map",
                "zonbookDocumentation": "\n\t\t       <para>A collection of name/value pairs</para>\n\t     ",
                "documentation": "\n\t\t       <p>A collection of name/value pairs</p>\n\t     ",
                "shape_name": "AdditionalParameterMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AttributeKey",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "Value",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The OTA update info.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update info.</p>\n\t     ",
            "shape_name": "OTAUpdateInfo"
          }
        },
        "shape_name": "GetOTAUpdateResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets an OTA update.</p>\n\t     "
    },
    "DeleteOTAUpdate": {
      "name": "DeleteOTAUpdate",
      "http": {
        "method": "DELETE",
        "uri": "/otaUpdates/{otaUpdateId}?deleteStream={deleteStream}&forceDeleteAWSJob={forceDeleteAWSJob}"
      },
      "input": {
        "type": "structure",
        "members": {
          "otaUpdateId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n\t\t       <para>The OTA update ID to delete.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update ID to delete.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "OTAUpdateId",
            "min_length": 1,
            "max_length": 128
          },
          "deleteStream": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>Specifies if the stream associated with an OTA update should be deleted when the OTA update is deleted.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Specifies if the stream associated with an OTA update should be deleted when the OTA update is deleted.</p>\n\t     ",
            "location": "uri",
            "shape_name": "DeleteStream"
          },
          "forceDeleteAWSJob": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>Specifies if the AWS Job associated with the OTA update should be deleted with the OTA update is deleted.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Specifies if the AWS Job associated with the OTA update should be deleted with the OTA update is deleted.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ForceDeleteAWSJob"
          }
        },
        "shape_name": "DeleteOTAUpdateRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteOTAUpdateResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        }
      ],
      "documentation": "\n\t\t       <p>Delete an OTA update.</p>\n\t     "
    },
    "ListOTAUpdates": {
      "name": "ListOTAUpdates",
      "http": {
        "method": "GET",
        "uri": "/otaUpdates?maxResults={maxResults}&nextToken={nextToken}&otaUpdateStatus={otaUpdateStatus}"
      },
      "input": {
        "type": "structure",
        "members": {
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of results to return at one time.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to return at one time.</p>\n\t     ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A token used to retrieve the next set of results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A token used to retrieve the next set of results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "otaUpdateStatus": {
            "type": "string",
            "enum": [
              "CREATE_PENDING",
              "CREATE_IN_PROGRESS",
              "CREATE_COMPLETE",
              "CREATE_FAILED"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The OTA update job status.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The OTA update job status.</p>\n\t     ",
            "location": "uri",
            "shape_name": "OTAUpdateStatus"
          }
        },
        "shape_name": "ListOTAUpdatesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "otaUpdates": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of OTA update jobs.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of OTA update jobs.</p>\n\t     ",
            "shape_name": "OTAUpdatesSummary",
            "members": {
              "type": "structure",
              "members": {
                "otaUpdateId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_-]+",
                  "zonbookDocumentation": "\n\t\t       <para>The OTA update ID.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The OTA update ID.</p>\n\t     ",
                  "shape_name": "OTAUpdateId",
                  "min_length": 1,
                  "max_length": 128
                },
                "otaUpdateArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The OTA update ARN.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The OTA update ARN.</p>\n\t     ",
                  "shape_name": "OTAUpdateArn"
                },
                "creationDate": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <para>The date when the OTA update was created.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date when the OTA update was created.</p>\n\t     ",
                  "shape_name": "DateType"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>An OTA update summary.</para>\n\t     ",
              "documentation": "\n\t\t       <p>An OTA update summary.</p>\n\t     ",
              "shape_name": "OTAUpdateSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A token to use to get the next set of results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A token to use to get the next set of results.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListOTAUpdatesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>You are not authorized to perform this operation.</simpara>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The service is temporarily unavailable.</simpara>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists OTA updates.</p>\n\t     "
    },
    "UpdateAccountAuditConfiguration": {
      "name": "UpdateAccountAuditConfiguration",
      "http": {
        "method": "PATCH",
        "uri": "/audit/configuration"
      },
      "input": {
        "type": "structure",
        "members": {
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The ARN of the role that grants permission to AWS IoT to access information\n            about your devices, policies, certificates and other items as necessary when \n            performing an audit.</para>\n        ",
            "documentation": "\n          <p>The ARN of the role that grants permission to AWS IoT to access information\n            about your devices, policies, certificates and other items as necessary when \n            performing an audit.</p>\n        ",
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "auditNotificationTargetConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n          <para>Information about the targets to which audit notifications are sent.</para>\n        ",
            "documentation": "\n          <p>Information about the targets to which audit notifications are sent.</p>\n        ",
            "shape_name": "AuditNotificationTargetConfigurations",
            "keys": {
              "type": "string",
              "enum": [
                "SNS"
              ],
              "shape_name": "AuditNotificationType",
              "documentation": null
            },
            "members": {
              "type": "structure",
              "members": {
                "targetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the target (SNS topic) to which audit notifications are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the target (SNS topic) to which audit notifications are sent.</p>\n      ",
                  "shape_name": "TargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send notifications to the target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send notifications to the target.</p>\n      ",
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                },
                "enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>True if notifications to the target are enabled.</para>\n      ",
                  "documentation": "\n         <p>True if notifications to the target are enabled.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about the targets to which audit notifications are sent.</simpara>\n      ",
              "documentation": "\n         <p>Information about the targets to which audit notifications are sent.</p>\n      ",
              "shape_name": "AuditNotificationTarget"
            }
          },
          "auditCheckConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n          <para>Specifies which audit checks are enabled and disabled for this account. Use \n            <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those \n            that are currently enabled.</para>\n          <para>Note that some data collection may begin immediately when certain checks are enabled. \n            When a check is disabled, any data collected so far in relation to the check is deleted.</para>\n          <para>You cannot disable a check if it is used by any scheduled audit. You must first delete the check\n            from the scheduled audit or delete the scheduled audit itself.</para>\n          <para>On the first call to <code>UpdateAccountAuditConfiguration</code>\n            this parameter is required and must specify at least one enabled check.</para>\n        ",
            "documentation": "\n          <p>Specifies which audit checks are enabled and disabled for this account. Use \n            <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those \n            that are currently enabled.</p>\n          <p>Note that some data collection may begin immediately when certain checks are enabled. \n            When a check is disabled, any data collected so far in relation to the check is deleted.</p>\n          <p>You cannot disable a check if it is used by any scheduled audit. You must first delete the check\n            from the scheduled audit or delete the scheduled audit itself.</p>\n          <p>On the first call to <code>UpdateAccountAuditConfiguration</code>\n            this parameter is required and must specify at least one enabled check.</p>\n        ",
            "shape_name": "AuditCheckConfigurations",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            },
            "members": {
              "type": "structure",
              "members": {
                "enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>True if this audit check is enabled for this account.</para>\n      ",
                  "documentation": "\n         <p>True if this audit check is enabled for this account.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Which audit checks are enabled and disabled for this account.</simpara>\n      ",
              "documentation": "\n         <p>Which audit checks are enabled and disabled for this account.</p>\n      ",
              "shape_name": "AuditCheckConfiguration"
            }
          }
        },
        "shape_name": "UpdateAccountAuditConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateAccountAuditConfigurationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Configures or reconfigures the Device Defender audit settings for this account.\n          Settings include how audit notifications are sent and which audit checks are\n          enabled or disabled.</p>\n      "
    },
    "DescribeAccountAuditConfiguration": {
      "name": "DescribeAccountAuditConfiguration",
      "http": {
        "method": "GET",
        "uri": "/audit/configuration"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DescribeAccountAuditConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "roleArn": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The ARN of the role that grants permission to AWS IoT to access information\n            about your devices, policies, certificates and other items as necessary when \n            performing an audit.</para>\n          <para>On the first call to <code>UpdateAccountAuditConfiguration</code>\n            this parameter is required.</para>\n        ",
            "documentation": "\n          <p>The ARN of the role that grants permission to AWS IoT to access information\n            about your devices, policies, certificates and other items as necessary when \n            performing an audit.</p>\n          <p>On the first call to <code>UpdateAccountAuditConfiguration</code>\n            this parameter is required.</p>\n        ",
            "shape_name": "RoleArn",
            "min_length": 20,
            "max_length": 2048
          },
          "auditNotificationTargetConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n          <para>Information about the targets to which audit notifications are sent for \n            this account.</para>\n        ",
            "documentation": "\n          <p>Information about the targets to which audit notifications are sent for \n            this account.</p>\n        ",
            "shape_name": "AuditNotificationTargetConfigurations",
            "keys": {
              "type": "string",
              "enum": [
                "SNS"
              ],
              "shape_name": "AuditNotificationType",
              "documentation": null
            },
            "members": {
              "type": "structure",
              "members": {
                "targetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the target (SNS topic) to which audit notifications are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the target (SNS topic) to which audit notifications are sent.</p>\n      ",
                  "shape_name": "TargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send notifications to the target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send notifications to the target.</p>\n      ",
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                },
                "enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>True if notifications to the target are enabled.</para>\n      ",
                  "documentation": "\n         <p>True if notifications to the target are enabled.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about the targets to which audit notifications are sent.</simpara>\n      ",
              "documentation": "\n         <p>Information about the targets to which audit notifications are sent.</p>\n      ",
              "shape_name": "AuditNotificationTarget"
            }
          },
          "auditCheckConfigurations": {
            "type": "map",
            "zonbookDocumentation": "\n          <para>Which audit checks are enabled and disabled for this account.</para>\n        ",
            "documentation": "\n          <p>Which audit checks are enabled and disabled for this account.</p>\n        ",
            "shape_name": "AuditCheckConfigurations",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            },
            "members": {
              "type": "structure",
              "members": {
                "enabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>True if this audit check is enabled for this account.</para>\n      ",
                  "documentation": "\n         <p>True if this audit check is enabled for this account.</p>\n      ",
                  "shape_name": "Enabled"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Which audit checks are enabled and disabled for this account.</simpara>\n      ",
              "documentation": "\n         <p>Which audit checks are enabled and disabled for this account.</p>\n      ",
              "shape_name": "AuditCheckConfiguration"
            }
          }
        },
        "shape_name": "DescribeAccountAuditConfigurationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about the Device Defender audit settings for this account.\n          Settings include how audit notifications are sent and which audit checks are\n          enabled or disabled.</p>\n      "
    },
    "DeleteAccountAuditConfiguration": {
      "name": "DeleteAccountAuditConfiguration",
      "http": {
        "method": "DELETE",
        "uri": "/audit/configuration?deleteScheduledAudits={deleteScheduledAudits}"
      },
      "input": {
        "type": "structure",
        "members": {
          "deleteScheduledAudits": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>If true, all scheduled audits are deleted.</simpara>\n      ",
            "documentation": "\n         <p>If true, all scheduled audits are deleted.</p>\n      ",
            "location": "uri",
            "shape_name": "DeleteScheduledAudits"
          }
        },
        "shape_name": "DeleteAccountAuditConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteAccountAuditConfigurationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Restores the default settings for Device Defender audits for this account. Any\n          configuration data you entered is deleted and all audit checks are reset to \n          disabled.  </p>\n      "
    },
    "StartOnDemandAuditTask": {
      "name": "StartOnDemandAuditTask",
      "http": {
        "method": "POST",
        "uri": "/audit/tasks"
      },
      "input": {
        "type": "structure",
        "members": {
          "targetCheckNames": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>Which checks are performed during the audit. The checks you specify must be enabled \n            for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> \n            to see the list of all checks including those that are enabled or \n            <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.</para>\n        ",
            "documentation": "\n          <p>Which checks are performed during the audit. The checks you specify must be enabled \n            for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> \n            to see the list of all checks including those that are enabled or \n            <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.</p>\n        ",
            "required": true,
            "shape_name": "TargetAuditCheckNames",
            "members": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            }
          }
        },
        "shape_name": "StartOnDemandAuditTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n          <para>The ID of the on-demand audit you started.</para>\n        ",
            "documentation": "\n          <p>The ID of the on-demand audit you started.</p>\n        ",
            "shape_name": "AuditTaskId",
            "min_length": 1,
            "max_length": 40
          }
        },
        "shape_name": "StartOnDemandAuditTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Starts an on-demand Device Defender audit.</p>\n      "
    },
    "CancelAuditTask": {
      "name": "CancelAuditTask",
      "http": {
        "method": "PUT",
        "uri": "/audit/tasks/{taskId}/cancel"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n          <para>The ID of the audit you want to cancel. You can only cancel an\n              audit that is \"IN_PROGRESS\".</para>\n        ",
            "documentation": "\n          <p>The ID of the audit you want to cancel. You can only cancel an\n              audit that is \"IN_PROGRESS\".</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "AuditTaskId",
            "min_length": 1,
            "max_length": 40
          }
        },
        "shape_name": "CancelAuditTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "CancelAuditTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Cancels an audit that is in progress. The audit can be either scheduled or on-demand. \n          If the audit is not in progress, an \"InvalidRequestException\" occurs.</p>\n      "
    },
    "DescribeAuditTask": {
      "name": "DescribeAuditTask",
      "http": {
        "method": "GET",
        "uri": "/audit/tasks/{taskId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n          <para>The ID of the audit whose information you want to get.</para>\n        ",
            "documentation": "\n          <p>The ID of the audit whose information you want to get.</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "AuditTaskId",
            "min_length": 1,
            "max_length": 40
          }
        },
        "shape_name": "DescribeAuditTaskRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "taskStatus": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "COMPLETED",
              "FAILED",
              "CANCELED"
            ],
            "zonbookDocumentation": "\n          <para>The status of the audit: one of \"IN_PROGRESS\", \"COMPLETED\",\n            \"FAILED\", or \"CANCELED\".</para>\n        ",
            "documentation": "\n          <p>The status of the audit: one of \"IN_PROGRESS\", \"COMPLETED\",\n            \"FAILED\", or \"CANCELED\".</p>\n        ",
            "shape_name": "AuditTaskStatus"
          },
          "taskType": {
            "type": "string",
            "enum": [
              "ON_DEMAND_AUDIT_TASK",
              "SCHEDULED_AUDIT_TASK"
            ],
            "zonbookDocumentation": "\n          <para>The type of audit: \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</para>\n        ",
            "documentation": "\n          <p>The type of audit: \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</p>\n        ",
            "shape_name": "AuditTaskType"
          },
          "taskStartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n          <para>The time the audit started.</para>\n        ",
            "documentation": "\n          <p>The time the audit started.</p>\n        ",
            "shape_name": "Timestamp"
          },
          "taskStatistics": {
            "type": "structure",
            "members": {
              "totalChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks in this audit.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks in this audit.</p>\n      ",
                "shape_name": "TotalChecksCount"
              },
              "inProgressChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks in progress.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks in progress.</p>\n      ",
                "shape_name": "InProgressChecksCount"
              },
              "waitingForDataCollectionChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks waiting for data collection.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks waiting for data collection.</p>\n      ",
                "shape_name": "WaitingForDataCollectionChecksCount"
              },
              "compliantChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks that found compliant resources.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks that found compliant resources.</p>\n      ",
                "shape_name": "CompliantChecksCount"
              },
              "nonCompliantChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks that found non-compliant resources.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks that found non-compliant resources.</p>\n      ",
                "shape_name": "NonCompliantChecksCount"
              },
              "failedChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks </simpara>\n      ",
                "documentation": "\n         <p>The number of checks </p>\n      ",
                "shape_name": "FailedChecksCount"
              },
              "canceledChecks": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The number of checks that did not run because the audit was canceled.</simpara>\n      ",
                "documentation": "\n         <p>The number of checks that did not run because the audit was canceled.</p>\n      ",
                "shape_name": "CanceledChecksCount"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Statistical information about the audit.</simpara>\n      ",
            "documentation": "\n         <p>Statistical information about the audit.</p>\n      ",
            "shape_name": "TaskStatistics"
          },
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name of the scheduled audit (only if the audit was a scheduled audit).</para>\n        ",
            "documentation": "\n          <p>The name of the scheduled audit (only if the audit was a scheduled audit).</p>\n        ",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          },
          "auditDetails": {
            "type": "map",
            "zonbookDocumentation": "\n          <para>Detailed information about each check performed during this audit.</para>\n        ",
            "documentation": "\n          <p>Detailed information about each check performed during this audit.</p>\n        ",
            "shape_name": "AuditDetails",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            },
            "members": {
              "type": "structure",
              "members": {
                "checkRunStatus": {
                  "type": "string",
                  "enum": [
                    "IN_PROGRESS",
                    "WAITING_FOR_DATA_COLLECTION",
                    "CANCELED",
                    "COMPLETED_COMPLIANT",
                    "COMPLETED_NON_COMPLIANT",
                    "FAILED"
                  ],
                  "zonbookDocumentation": "\n         <para>The completion status of this check, one of \"IN_PROGRESS\", \"WAITING_FOR_DATA_COLLECTION\",\n        \"CANCELED\", \"COMPLETED_COMPLIANT\", \"COMPLETED_NON_COMPLIANT\", or \"FAILED\".</para>\n      ",
                  "documentation": "\n         <p>The completion status of this check, one of \"IN_PROGRESS\", \"WAITING_FOR_DATA_COLLECTION\",\n        \"CANCELED\", \"COMPLETED_COMPLIANT\", \"COMPLETED_NON_COMPLIANT\", or \"FAILED\".</p>\n      ",
                  "shape_name": "AuditCheckRunStatus"
                },
                "checkCompliant": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>True if the check completed and found all resources compliant.</para>\n      ",
                  "documentation": "\n         <p>True if the check completed and found all resources compliant.</p>\n      ",
                  "shape_name": "CheckCompliant"
                },
                "totalResourcesCount": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <para>The number of resources on which the check was performed.</para>\n      ",
                  "documentation": "\n         <p>The number of resources on which the check was performed.</p>\n      ",
                  "shape_name": "TotalResourcesCount"
                },
                "nonCompliantResourcesCount": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <para>The number of resources that the check found non-compliant.</para>\n      ",
                  "documentation": "\n         <p>The number of resources that the check found non-compliant.</p>\n      ",
                  "shape_name": "NonCompliantResourcesCount"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The code of any error encountered when performing this check during this audit.\n          One of \"INSUFFICIENT_PERMISSIONS\", or \"AUDIT_CHECK_DISABLED\".</para>\n      ",
                  "documentation": "\n         <p>The code of any error encountered when performing this check during this audit.\n          One of \"INSUFFICIENT_PERMISSIONS\", or \"AUDIT_CHECK_DISABLED\".</p>\n      ",
                  "shape_name": "ErrorCode"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The message associated with any error encountered when performing this check during this audit.</para>\n      ",
                  "documentation": "\n         <p>The message associated with any error encountered when performing this check during this audit.</p>\n      ",
                  "shape_name": "ErrorMessage",
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about the audit check.</simpara>\n      ",
              "documentation": "\n         <p>Information about the audit check.</p>\n      ",
              "shape_name": "AuditCheckDetails"
            }
          }
        },
        "shape_name": "DescribeAuditTaskResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about a Device Defender audit.</p>\n      "
    },
    "ListAuditTasks": {
      "name": "ListAuditTasks",
      "http": {
        "method": "GET",
        "uri": "/audit/tasks?maxResults={maxResults}&nextToken={nextToken}&taskStatus={taskStatus}&taskType={taskType}&startTime={startTime}&endTime={endTime}"
      },
      "input": {
        "type": "structure",
        "members": {
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n          <para>The beginning of the time period. Note that audit information is retained for a \n              limited time (180 days). Requesting a start time prior to what is retained \n              results in an \"InvalidRequestException\".</para>\n        ",
            "documentation": "\n          <p>The beginning of the time period. Note that audit information is retained for a \n              limited time (180 days). Requesting a start time prior to what is retained \n              results in an \"InvalidRequestException\".</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "Timestamp"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n          <para>The end of the time period.</para>\n        ",
            "documentation": "\n          <p>The end of the time period.</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "Timestamp"
          },
          "taskType": {
            "type": "string",
            "enum": [
              "ON_DEMAND_AUDIT_TASK",
              "SCHEDULED_AUDIT_TASK"
            ],
            "zonbookDocumentation": "\n          <para>A filter to limit the output to the specified type of audit: can be one of\n            \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED__AUDIT_TASK\".</para>\n        ",
            "documentation": "\n          <p>A filter to limit the output to the specified type of audit: can be one of\n            \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED__AUDIT_TASK\".</p>\n        ",
            "location": "uri",
            "shape_name": "AuditTaskType"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "COMPLETED",
              "FAILED",
              "CANCELED"
            ],
            "zonbookDocumentation": "\n          <para>A filter to limit the output to audits with the specified completion\n            status: can be one of \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\" or \"CANCELED\".</para>\n        ",
            "documentation": "\n          <p>A filter to limit the output to audits with the specified completion\n            status: can be one of \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\" or \"CANCELED\".</p>\n        ",
            "location": "uri",
            "shape_name": "AuditTaskStatus"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The token for the next set of results.</para>\n        ",
            "documentation": "\n          <p>The token for the next set of results.</p>\n        ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n          <para>The maximum number of results to return at one time. The default is 25.</para>\n        ",
            "documentation": "\n          <p>The maximum number of results to return at one time. The default is 25.</p>\n        ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListAuditTasksRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tasks": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>The audits that were performed during the specified time period.</para>\n        ",
            "documentation": "\n          <p>The audits that were performed during the specified time period.</p>\n        ",
            "shape_name": "AuditTaskMetadataList",
            "members": {
              "type": "structure",
              "members": {
                "taskId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n         <para>The ID of this audit.</para>\n      ",
                  "documentation": "\n         <p>The ID of this audit.</p>\n      ",
                  "shape_name": "AuditTaskId",
                  "min_length": 1,
                  "max_length": 40
                },
                "taskStatus": {
                  "type": "string",
                  "enum": [
                    "IN_PROGRESS",
                    "COMPLETED",
                    "FAILED",
                    "CANCELED"
                  ],
                  "zonbookDocumentation": "\n         <para>The status of this audit: one of \"IN_PROGRESS\", \"COMPLETED\",\n        \"FAILED\" or \"CANCELED\".</para>\n      ",
                  "documentation": "\n         <p>The status of this audit: one of \"IN_PROGRESS\", \"COMPLETED\",\n        \"FAILED\" or \"CANCELED\".</p>\n      ",
                  "shape_name": "AuditTaskStatus"
                },
                "taskType": {
                  "type": "string",
                  "enum": [
                    "ON_DEMAND_AUDIT_TASK",
                    "SCHEDULED_AUDIT_TASK"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of this audit: one of \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</para>\n      ",
                  "documentation": "\n         <p>The type of this audit: one of \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</p>\n      ",
                  "shape_name": "AuditTaskType"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The audits that were performed.</simpara>\n      ",
              "documentation": "\n         <p>The audits that were performed.</p>\n      ",
              "shape_name": "AuditTaskMetadata"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>A token that can be used to retrieve the next set of results, or <code>null</code> \n            if there are no additional results.</para>\n        ",
            "documentation": "\n          <p>A token that can be used to retrieve the next set of results, or <code>null</code> \n            if there are no additional results.</p>\n        ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListAuditTasksResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the Device Defender audits that have been performed during a given\n          time period.</p>\n      "
    },
    "CreateScheduledAudit": {
      "name": "CreateScheduledAudit",
      "http": {
        "method": "POST",
        "uri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "BIWEEKLY",
              "MONTHLY"
            ],
            "zonbookDocumentation": "\n          <para>How often the scheduled audit takes place. Can be one of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</para>\n        ",
            "documentation": "\n          <p>How often the scheduled audit takes place. Can be one of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</p>\n        ",
            "required": true,
            "shape_name": "AuditFrequency"
          },
          "dayOfMonth": {
            "type": "string",
            "pattern": "^([1-9]|[12][0-9]|3[01])$|^LAST$",
            "zonbookDocumentation": "\n          <para>The day of the month on which the scheduled audit takes place. Can be \"1\" \n            through \"31\" or \"LAST\". This field is required if the \"frequency\" parameter is\n            set to \"MONTHLY\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</para>\n        ",
            "documentation": "\n          <p>The day of the month on which the scheduled audit takes place. Can be \"1\" \n            through \"31\" or \"LAST\". This field is required if the \"frequency\" parameter is\n            set to \"MONTHLY\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</p>\n        ",
            "shape_name": "DayOfMonth"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "SUN",
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT"
            ],
            "zonbookDocumentation": "\n          <para>The day of the week on which the scheduled audit takes place. Can be one of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\". This field is required if the\n            \"frequency\" parameter is set to \"WEEKLY\" or \"BIWEEKLY\".</para>\n        ",
            "documentation": "\n          <p>The day of the week on which the scheduled audit takes place. Can be one of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\". This field is required if the\n            \"frequency\" parameter is set to \"WEEKLY\" or \"BIWEEKLY\".</p>\n        ",
            "shape_name": "DayOfWeek"
          },
          "targetCheckNames": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>Which checks are performed during the scheduled audit. Checks must be enabled \n            for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</para>\n        ",
            "documentation": "\n          <p>Which checks are performed during the scheduled audit. Checks must be enabled \n            for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</p>\n        ",
            "required": true,
            "shape_name": "TargetAuditCheckNames",
            "members": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            }
          },
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name you want to give to the scheduled audit. (Max. 128 chars)</para>\n        ",
            "documentation": "\n          <p>The name you want to give to the scheduled audit. (Max. 128 chars)</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "CreateScheduledAuditRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "scheduledAuditArn": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The ARN of the scheduled audit.</para>\n        ",
            "documentation": "\n          <p>The ARN of the scheduled audit.</p>\n        ",
            "shape_name": "ScheduledAuditArn"
          }
        },
        "shape_name": "CreateScheduledAuditResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a scheduled audit that is run at a specified \n          time interval.</p>\n      "
    },
    "UpdateScheduledAudit": {
      "name": "UpdateScheduledAudit",
      "http": {
        "method": "PATCH",
        "uri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "BIWEEKLY",
              "MONTHLY"
            ],
            "zonbookDocumentation": "\n          <para>How often the scheduled audit takes place. Can be one of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</para>\n        ",
            "documentation": "\n          <p>How often the scheduled audit takes place. Can be one of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</p>\n        ",
            "shape_name": "AuditFrequency"
          },
          "dayOfMonth": {
            "type": "string",
            "pattern": "^([1-9]|[12][0-9]|3[01])$|^LAST$",
            "zonbookDocumentation": "\n          <para>The day of the month on which the scheduled audit takes place. Can be \"1\" \n            through \"31\" or \"LAST\". This field is required if the \"frequency\" parameter is\n            set to \"MONTHLY\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</para>\n        ",
            "documentation": "\n          <p>The day of the month on which the scheduled audit takes place. Can be \"1\" \n            through \"31\" or \"LAST\". This field is required if the \"frequency\" parameter is\n            set to \"MONTHLY\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</p>\n        ",
            "shape_name": "DayOfMonth"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "SUN",
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT"
            ],
            "zonbookDocumentation": "\n          <para>The day of the week on which the scheduled audit takes place. Can be one of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\". This field is required if the\n            \"frequency\" parameter is set to \"WEEKLY\" or \"BIWEEKLY\".</para>\n        ",
            "documentation": "\n          <p>The day of the week on which the scheduled audit takes place. Can be one of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\". This field is required if the\n            \"frequency\" parameter is set to \"WEEKLY\" or \"BIWEEKLY\".</p>\n        ",
            "shape_name": "DayOfWeek"
          },
          "targetCheckNames": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>Which checks are performed during the scheduled audit. Checks must be enabled \n            for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</para>\n        ",
            "documentation": "\n          <p>Which checks are performed during the scheduled audit. Checks must be enabled \n            for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</p>\n        ",
            "shape_name": "TargetAuditCheckNames",
            "members": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            }
          },
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name of the scheduled audit. (Max. 128 chars)</para>\n        ",
            "documentation": "\n          <p>The name of the scheduled audit. (Max. 128 chars)</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "UpdateScheduledAuditRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "scheduledAuditArn": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The ARN of the scheduled audit.</para>\n        ",
            "documentation": "\n          <p>The ARN of the scheduled audit.</p>\n        ",
            "shape_name": "ScheduledAuditArn"
          }
        },
        "shape_name": "UpdateScheduledAuditResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a scheduled audit, including what checks are performed and\n          how often the audit takes place.</p>\n      "
    },
    "DeleteScheduledAudit": {
      "name": "DeleteScheduledAudit",
      "http": {
        "method": "DELETE",
        "uri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name of the scheduled audit you want to delete.</para>\n        ",
            "documentation": "\n          <p>The name of the scheduled audit you want to delete.</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteScheduledAuditRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteScheduledAuditResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a scheduled audit.</p>\n      "
    },
    "DescribeScheduledAudit": {
      "name": "DescribeScheduledAudit",
      "http": {
        "method": "GET",
        "uri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name of the scheduled audit whose information you want to get.</para>\n        ",
            "documentation": "\n          <p>The name of the scheduled audit whose information you want to get.</p>\n        ",
            "required": true,
            "location": "uri",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeScheduledAuditRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "BIWEEKLY",
              "MONTHLY"
            ],
            "zonbookDocumentation": "\n          <para>How often the scheduled audit takes place. One of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</para>\n        ",
            "documentation": "\n          <p>How often the scheduled audit takes place. One of \"DAILY\", \"WEEKLY\",\n            \"BIWEEKLY\" or \"MONTHLY\". The actual start time of each audit is determined by\n            the system.</p>\n        ",
            "shape_name": "AuditFrequency"
          },
          "dayOfMonth": {
            "type": "string",
            "pattern": "^([1-9]|[12][0-9]|3[01])$|^LAST$",
            "zonbookDocumentation": "\n          <para>The day of the month on which the scheduled audit takes place. Will be \"1\" \n            through \"31\" or \"LAST\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</para>\n        ",
            "documentation": "\n          <p>The day of the month on which the scheduled audit takes place. Will be \"1\" \n            through \"31\" or \"LAST\". If days 29-31 are specified, and the month does not have that many\n            days, the audit takes place on the \"LAST\" day of the month.</p>\n        ",
            "shape_name": "DayOfMonth"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "SUN",
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT"
            ],
            "zonbookDocumentation": "\n          <para>The day of the week on which the scheduled audit takes place. One of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\".</para>\n        ",
            "documentation": "\n          <p>The day of the week on which the scheduled audit takes place. One of\n            \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\" or \"SAT\".</p>\n        ",
            "shape_name": "DayOfWeek"
          },
          "targetCheckNames": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>Which checks are performed during the scheduled audit. (Note that checks must be \n            enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</para>\n        ",
            "documentation": "\n          <p>Which checks are performed during the scheduled audit. (Note that checks must be \n            enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n            of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n            to select which checks are enabled.)</p>\n        ",
            "shape_name": "TargetAuditCheckNames",
            "members": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</para>\n      ",
              "documentation": "\n         <p>An audit check name. Checks must be enabled \n        for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list\n        of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> \n        to select which checks are enabled.)</p>\n      ",
              "shape_name": "AuditCheckName"
            }
          },
          "scheduledAuditName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+",
            "zonbookDocumentation": "\n          <para>The name of the scheduled audit.</para>\n        ",
            "documentation": "\n          <p>The name of the scheduled audit.</p>\n        ",
            "shape_name": "ScheduledAuditName",
            "min_length": 1,
            "max_length": 128
          },
          "scheduledAuditArn": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The ARN of the scheduled audit.</para>\n        ",
            "documentation": "\n          <p>The ARN of the scheduled audit.</p>\n        ",
            "shape_name": "ScheduledAuditArn"
          }
        },
        "shape_name": "DescribeScheduledAuditResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about a scheduled audit.</p>\n      "
    },
    "ListScheduledAudits": {
      "name": "ListScheduledAudits",
      "http": {
        "method": "GET",
        "uri": "/audit/scheduledaudits?maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The token for the next set of results.</para>\n        ",
            "documentation": "\n          <p>The token for the next set of results.</p>\n        ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n          <para>The maximum number of results to return at one time. The default is 25.</para>\n        ",
            "documentation": "\n          <p>The maximum number of results to return at one time. The default is 25.</p>\n        ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListScheduledAuditsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "scheduledAudits": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>The list of scheduled audits.</para>\n        ",
            "documentation": "\n          <p>The list of scheduled audits.</p>\n        ",
            "shape_name": "ScheduledAuditMetadataList",
            "members": {
              "type": "structure",
              "members": {
                "scheduledAuditName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9_-]+",
                  "zonbookDocumentation": "\n         <para>The name of the scheduled audit.</para>\n      ",
                  "documentation": "\n         <p>The name of the scheduled audit.</p>\n      ",
                  "shape_name": "ScheduledAuditName",
                  "min_length": 1,
                  "max_length": 128
                },
                "scheduledAuditArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the scheduled audit.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the scheduled audit.</p>\n      ",
                  "shape_name": "ScheduledAuditArn"
                },
                "frequency": {
                  "type": "string",
                  "enum": [
                    "DAILY",
                    "WEEKLY",
                    "BIWEEKLY",
                    "MONTHLY"
                  ],
                  "zonbookDocumentation": "\n         <para>How often the scheduled audit takes place.</para>\n      ",
                  "documentation": "\n         <p>How often the scheduled audit takes place.</p>\n      ",
                  "shape_name": "AuditFrequency"
                },
                "dayOfMonth": {
                  "type": "string",
                  "pattern": "^([1-9]|[12][0-9]|3[01])$|^LAST$",
                  "zonbookDocumentation": "\n         <para>The day of the month on which the scheduled audit is run (if the\n          <code>frequency</code> is \"MONTHLY\").\n        If days 29-31 are specified, and the month does not have that many\n        days, the audit takes place on the \"LAST\" day of the month.</para>\n      ",
                  "documentation": "\n         <p>The day of the month on which the scheduled audit is run (if the\n          <code>frequency</code> is \"MONTHLY\").\n        If days 29-31 are specified, and the month does not have that many\n        days, the audit takes place on the \"LAST\" day of the month.</p>\n      ",
                  "shape_name": "DayOfMonth"
                },
                "dayOfWeek": {
                  "type": "string",
                  "enum": [
                    "SUN",
                    "MON",
                    "TUE",
                    "WED",
                    "THU",
                    "FRI",
                    "SAT"
                  ],
                  "zonbookDocumentation": "\n         <para>The day of the week on which the scheduled audit is run (if the\n          <code>frequency</code> is \"WEEKLY\" or \"BIWEEKLY\").</para>\n      ",
                  "documentation": "\n         <p>The day of the week on which the scheduled audit is run (if the\n          <code>frequency</code> is \"WEEKLY\" or \"BIWEEKLY\").</p>\n      ",
                  "shape_name": "DayOfWeek"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about the scheduled audit.</simpara>\n      ",
              "documentation": "\n         <p>Information about the scheduled audit.</p>\n      ",
              "shape_name": "ScheduledAuditMetadata"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>A token that can be used to retrieve the next set of results, \n            or <code>null</code> if there are no additional results.</para>\n        ",
            "documentation": "\n          <p>A token that can be used to retrieve the next set of results, \n            or <code>null</code> if there are no additional results.</p>\n        ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListScheduledAuditsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists all of your scheduled audits.</p>\n      "
    },
    "ListAuditFindings": {
      "name": "ListAuditFindings",
      "http": {
        "method": "POST",
        "uri": "/audit/findings"
      },
      "input": {
        "type": "structure",
        "members": {
          "taskId": {
            "type": "string",
            "pattern": "[a-zA-Z0-9\\-]+",
            "zonbookDocumentation": "\n          <para>A filter to limit results to the audit with the specified ID. You must\n            specify either the taskId or the startTime and endTime, but not both.</para>\n        ",
            "documentation": "\n          <p>A filter to limit results to the audit with the specified ID. You must\n            specify either the taskId or the startTime and endTime, but not both.</p>\n        ",
            "shape_name": "AuditTaskId",
            "min_length": 1,
            "max_length": 40
          },
          "checkName": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>A filter to limit results to the findings for the specified audit check.</para>\n        ",
            "documentation": "\n          <p>A filter to limit results to the findings for the specified audit check.</p>\n        ",
            "shape_name": "AuditCheckName"
          },
          "resourceIdentifier": {
            "type": "structure",
            "members": {
              "deviceCertificateId": {
                "type": "string",
                "pattern": "(0x)?[a-fA-F0-9]+",
                "zonbookDocumentation": "\n         <simpara>The ID of the certificate attached to the resource.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the certificate attached to the resource.</p>\n      ",
                "shape_name": "CertificateId",
                "min_length": 64,
                "max_length": 64
              },
              "caCertificateId": {
                "type": "string",
                "pattern": "(0x)?[a-fA-F0-9]+",
                "zonbookDocumentation": "\n         <simpara>The ID of the CA certificate used to authorize the certificate.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the CA certificate used to authorize the certificate.</p>\n      ",
                "shape_name": "CertificateId",
                "min_length": 64,
                "max_length": 64
              },
              "cognitoIdentityPoolId": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ID of the Cognito Identity Pool.</para>\n      ",
                "documentation": "\n        <p>The ID of the Cognito Identity Pool.</p>\n      ",
                "shape_name": "CognitoIdentityPoolId"
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The client ID.</para>\n      ",
                "documentation": "\n        <p>The client ID.</p>\n      ",
                "shape_name": "ClientId"
              },
              "policyVersionIdentifier": {
                "type": "structure",
                "members": {
                  "policyName": {
                    "type": "string",
                    "pattern": "[\\w+=,.@-]+",
                    "zonbookDocumentation": "\n        <para>The name of the policy.</para>\n      ",
                    "documentation": "\n        <p>The name of the policy.</p>\n      ",
                    "shape_name": "PolicyName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "policyVersionId": {
                    "type": "string",
                    "pattern": "[0-9]+",
                    "zonbookDocumentation": "\n         <simpara>The ID of the version of the policy associated with the resource.</simpara>\n      ",
                    "documentation": "\n         <p>The ID of the version of the policy associated with the resource.</p>\n      ",
                    "shape_name": "PolicyVersionId"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The version of the policy associated with the resource.</simpara>\n      ",
                "documentation": "\n         <p>The version of the policy associated with the resource.</p>\n      ",
                "shape_name": "PolicyVersionIdentifier"
              },
              "account": {
                "type": "string",
                "pattern": "[0-9]+",
                "zonbookDocumentation": "\n        <para>The account with which the resource is associated.</para>\n      ",
                "documentation": "\n        <p>The account with which the resource is associated.</p>\n      ",
                "shape_name": "AwsAccountId",
                "min_length": 12,
                "max_length": 12
              }
            },
            "zonbookDocumentation": "\n         <simpara>Information identifying the non-compliant resource.</simpara>\n      ",
            "documentation": "\n         <p>Information identifying the non-compliant resource.</p>\n      ",
            "shape_name": "ResourceIdentifier"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n          <para>The maximum number of results to return at one time. The default is 25.</para>\n        ",
            "documentation": "\n          <p>The maximum number of results to return at one time. The default is 25.</p>\n        ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>The token for the next set of results.</para>\n        ",
            "documentation": "\n          <p>The token for the next set of results.</p>\n        ",
            "shape_name": "NextToken"
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n          <para>A filter to limit results to those found after the specified time. You must\n            specify either the startTime and endTime or the taskId, but not both.</para>\n        ",
            "documentation": "\n          <p>A filter to limit results to those found after the specified time. You must\n            specify either the startTime and endTime or the taskId, but not both.</p>\n        ",
            "shape_name": "Timestamp"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n          <para>A filter to limit results to those found before the specified time. You must\n            specify either the startTime and endTime or the taskId, but not both.</para>\n        ",
            "documentation": "\n          <p>A filter to limit results to those found before the specified time. You must\n            specify either the startTime and endTime or the taskId, but not both.</p>\n        ",
            "shape_name": "Timestamp"
          }
        },
        "shape_name": "ListAuditFindingsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "findings": {
            "type": "list",
            "zonbookDocumentation": "\n          <para>The findings (results) of the audit.</para>\n        ",
            "documentation": "\n          <p>The findings (results) of the audit.</p>\n        ",
            "shape_name": "AuditFindings",
            "members": {
              "type": "structure",
              "members": {
                "taskId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n        <para>The ID of the audit that generated this result (finding)</para>\n      ",
                  "documentation": "\n        <p>The ID of the audit that generated this result (finding)</p>\n      ",
                  "shape_name": "AuditTaskId",
                  "min_length": 1,
                  "max_length": 40
                },
                "checkName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The audit check that generated this result.</para>\n      ",
                  "documentation": "\n        <p>The audit check that generated this result.</p>\n      ",
                  "shape_name": "AuditCheckName"
                },
                "taskStartTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <para>The time the audit started.</para>\n      ",
                  "documentation": "\n        <p>The time the audit started.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "findingTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <para>The time the result (finding) was discovered.</para>\n      ",
                  "documentation": "\n        <p>The time the result (finding) was discovered.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "severity": {
                  "type": "string",
                  "enum": [
                    "CRITICAL",
                    "HIGH",
                    "MEDIUM",
                    "LOW"
                  ],
                  "zonbookDocumentation": "\n        <para>The severity of the result (finding).</para>\n      ",
                  "documentation": "\n        <p>The severity of the result (finding).</p>\n      ",
                  "shape_name": "AuditFindingSeverity"
                },
                "nonCompliantResource": {
                  "type": "structure",
                  "members": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "DEVICE_CERTIFICATE",
                        "CA_CERTIFICATE",
                        "IOT_POLICY",
                        "COGNITO_IDENTITY_POOL",
                        "CLIENT_ID",
                        "ACCOUNT_SETTINGS"
                      ],
                      "zonbookDocumentation": "\n        <para>The type of the non-compliant resource.</para>\n      ",
                      "documentation": "\n        <p>The type of the non-compliant resource.</p>\n      ",
                      "shape_name": "ResourceType"
                    },
                    "resourceIdentifier": {
                      "type": "structure",
                      "members": {
                        "deviceCertificateId": {
                          "type": "string",
                          "pattern": "(0x)?[a-fA-F0-9]+",
                          "zonbookDocumentation": "\n         <simpara>The ID of the certificate attached to the resource.</simpara>\n      ",
                          "documentation": "\n         <p>The ID of the certificate attached to the resource.</p>\n      ",
                          "shape_name": "CertificateId",
                          "min_length": 64,
                          "max_length": 64
                        },
                        "caCertificateId": {
                          "type": "string",
                          "pattern": "(0x)?[a-fA-F0-9]+",
                          "zonbookDocumentation": "\n         <simpara>The ID of the CA certificate used to authorize the certificate.</simpara>\n      ",
                          "documentation": "\n         <p>The ID of the CA certificate used to authorize the certificate.</p>\n      ",
                          "shape_name": "CertificateId",
                          "min_length": 64,
                          "max_length": 64
                        },
                        "cognitoIdentityPoolId": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <para>The ID of the Cognito Identity Pool.</para>\n      ",
                          "documentation": "\n        <p>The ID of the Cognito Identity Pool.</p>\n      ",
                          "shape_name": "CognitoIdentityPoolId"
                        },
                        "clientId": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <para>The client ID.</para>\n      ",
                          "documentation": "\n        <p>The client ID.</p>\n      ",
                          "shape_name": "ClientId"
                        },
                        "policyVersionIdentifier": {
                          "type": "structure",
                          "members": {
                            "policyName": {
                              "type": "string",
                              "pattern": "[\\w+=,.@-]+",
                              "zonbookDocumentation": "\n        <para>The name of the policy.</para>\n      ",
                              "documentation": "\n        <p>The name of the policy.</p>\n      ",
                              "shape_name": "PolicyName",
                              "min_length": 1,
                              "max_length": 128
                            },
                            "policyVersionId": {
                              "type": "string",
                              "pattern": "[0-9]+",
                              "zonbookDocumentation": "\n         <simpara>The ID of the version of the policy associated with the resource.</simpara>\n      ",
                              "documentation": "\n         <p>The ID of the version of the policy associated with the resource.</p>\n      ",
                              "shape_name": "PolicyVersionId"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>The version of the policy associated with the resource.</simpara>\n      ",
                          "documentation": "\n         <p>The version of the policy associated with the resource.</p>\n      ",
                          "shape_name": "PolicyVersionIdentifier"
                        },
                        "account": {
                          "type": "string",
                          "pattern": "[0-9]+",
                          "zonbookDocumentation": "\n        <para>The account with which the resource is associated.</para>\n      ",
                          "documentation": "\n        <p>The account with which the resource is associated.</p>\n      ",
                          "shape_name": "AwsAccountId",
                          "min_length": 12,
                          "max_length": 12
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Information identifying the non-compliant resource.</para>\n      ",
                      "documentation": "\n        <p>Information identifying the non-compliant resource.</p>\n      ",
                      "shape_name": "ResourceIdentifier"
                    },
                    "additionalInfo": {
                      "type": "map",
                      "zonbookDocumentation": "\n        <para>Additional information about the non-compliant resource.</para>\n      ",
                      "documentation": "\n        <p>Additional information about the non-compliant resource.</p>\n      ",
                      "shape_name": "StringMap",
                      "keys": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <para>The resource that was found to be non-compliant with the\n        audit check.</para>\n      ",
                  "documentation": "\n        <p>The resource that was found to be non-compliant with the\n        audit check.</p>\n      ",
                  "shape_name": "NonCompliantResource"
                },
                "relatedResources": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <para>The list of related resources.</para>\n      ",
                  "documentation": "\n        <p>The list of related resources.</p>\n      ",
                  "shape_name": "RelatedResources",
                  "members": {
                    "type": "structure",
                    "members": {
                      "resourceType": {
                        "type": "string",
                        "enum": [
                          "DEVICE_CERTIFICATE",
                          "CA_CERTIFICATE",
                          "IOT_POLICY",
                          "COGNITO_IDENTITY_POOL",
                          "CLIENT_ID",
                          "ACCOUNT_SETTINGS"
                        ],
                        "zonbookDocumentation": "\n        <para>The type of resource.</para>\n      ",
                        "documentation": "\n        <p>The type of resource.</p>\n      ",
                        "shape_name": "ResourceType"
                      },
                      "resourceIdentifier": {
                        "type": "structure",
                        "members": {
                          "deviceCertificateId": {
                            "type": "string",
                            "pattern": "(0x)?[a-fA-F0-9]+",
                            "zonbookDocumentation": "\n         <simpara>The ID of the certificate attached to the resource.</simpara>\n      ",
                            "documentation": "\n         <p>The ID of the certificate attached to the resource.</p>\n      ",
                            "shape_name": "CertificateId",
                            "min_length": 64,
                            "max_length": 64
                          },
                          "caCertificateId": {
                            "type": "string",
                            "pattern": "(0x)?[a-fA-F0-9]+",
                            "zonbookDocumentation": "\n         <simpara>The ID of the CA certificate used to authorize the certificate.</simpara>\n      ",
                            "documentation": "\n         <p>The ID of the CA certificate used to authorize the certificate.</p>\n      ",
                            "shape_name": "CertificateId",
                            "min_length": 64,
                            "max_length": 64
                          },
                          "cognitoIdentityPoolId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>The ID of the Cognito Identity Pool.</para>\n      ",
                            "documentation": "\n        <p>The ID of the Cognito Identity Pool.</p>\n      ",
                            "shape_name": "CognitoIdentityPoolId"
                          },
                          "clientId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>The client ID.</para>\n      ",
                            "documentation": "\n        <p>The client ID.</p>\n      ",
                            "shape_name": "ClientId"
                          },
                          "policyVersionIdentifier": {
                            "type": "structure",
                            "members": {
                              "policyName": {
                                "type": "string",
                                "pattern": "[\\w+=,.@-]+",
                                "zonbookDocumentation": "\n        <para>The name of the policy.</para>\n      ",
                                "documentation": "\n        <p>The name of the policy.</p>\n      ",
                                "shape_name": "PolicyName",
                                "min_length": 1,
                                "max_length": 128
                              },
                              "policyVersionId": {
                                "type": "string",
                                "pattern": "[0-9]+",
                                "zonbookDocumentation": "\n         <simpara>The ID of the version of the policy associated with the resource.</simpara>\n      ",
                                "documentation": "\n         <p>The ID of the version of the policy associated with the resource.</p>\n      ",
                                "shape_name": "PolicyVersionId"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>The version of the policy associated with the resource.</simpara>\n      ",
                            "documentation": "\n         <p>The version of the policy associated with the resource.</p>\n      ",
                            "shape_name": "PolicyVersionIdentifier"
                          },
                          "account": {
                            "type": "string",
                            "pattern": "[0-9]+",
                            "zonbookDocumentation": "\n        <para>The account with which the resource is associated.</para>\n      ",
                            "documentation": "\n        <p>The account with which the resource is associated.</p>\n      ",
                            "shape_name": "AwsAccountId",
                            "min_length": 12,
                            "max_length": 12
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Information identifying the resource.</para>\n      ",
                        "documentation": "\n        <p>Information identifying the resource.</p>\n      ",
                        "shape_name": "ResourceIdentifier"
                      },
                      "additionalInfo": {
                        "type": "map",
                        "zonbookDocumentation": "\n         <simpara>Additional information about the resource.</simpara>\n      ",
                        "documentation": "\n         <p>Additional information about the resource.</p>\n      ",
                        "shape_name": "StringMap",
                        "keys": {
                          "type": "string",
                          "shape_name": "String",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "String",
                          "documentation": null
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Information about a related resource.</simpara>\n      ",
                    "documentation": "\n         <p>Information about a related resource.</p>\n      ",
                    "shape_name": "RelatedResource"
                  }
                },
                "reasonForNonCompliance": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The reason the resource was non-compliant.</para>\n      ",
                  "documentation": "\n        <p>The reason the resource was non-compliant.</p>\n      ",
                  "shape_name": "ReasonForNonCompliance"
                },
                "reasonForNonComplianceCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>A code which indicates the reason that the resource was non-compliant.</simpara>\n      ",
                  "documentation": "\n         <p>A code which indicates the reason that the resource was non-compliant.</p>\n      ",
                  "shape_name": "ReasonForNonComplianceCode"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The findings (results) of the audit.</simpara>\n      ",
              "documentation": "\n         <p>The findings (results) of the audit.</p>\n      ",
              "shape_name": "AuditFinding"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n          <para>A token that can be used to retrieve the next set of results, or <code>null</code> \n            if there are no additional results.</para>\n        ",
            "documentation": "\n          <p>A token that can be used to retrieve the next set of results, or <code>null</code> \n            if there are no additional results.</p>\n        ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListAuditFindingsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the findings (results) of a Device Defender audit or of the audits\n        performed during a specified time period. (Findings are retained for 180 days.)</p>\n      "
    },
    "CreateSecurityProfile": {
      "name": "CreateSecurityProfile",
      "http": {
        "method": "POST",
        "uri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name you are giving to the security profile.</para>\n      ",
            "documentation": "\n         <p>The name you are giving to the security profile.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileDescription": {
            "type": "string",
            "pattern": "[\\p{Graph}\\x20]*",
            "zonbookDocumentation": "\n         <para>A description of the security profile.</para>\n      ",
            "documentation": "\n         <p>A description of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileDescription",
            "max_length": 1000
          },
          "behaviors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies the behaviors that, when violated by a device (thing), cause an alert.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>\n      ",
            "required": true,
            "shape_name": "Behaviors",
            "max_length": 100,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                  "required": true,
                  "shape_name": "BehaviorName",
                  "min_length": 1,
                  "max_length": 128
                },
                "metric": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                  "shape_name": "BehaviorMetric"
                },
                "criteria": {
                  "type": "structure",
                  "members": {
                    "comparisonOperator": {
                      "type": "string",
                      "enum": [
                        "less-than",
                        "less-than-equals",
                        "greater-than",
                        "greater-than-equals",
                        "in-cidr-set",
                        "not-in-cidr-set",
                        "in-port-set",
                        "not-in-port-set"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                      "shape_name": "ComparisonOperator"
                    },
                    "value": {
                      "type": "structure",
                      "members": {
                        "count": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "UnsignedLong",
                          "min_length": 0
                        },
                        "cidrs": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Cidrs",
                          "members": {
                            "type": "string",
                            "pattern": "[a-fA-F0-9:\\.\\/]+",
                            "shape_name": "Cidr",
                            "documentation": null,
                            "min_length": 2,
                            "max_length": 43
                          }
                        },
                        "ports": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Ports",
                          "members": {
                            "type": "integer",
                            "shape_name": "Port",
                            "documentation": null,
                            "min_length": 0,
                            "max_length": 65535
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "MetricValue"
                    },
                    "durationSeconds": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                      "shape_name": "DurationSeconds"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                  "shape_name": "BehaviorCriteria"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A Device Defender security profile behavior.</simpara>\n      ",
              "documentation": "\n         <p>A Device Defender security profile behavior.</p>\n      ",
              "shape_name": "Behavior"
            }
          },
          "alertTargets": {
            "type": "map",
            "zonbookDocumentation": "\n         <para>Specifies the destinations to which alerts are sent. (Alerts are always sent to the \n        console.) Alerts are generated when a device (thing) violates a behavior.</para>\n      ",
            "documentation": "\n         <p>Specifies the destinations to which alerts are sent. (Alerts are always sent to the \n        console.) Alerts are generated when a device (thing) violates a behavior.</p>\n      ",
            "shape_name": "AlertTargets",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The type of alert target: one of \"SNS\".</para>\n      ",
              "documentation": "\n         <p>The type of alert target: one of \"SNS\".</p>\n      ",
              "enum": [
                "SNS"
              ],
              "shape_name": "AlertTargetType"
            },
            "members": {
              "type": "structure",
              "members": {
                "alertTargetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the notification target to which alerts are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the notification target to which alerts are sent.</p>\n      ",
                  "required": true,
                  "shape_name": "AlertTargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send alerts to the \n        notification target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send alerts to the \n        notification target.</p>\n      ",
                  "required": true,
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <para>A structure containing the alert target ARN and the role ARN.</para>\n      ",
              "documentation": "\n         <p>A structure containing the alert target ARN and the role ARN.</p>\n      ",
              "shape_name": "AlertTarget"
            }
          }
        },
        "shape_name": "CreateSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name you gave to the security profile.</para>\n      ",
            "documentation": "\n         <p>The name you gave to the security profile.</p>\n      ",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the security profile.</para>\n      ",
            "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileArn"
          }
        },
        "shape_name": "CreateSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ID of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ID of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The ARN of the resource that caused the exception.</simpara>\n      ",
              "documentation": "\n         <p>The ARN of the resource that caused the exception.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The resource already exists.</simpara>\n      ",
          "documentation": "\n         <p>The resource already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a Device Defender security profile.</p>\n      "
    },
    "DescribeSecurityProfile": {
      "name": "DescribeSecurityProfile",
      "http": {
        "method": "GET",
        "uri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name of the security profile whose information you want to get.</para>\n      ",
            "documentation": "\n         <p>The name of the security profile whose information you want to get.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name of the security profile.</para>\n      ",
            "documentation": "\n         <p>The name of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the security profile.</para>\n      ",
            "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileArn"
          },
          "securityProfileDescription": {
            "type": "string",
            "pattern": "[\\p{Graph}\\x20]*",
            "zonbookDocumentation": "\n         <para>A description of the security profile (associated with the security profile\n        when it was created or updated).</para>\n      ",
            "documentation": "\n         <p>A description of the security profile (associated with the security profile\n        when it was created or updated).</p>\n      ",
            "shape_name": "SecurityProfileDescription",
            "max_length": 1000
          },
          "behaviors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies the behaviors that, when violated by a device (thing), cause an alert.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>\n      ",
            "shape_name": "Behaviors",
            "max_length": 100,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                  "required": true,
                  "shape_name": "BehaviorName",
                  "min_length": 1,
                  "max_length": 128
                },
                "metric": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                  "shape_name": "BehaviorMetric"
                },
                "criteria": {
                  "type": "structure",
                  "members": {
                    "comparisonOperator": {
                      "type": "string",
                      "enum": [
                        "less-than",
                        "less-than-equals",
                        "greater-than",
                        "greater-than-equals",
                        "in-cidr-set",
                        "not-in-cidr-set",
                        "in-port-set",
                        "not-in-port-set"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                      "shape_name": "ComparisonOperator"
                    },
                    "value": {
                      "type": "structure",
                      "members": {
                        "count": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "UnsignedLong",
                          "min_length": 0
                        },
                        "cidrs": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Cidrs",
                          "members": {
                            "type": "string",
                            "pattern": "[a-fA-F0-9:\\.\\/]+",
                            "shape_name": "Cidr",
                            "documentation": null,
                            "min_length": 2,
                            "max_length": 43
                          }
                        },
                        "ports": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Ports",
                          "members": {
                            "type": "integer",
                            "shape_name": "Port",
                            "documentation": null,
                            "min_length": 0,
                            "max_length": 65535
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "MetricValue"
                    },
                    "durationSeconds": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                      "shape_name": "DurationSeconds"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                  "shape_name": "BehaviorCriteria"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A Device Defender security profile behavior.</simpara>\n      ",
              "documentation": "\n         <p>A Device Defender security profile behavior.</p>\n      ",
              "shape_name": "Behavior"
            }
          },
          "alertTargets": {
            "type": "map",
            "zonbookDocumentation": "\n         <para>Where the alerts are sent. (Alerts are always sent to the console.)</para>\n      ",
            "documentation": "\n         <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>\n      ",
            "shape_name": "AlertTargets",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The type of alert target: one of \"SNS\".</para>\n      ",
              "documentation": "\n         <p>The type of alert target: one of \"SNS\".</p>\n      ",
              "enum": [
                "SNS"
              ],
              "shape_name": "AlertTargetType"
            },
            "members": {
              "type": "structure",
              "members": {
                "alertTargetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the notification target to which alerts are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the notification target to which alerts are sent.</p>\n      ",
                  "required": true,
                  "shape_name": "AlertTargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send alerts to the \n        notification target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send alerts to the \n        notification target.</p>\n      ",
                  "required": true,
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <para>A structure containing the alert target ARN and the role ARN.</para>\n      ",
              "documentation": "\n         <p>A structure containing the alert target ARN and the role ARN.</p>\n      ",
              "shape_name": "AlertTarget"
            }
          },
          "version": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The version of the security profile. A new version is generated whenever the\n        security profile is updated.</para>\n      ",
            "documentation": "\n         <p>The version of the security profile. A new version is generated whenever the\n        security profile is updated.</p>\n      ",
            "shape_name": "Version"
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time the security profile was created.</simpara>\n      ",
            "documentation": "\n         <p>The time the security profile was created.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time the security profile was last modified.</simpara>\n      ",
            "documentation": "\n         <p>The time the security profile was last modified.</p>\n      ",
            "shape_name": "Timestamp"
          }
        },
        "shape_name": "DescribeSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Gets information about a Device Defender security profile.</p>\n      "
    },
    "UpdateSecurityProfile": {
      "name": "UpdateSecurityProfile",
      "http": {
        "method": "PATCH",
        "uri": "/security-profiles/{securityProfileName}?expectedVersion={expectedVersion}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name of the security profile you want to update.</para>\n      ",
            "documentation": "\n         <p>The name of the security profile you want to update.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileDescription": {
            "type": "string",
            "pattern": "[\\p{Graph}\\x20]*",
            "zonbookDocumentation": "\n         <para>A description of the security profile.</para>\n      ",
            "documentation": "\n         <p>A description of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileDescription",
            "max_length": 1000
          },
          "behaviors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies the behaviors that, when violated by a device (thing), cause an alert.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>\n      ",
            "shape_name": "Behaviors",
            "max_length": 100,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                  "required": true,
                  "shape_name": "BehaviorName",
                  "min_length": 1,
                  "max_length": 128
                },
                "metric": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                  "shape_name": "BehaviorMetric"
                },
                "criteria": {
                  "type": "structure",
                  "members": {
                    "comparisonOperator": {
                      "type": "string",
                      "enum": [
                        "less-than",
                        "less-than-equals",
                        "greater-than",
                        "greater-than-equals",
                        "in-cidr-set",
                        "not-in-cidr-set",
                        "in-port-set",
                        "not-in-port-set"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                      "shape_name": "ComparisonOperator"
                    },
                    "value": {
                      "type": "structure",
                      "members": {
                        "count": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "UnsignedLong",
                          "min_length": 0
                        },
                        "cidrs": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Cidrs",
                          "members": {
                            "type": "string",
                            "pattern": "[a-fA-F0-9:\\.\\/]+",
                            "shape_name": "Cidr",
                            "documentation": null,
                            "min_length": 2,
                            "max_length": 43
                          }
                        },
                        "ports": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Ports",
                          "members": {
                            "type": "integer",
                            "shape_name": "Port",
                            "documentation": null,
                            "min_length": 0,
                            "max_length": 65535
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "MetricValue"
                    },
                    "durationSeconds": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                      "shape_name": "DurationSeconds"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                  "shape_name": "BehaviorCriteria"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A Device Defender security profile behavior.</simpara>\n      ",
              "documentation": "\n         <p>A Device Defender security profile behavior.</p>\n      ",
              "shape_name": "Behavior"
            }
          },
          "alertTargets": {
            "type": "map",
            "zonbookDocumentation": "\n         <para>Where the alerts are sent. (Alerts are always sent to the console.)</para>\n      ",
            "documentation": "\n         <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>\n      ",
            "shape_name": "AlertTargets",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The type of alert target: one of \"SNS\".</para>\n      ",
              "documentation": "\n         <p>The type of alert target: one of \"SNS\".</p>\n      ",
              "enum": [
                "SNS"
              ],
              "shape_name": "AlertTargetType"
            },
            "members": {
              "type": "structure",
              "members": {
                "alertTargetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the notification target to which alerts are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the notification target to which alerts are sent.</p>\n      ",
                  "required": true,
                  "shape_name": "AlertTargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send alerts to the \n        notification target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send alerts to the \n        notification target.</p>\n      ",
                  "required": true,
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <para>A structure containing the alert target ARN and the role ARN.</para>\n      ",
              "documentation": "\n         <p>A structure containing the alert target ARN and the role ARN.</p>\n      ",
              "shape_name": "AlertTarget"
            }
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The expected version of the security profile. A new version is generated whenever\n        the security profile is updated. If you specify a value that is different than the actual\n        version, a <code>VersionConflictException</code> is thrown.</para>\n      ",
            "documentation": "\n         <p>The expected version of the security profile. A new version is generated whenever\n        the security profile is updated. If you specify a value that is different than the actual\n        version, a <code>VersionConflictException</code> is thrown.</p>\n      ",
            "location": "uri",
            "shape_name": "OptionalVersion"
          }
        },
        "shape_name": "UpdateSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name of the security profile that was updated.</para>\n      ",
            "documentation": "\n         <p>The name of the security profile that was updated.</p>\n      ",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the security profile that was updated.</para>\n      ",
            "documentation": "\n         <p>The ARN of the security profile that was updated.</p>\n      ",
            "shape_name": "SecurityProfileArn"
          },
          "securityProfileDescription": {
            "type": "string",
            "pattern": "[\\p{Graph}\\x20]*",
            "zonbookDocumentation": "\n         <para>The description of the security profile.</para>\n      ",
            "documentation": "\n         <p>The description of the security profile.</p>\n      ",
            "shape_name": "SecurityProfileDescription",
            "max_length": 1000
          },
          "behaviors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies the behaviors that, when violated by a device (thing), cause an alert.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>\n      ",
            "shape_name": "Behaviors",
            "max_length": 100,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                  "required": true,
                  "shape_name": "BehaviorName",
                  "min_length": 1,
                  "max_length": 128
                },
                "metric": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                  "shape_name": "BehaviorMetric"
                },
                "criteria": {
                  "type": "structure",
                  "members": {
                    "comparisonOperator": {
                      "type": "string",
                      "enum": [
                        "less-than",
                        "less-than-equals",
                        "greater-than",
                        "greater-than-equals",
                        "in-cidr-set",
                        "not-in-cidr-set",
                        "in-port-set",
                        "not-in-port-set"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                      "shape_name": "ComparisonOperator"
                    },
                    "value": {
                      "type": "structure",
                      "members": {
                        "count": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "UnsignedLong",
                          "min_length": 0
                        },
                        "cidrs": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Cidrs",
                          "members": {
                            "type": "string",
                            "pattern": "[a-fA-F0-9:\\.\\/]+",
                            "shape_name": "Cidr",
                            "documentation": null,
                            "min_length": 2,
                            "max_length": 43
                          }
                        },
                        "ports": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Ports",
                          "members": {
                            "type": "integer",
                            "shape_name": "Port",
                            "documentation": null,
                            "min_length": 0,
                            "max_length": 65535
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "MetricValue"
                    },
                    "durationSeconds": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                      "shape_name": "DurationSeconds"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                  "shape_name": "BehaviorCriteria"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A Device Defender security profile behavior.</simpara>\n      ",
              "documentation": "\n         <p>A Device Defender security profile behavior.</p>\n      ",
              "shape_name": "Behavior"
            }
          },
          "alertTargets": {
            "type": "map",
            "zonbookDocumentation": "\n         <para>Where the alerts are sent. (Alerts are always sent to the console.)</para>\n      ",
            "documentation": "\n         <p>Where the alerts are sent. (Alerts are always sent to the console.)</p>\n      ",
            "shape_name": "AlertTargets",
            "keys": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The type of alert target: one of \"SNS\".</para>\n      ",
              "documentation": "\n         <p>The type of alert target: one of \"SNS\".</p>\n      ",
              "enum": [
                "SNS"
              ],
              "shape_name": "AlertTargetType"
            },
            "members": {
              "type": "structure",
              "members": {
                "alertTargetArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the notification target to which alerts are sent.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the notification target to which alerts are sent.</p>\n      ",
                  "required": true,
                  "shape_name": "AlertTargetArn"
                },
                "roleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to send alerts to the \n        notification target.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the role that grants permission to send alerts to the \n        notification target.</p>\n      ",
                  "required": true,
                  "shape_name": "RoleArn",
                  "min_length": 20,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <para>A structure containing the alert target ARN and the role ARN.</para>\n      ",
              "documentation": "\n         <p>A structure containing the alert target ARN and the role ARN.</p>\n      ",
              "shape_name": "AlertTarget"
            }
          },
          "version": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The updated version of the security profile.</para>\n      ",
            "documentation": "\n         <p>The updated version of the security profile.</p>\n      ",
            "shape_name": "Version"
          },
          "creationDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time the security profile was created.</simpara>\n      ",
            "documentation": "\n         <p>The time the security profile was created.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "lastModifiedDate": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time the security profile was last modified.</simpara>\n      ",
            "documentation": "\n         <p>The time the security profile was last modified.</p>\n      ",
            "shape_name": "Timestamp"
          }
        },
        "shape_name": "UpdateSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a Device Defender security profile.</p>\n      "
    },
    "DeleteSecurityProfile": {
      "name": "DeleteSecurityProfile",
      "http": {
        "method": "DELETE",
        "uri": "/security-profiles/{securityProfileName}?expectedVersion={expectedVersion}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The name of the security profile to be deleted.</para>\n      ",
            "documentation": "\n         <p>The name of the security profile to be deleted.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "expectedVersion": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The expected version of the security profile. A new version is generated whenever\n        the security profile is updated. If you specify a value that is different than the actual\n        version, a <code>VersionConflictException</code> is thrown.</para>\n      ",
            "documentation": "\n         <p>The expected version of the security profile. A new version is generated whenever\n        the security profile is updated. If you specify a value that is different than the actual\n        version, a <code>VersionConflictException</code> is thrown.</p>\n      ",
            "location": "uri",
            "shape_name": "OptionalVersion"
          }
        },
        "shape_name": "DeleteSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        }
      ],
      "documentation": "\n         <p>Deletes a Device Defender security profile.</p>\n      "
    },
    "AttachSecurityProfile": {
      "name": "AttachSecurityProfile",
      "http": {
        "method": "PUT",
        "uri": "/security-profiles/{securityProfileName}/targets?securityProfileTargetArn={securityProfileTargetArn}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The security profile that is attached.</para>\n      ",
            "documentation": "\n         <p>The security profile that is attached.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileTargetArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the target (thing group) to which the security profile is attached.</para>\n      ",
            "documentation": "\n         <p>The ARN of the target (thing group) to which the security profile is attached.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileTargetArn"
          }
        },
        "shape_name": "AttachSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "AttachSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A limit has been exceeded.</simpara>\n      ",
          "documentation": "\n         <p>A limit has been exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</simpara>\n      ",
          "documentation": "\n         <p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> \n      parameter does not match the latest version in the system.</p>\n      ",
          "shape_name": "VersionConflictException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Associates a Device Defender security profile with a thing group or with this account. Each \n        thing group or account can have up to five security profiles associated with it.</p>\n      "
    },
    "DetachSecurityProfile": {
      "name": "DetachSecurityProfile",
      "http": {
        "method": "DELETE",
        "uri": "/security-profiles/{securityProfileName}/targets?securityProfileTargetArn={securityProfileTargetArn}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The security profile that is detached.</para>\n      ",
            "documentation": "\n         <p>The security profile that is detached.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileTargetArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the thing group from which the security profile is detached.</para>\n      ",
            "documentation": "\n         <p>The ARN of the thing group from which the security profile is detached.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileTargetArn"
          }
        },
        "shape_name": "DetachSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DetachSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Disassociates a Device Defender security profile from a thing group or from this account.</p>\n      "
    },
    "ListSecurityProfiles": {
      "name": "ListSecurityProfiles",
      "http": {
        "method": "GET",
        "uri": "/security-profiles?maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return at one time.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListSecurityProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileIdentifiers": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of security profile identifiers (names and ARNs).</para>\n      ",
            "documentation": "\n         <p>A list of security profile identifiers (names and ARNs).</p>\n      ",
            "shape_name": "SecurityProfileIdentifiers",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the security profile.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the security profile.</p>\n      ",
                  "required": true,
                  "shape_name": "SecurityProfileName",
                  "min_length": 1,
                  "max_length": 128
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the security profile.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
                  "required": true,
                  "shape_name": "SecurityProfileArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Identifying information for a Device Defender security profile.</simpara>\n      ",
              "documentation": "\n         <p>Identifying information for a Device Defender security profile.</p>\n      ",
              "shape_name": "SecurityProfileIdentifier"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</para>\n      ",
            "documentation": "\n         <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSecurityProfilesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the Device Defender security profiles you have created. You can use filters to list only those security \n      profiles associated with a thing group or only those associated with your account.</p>\n      "
    },
    "ListSecurityProfilesForTarget": {
      "name": "ListSecurityProfilesForTarget",
      "http": {
        "method": "GET",
        "uri": "/security-profiles-for-target?maxResults={maxResults}&nextToken={nextToken}&recursive={recursive}&securityProfileTargetArn={securityProfileTargetArn}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return at one time.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          },
          "recursive": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>If true, return child groups as well.</para>\n      ",
            "documentation": "\n         <p>If true, return child groups as well.</p>\n      ",
            "location": "uri",
            "shape_name": "Recursive"
          },
          "securityProfileTargetArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the target (thing group) whose attached security profiles you want to get.</para>\n      ",
            "documentation": "\n         <p>The ARN of the target (thing group) whose attached security profiles you want to get.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileTargetArn"
          }
        },
        "shape_name": "ListSecurityProfilesForTargetRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileTargetMappings": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of security profiles and their associated targets.</simpara>\n      ",
            "documentation": "\n         <p>A list of security profiles and their associated targets.</p>\n      ",
            "shape_name": "SecurityProfileTargetMappings",
            "members": {
              "type": "structure",
              "members": {
                "securityProfileIdentifier": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9:_-]+",
                      "zonbookDocumentation": "\n         <simpara>The name you have given to the security profile.</simpara>\n      ",
                      "documentation": "\n         <p>The name you have given to the security profile.</p>\n      ",
                      "required": true,
                      "shape_name": "SecurityProfileName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The ARN of the security profile.</simpara>\n      ",
                      "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
                      "required": true,
                      "shape_name": "SecurityProfileArn"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Information that identifies the security profile.</simpara>\n      ",
                  "documentation": "\n         <p>Information that identifies the security profile.</p>\n      ",
                  "shape_name": "SecurityProfileIdentifier"
                },
                "target": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The ARN of the security profile.</simpara>\n      ",
                      "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
                      "required": true,
                      "shape_name": "SecurityProfileTargetArn"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Information about the target (thing group) associated with the security profile.</simpara>\n      ",
                  "documentation": "\n         <p>Information about the target (thing group) associated with the security profile.</p>\n      ",
                  "shape_name": "SecurityProfileTarget"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a security profile and the target associated with it.</simpara>\n      ",
              "documentation": "\n         <p>Information about a security profile and the target associated with it.</p>\n      ",
              "shape_name": "SecurityProfileTargetMapping"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</para>\n      ",
            "documentation": "\n         <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSecurityProfilesForTargetResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n        <p>Lists the Device Defender security profiles attached to a target (thing group).</p>\n      "
    },
    "ListTargetsForSecurityProfile": {
      "name": "ListTargetsForSecurityProfile",
      "http": {
        "method": "GET",
        "uri": "/security-profiles/{securityProfileName}/targets?maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>The security profile.</para>\n      ",
            "documentation": "\n         <p>The security profile.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return at one time.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListTargetsForSecurityProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "securityProfileTargets": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The thing groups to which the security profile is attached.</para>\n      ",
            "documentation": "\n         <p>The thing groups to which the security profile is attached.</p>\n      ",
            "shape_name": "SecurityProfileTargets",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ARN of the security profile.</simpara>\n      ",
                  "documentation": "\n         <p>The ARN of the security profile.</p>\n      ",
                  "required": true,
                  "shape_name": "SecurityProfileTargetArn"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A target to which an alert is sent when a security profile behavior is \n          violated.</simpara>\n      ",
              "documentation": "\n         <p>A target to which an alert is sent when a security profile behavior is \n          violated.</p>\n      ",
              "shape_name": "SecurityProfileTarget"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</para>\n      ",
            "documentation": "\n         <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListTargetsForSecurityProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the targets (thing groups) associated with a given Device Defender security profile.</p>\n      "
    },
    "ListActiveViolations": {
      "name": "ListActiveViolations",
      "http": {
        "method": "GET",
        "uri": "/active-violations?maxResults={maxResults}&nextToken={nextToken}&thingName={thingName}&securityProfileName={securityProfileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n        <para>The name of the thing whose active violations are listed.</para>\n      ",
            "documentation": "\n        <p>The name of the thing whose active violations are listed.</p>\n      ",
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n        <para>The name of the Device Defender security profile for which violations are listed.</para>\n      ",
            "documentation": "\n        <p>The name of the Device Defender security profile for which violations are listed.</p>\n      ",
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n        <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <para>The maximum number of results to return at one time.</para>\n      ",
            "documentation": "\n        <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListActiveViolationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "activeViolations": {
            "type": "list",
            "zonbookDocumentation": "\n        <para>The list of active violations.</para>\n      ",
            "documentation": "\n        <p>The list of active violations.</p>\n      ",
            "shape_name": "ActiveViolations",
            "members": {
              "type": "structure",
              "members": {
                "violationId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n         <para>The ID of the active violation.</para>\n      ",
                  "documentation": "\n         <p>The ID of the active violation.</p>\n      ",
                  "shape_name": "ViolationId",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <para>The name of the thing responsible for the active violation.</para>\n      ",
                  "documentation": "\n         <p>The name of the thing responsible for the active violation.</p>\n      ",
                  "shape_name": "ThingName",
                  "min_length": 1,
                  "max_length": 128
                },
                "securityProfileName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <para>The security profile whose behavior is in violation.</para>\n      ",
                  "documentation": "\n         <p>The security profile whose behavior is in violation.</p>\n      ",
                  "shape_name": "SecurityProfileName",
                  "min_length": 1,
                  "max_length": 128
                },
                "behavior": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9:_-]+",
                      "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                      "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                      "required": true,
                      "shape_name": "BehaviorName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "metric": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                      "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                      "shape_name": "BehaviorMetric"
                    },
                    "criteria": {
                      "type": "structure",
                      "members": {
                        "comparisonOperator": {
                          "type": "string",
                          "enum": [
                            "less-than",
                            "less-than-equals",
                            "greater-than",
                            "greater-than-equals",
                            "in-cidr-set",
                            "not-in-cidr-set",
                            "in-port-set",
                            "not-in-port-set"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                          "shape_name": "ComparisonOperator"
                        },
                        "value": {
                          "type": "structure",
                          "members": {
                            "count": {
                              "type": "long",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "UnsignedLong",
                              "min_length": 0
                            },
                            "cidrs": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "Cidrs",
                              "members": {
                                "type": "string",
                                "pattern": "[a-fA-F0-9:\\.\\/]+",
                                "shape_name": "Cidr",
                                "documentation": null,
                                "min_length": 2,
                                "max_length": 43
                              }
                            },
                            "ports": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "Ports",
                              "members": {
                                "type": "integer",
                                "shape_name": "Port",
                                "documentation": null,
                                "min_length": 0,
                                "max_length": 65535
                              }
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "MetricValue"
                        },
                        "durationSeconds": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                          "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                          "shape_name": "DurationSeconds"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                      "shape_name": "BehaviorCriteria"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The behavior which is being violated.</simpara>\n      ",
                  "documentation": "\n         <p>The behavior which is being violated.</p>\n      ",
                  "shape_name": "Behavior"
                },
                "lastViolationValue": {
                  "type": "structure",
                  "members": {
                    "count": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "UnsignedLong",
                      "min_length": 0
                    },
                    "cidrs": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "Cidrs",
                      "members": {
                        "type": "string",
                        "pattern": "[a-fA-F0-9:\\.\\/]+",
                        "shape_name": "Cidr",
                        "documentation": null,
                        "min_length": 2,
                        "max_length": 43
                      }
                    },
                    "ports": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "Ports",
                      "members": {
                        "type": "integer",
                        "shape_name": "Port",
                        "documentation": null,
                        "min_length": 0,
                        "max_length": 65535
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The value of the metric (the measurement) which caused the most recent violation.</para>\n      ",
                  "documentation": "\n         <p>The value of the metric (the measurement) which caused the most recent violation.</p>\n      ",
                  "shape_name": "MetricValue"
                },
                "lastViolationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time the most recent violation occurred.</para>\n      ",
                  "documentation": "\n         <p>The time the most recent violation occurred.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "violationStartTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time the violation started.</para>\n      ",
                  "documentation": "\n         <p>The time the violation started.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about an active Device Defender security profile behavior violation.</simpara>\n      ",
              "documentation": "\n         <p>Information about an active Device Defender security profile behavior violation.</p>\n      ",
              "shape_name": "ActiveViolation"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>A token that can be used to retrieve the next set of results, \n            or <code>null</code> if there are no additional results.</para>\n      ",
            "documentation": "\n        <p>A token that can be used to retrieve the next set of results, \n            or <code>null</code> if there are no additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListActiveViolationsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The specified resource does not exist.</simpara>\n      ",
          "documentation": "\n         <p>The specified resource does not exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n        <p>Lists the active violations for a given Device Defender security profile.</p>\n      "
    },
    "ListViolationEvents": {
      "name": "ListViolationEvents",
      "http": {
        "method": "GET",
        "uri": "/violation-events?maxResults={maxResults}&nextToken={nextToken}&startTime={startTime}&endTime={endTime}&thingName={thingName}&securityProfileName={securityProfileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The start time for the alerts to be listed.</para>\n      ",
            "documentation": "\n         <p>The start time for the alerts to be listed.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "Timestamp"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The end time for the alerts to be listed.</para>\n      ",
            "documentation": "\n         <p>The end time for the alerts to be listed.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "Timestamp"
          },
          "thingName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>A filter to limit results to those alerts caused by the specified thing.</para>\n      ",
            "documentation": "\n         <p>A filter to limit results to those alerts caused by the specified thing.</p>\n      ",
            "location": "uri",
            "shape_name": "ThingName",
            "min_length": 1,
            "max_length": 128
          },
          "securityProfileName": {
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "zonbookDocumentation": "\n         <para>A filter to limit results to those alerts generated by the specified security profile.</para>\n      ",
            "documentation": "\n         <p>A filter to limit results to those alerts generated by the specified security profile.</p>\n      ",
            "location": "uri",
            "shape_name": "SecurityProfileName",
            "min_length": 1,
            "max_length": 128
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return at one time.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return at one time.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListViolationEventsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "violationEvents": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The security profile violation alerts issued for this account during the given time frame, \n      potentially filtered by security profile, behavior violated, or thing (device) violating.</para>\n      ",
            "documentation": "\n         <p>The security profile violation alerts issued for this account during the given time frame, \n      potentially filtered by security profile, behavior violated, or thing (device) violating.</p>\n      ",
            "shape_name": "ViolationEvents",
            "members": {
              "type": "structure",
              "members": {
                "violationId": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9\\-]+",
                  "zonbookDocumentation": "\n         <para>The ID of the violation event.</para>\n      ",
                  "documentation": "\n         <p>The ID of the violation event.</p>\n      ",
                  "shape_name": "ViolationId",
                  "min_length": 1,
                  "max_length": 128
                },
                "thingName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <para>The name of the thing responsible for the violation event.</para>\n      ",
                  "documentation": "\n         <p>The name of the thing responsible for the violation event.</p>\n      ",
                  "shape_name": "ThingName",
                  "min_length": 1,
                  "max_length": 128
                },
                "securityProfileName": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <para>The name of the security profile whose behavior was violated.</para>\n      ",
                  "documentation": "\n         <p>The name of the security profile whose behavior was violated.</p>\n      ",
                  "shape_name": "SecurityProfileName",
                  "min_length": 1,
                  "max_length": 128
                },
                "behavior": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9:_-]+",
                      "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                      "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                      "required": true,
                      "shape_name": "BehaviorName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "metric": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                      "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                      "shape_name": "BehaviorMetric"
                    },
                    "criteria": {
                      "type": "structure",
                      "members": {
                        "comparisonOperator": {
                          "type": "string",
                          "enum": [
                            "less-than",
                            "less-than-equals",
                            "greater-than",
                            "greater-than-equals",
                            "in-cidr-set",
                            "not-in-cidr-set",
                            "in-port-set",
                            "not-in-port-set"
                          ],
                          "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                          "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                          "shape_name": "ComparisonOperator"
                        },
                        "value": {
                          "type": "structure",
                          "members": {
                            "count": {
                              "type": "long",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "UnsignedLong",
                              "min_length": 0
                            },
                            "cidrs": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "Cidrs",
                              "members": {
                                "type": "string",
                                "pattern": "[a-fA-F0-9:\\.\\/]+",
                                "shape_name": "Cidr",
                                "documentation": null,
                                "min_length": 2,
                                "max_length": 43
                              }
                            },
                            "ports": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                              "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                              "shape_name": "Ports",
                              "members": {
                                "type": "integer",
                                "shape_name": "Port",
                                "documentation": null,
                                "min_length": 0,
                                "max_length": 65535
                              }
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "MetricValue"
                        },
                        "durationSeconds": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                          "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                          "shape_name": "DurationSeconds"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                      "shape_name": "BehaviorCriteria"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The behavior which was violated.</para>\n      ",
                  "documentation": "\n         <p>The behavior which was violated.</p>\n      ",
                  "shape_name": "Behavior"
                },
                "metricValue": {
                  "type": "structure",
                  "members": {
                    "count": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "UnsignedLong",
                      "min_length": 0
                    },
                    "cidrs": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "Cidrs",
                      "members": {
                        "type": "string",
                        "pattern": "[a-fA-F0-9:\\.\\/]+",
                        "shape_name": "Cidr",
                        "documentation": null,
                        "min_length": 2,
                        "max_length": 43
                      }
                    },
                    "ports": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "Ports",
                      "members": {
                        "type": "integer",
                        "shape_name": "Port",
                        "documentation": null,
                        "min_length": 0,
                        "max_length": 65535
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <para>The value of the metric (the measurement).</para>\n      ",
                  "documentation": "\n        <p>The value of the metric (the measurement).</p>\n      ",
                  "shape_name": "MetricValue"
                },
                "violationEventType": {
                  "type": "string",
                  "enum": [
                    "in-alarm",
                    "alarm-cleared",
                    "alarm-invalidated"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of violation event.</para>\n      ",
                  "documentation": "\n         <p>The type of violation event.</p>\n      ",
                  "shape_name": "ViolationEventType"
                },
                "violationEventTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time the violation event occurred.</para>\n      ",
                  "documentation": "\n         <p>The time the violation event occurred.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a Device Defender security profile behavior violation.</simpara>\n      ",
              "documentation": "\n         <p>Information about a Device Defender security profile behavior violation.</p>\n      ",
              "shape_name": "ViolationEvent"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</para>\n      ",
            "documentation": "\n         <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no\n        additional results.</p>\n      ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListViolationEventsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the Device Defender security profile violations discovered during the given time period. \n      You can use filters to limit the results to those alerts issued for a particular security profile, \n      behavior or thing (device).</p>\n      "
    },
    "ValidateSecurityProfileBehaviors": {
      "name": "ValidateSecurityProfileBehaviors",
      "http": {
        "method": "POST",
        "uri": "/security-profile-behaviors/validate"
      },
      "input": {
        "type": "structure",
        "members": {
          "behaviors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Specifies the behaviors that, when violated by a device (thing), cause an alert.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>\n      ",
            "required": true,
            "shape_name": "Behaviors",
            "max_length": 100,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9:_-]+",
                  "zonbookDocumentation": "\n         <simpara>The name you have given to the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>The name you have given to the behavior.</p>\n      ",
                  "required": true,
                  "shape_name": "BehaviorName",
                  "min_length": 1,
                  "max_length": 128
                },
                "metric": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>What is measured by the behavior.</simpara>\n      ",
                  "documentation": "\n         <p>What is measured by the behavior.</p>\n      ",
                  "shape_name": "BehaviorMetric"
                },
                "criteria": {
                  "type": "structure",
                  "members": {
                    "comparisonOperator": {
                      "type": "string",
                      "enum": [
                        "less-than",
                        "less-than-equals",
                        "greater-than",
                        "greater-than-equals",
                        "in-cidr-set",
                        "not-in-cidr-set",
                        "in-port-set",
                        "not-in-port-set"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The operator that relates the thing measured (<code>metric</code>) to the\n         criteria (<code>value</code>).</p>\n      ",
                      "shape_name": "ComparisonOperator"
                    },
                    "value": {
                      "type": "structure",
                      "members": {
                        "count": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a numeric value, use this \n          to specify that numeric value to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "UnsignedLong",
                          "min_length": 0
                        },
                        "cidrs": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Cidrs",
                          "members": {
                            "type": "string",
                            "pattern": "[a-fA-F0-9:\\.\\/]+",
                            "shape_name": "Cidr",
                            "documentation": null,
                            "min_length": 2,
                            "max_length": 43
                          }
                        },
                        "ports": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</simpara>\n      ",
                          "documentation": "\n         <p>If the <code>comparisonOperator</code> calls for a set of ports, use this\n          to specify that set to be compared with the <code>metric</code>.</p>\n      ",
                          "shape_name": "Ports",
                          "members": {
                            "type": "integer",
                            "shape_name": "Port",
                            "documentation": null,
                            "min_length": 0,
                            "max_length": 65535
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The value to be compared with the <code>metric</code>.</simpara>\n      ",
                      "documentation": "\n         <p>The value to be compared with the <code>metric</code>.</p>\n      ",
                      "shape_name": "MetricValue"
                    },
                    "durationSeconds": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Use this to specify the period of time over which the behavior is evaluated,\n          for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).</p>\n      ",
                      "shape_name": "DurationSeconds"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The criteria that determine if a device is behaving normally in regard to\n          the <code>metric</code>.</p>\n      ",
                  "shape_name": "BehaviorCriteria"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A Device Defender security profile behavior.</simpara>\n      ",
              "documentation": "\n         <p>A Device Defender security profile behavior.</p>\n      ",
              "shape_name": "Behavior"
            }
          }
        },
        "shape_name": "ValidateSecurityProfileBehaviorsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "valid": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>True if the behaviors were valid.</simpara>\n      ",
            "documentation": "\n         <p>True if the behaviors were valid.</p>\n      ",
            "shape_name": "Valid"
          },
          "validationErrors": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of any errors found in the behaviors.</simpara>\n      ",
            "documentation": "\n         <p>The list of any errors found in the behaviors.</p>\n      ",
            "shape_name": "ValidationErrors",
            "members": {
              "type": "structure",
              "members": {
                "errorMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of an error found in the behaviors.</simpara>\n      ",
                  "documentation": "\n         <p>The description of an error found in the behaviors.</p>\n      ",
                  "shape_name": "ErrorMessage",
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about an error found in a behavior specification.</simpara>\n      ",
              "documentation": "\n         <p>Information about an error found in a behavior specification.</p>\n      ",
              "shape_name": "ValidationError"
            }
          }
        },
        "shape_name": "ValidateSecurityProfileBehaviorsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is not valid.</simpara>\n      ",
          "documentation": "\n         <p>The request is not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The rate exceeds the limit.</simpara>\n      ",
          "documentation": "\n         <p>The rate exceeds the limit.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>The message for the exception.</simpara>\n      ",
              "documentation": "\n         <p>The message for the exception.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>An unexpected error has occurred.</simpara>\n      ",
          "documentation": "\n         <p>An unexpected error has occurred.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Validates a Device Defender security profile behaviors specification.</p>\n      "
    }
  }
}
